celtech.CoreTest -> a.a:
    12:12:void <init>() -> <init>
    21:22:void main(java.lang.String[]) -> a
celtech.Lookup -> a.b:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.coreUI.components.Notifications.NotificationDisplay notificationDisplay -> b
    celtech.configuration.UserPreferences userPreferences -> c
    celtech.coreUI.SpinnerControl spinnerControl -> d
    javafx.beans.property.ObjectProperty currentlySelectedPrinterProperty -> e
    javafx.beans.property.ObjectProperty selectedProject -> f
    java.util.Map projectGUIStates -> g
    31:31:void <init>() -> <init>
    77:111:void setupDefaultValues() -> a
    115:115:celtech.coreUI.SpinnerControl getSpinnerControl() -> b
    121:122:void setSpinnerControl(celtech.coreUI.SpinnerControl) -> a
    126:126:javafx.beans.property.ReadOnlyObjectProperty getSelectedPrinterProperty() -> c
    131:132:void setSelectedPrinter(celtech.roboxbase.printerControl.model.Printer) -> a
    136:136:celtech.configuration.UserPreferences getUserPreferences() -> d
    141:141:javafx.beans.property.ObjectProperty getSelectedProjectProperty() -> e
    146:147:void setSelectedProject(celtech.appManager.Project) -> a
    151:155:void removeProjectReferences(celtech.appManager.Project) -> b
    159:164:celtech.coreUI.ProjectGUIState getProjectGUIState(celtech.appManager.Project) -> c
    169:169:celtech.coreUI.components.Notifications.NotificationDisplay getNotificationDisplay() -> f
    174:175:void setNotificationDisplay(celtech.coreUI.components.Notifications.NotificationDisplay) -> a
    179:179:java.lang.String i18n(java.lang.String) -> a
    42:49:void lambda$static$0(javafx.collections.ListChangeListener$Change) -> a
    34:73:void <clinit>() -> <clinit>
celtech.WebEngineFix.AMURLHandler -> celtech.WebEngineFix.a:
    16:16:void <init>() -> <init>
    22:26:java.net.URLConnection openConnection(java.net.URL) -> openConnection
celtech.WebEngineFix.AMURLStreamHandlerFactory -> celtech.WebEngineFix.b:
    10:10:void <init>() -> <init>
    15:19:java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
celtech.WebEngineFix.Accessor -> celtech.WebEngineFix.c:
    celtech.WebEngineFix.Accessor$PageAccessor pageAccessor -> a
    7:7:void <init>() -> <init>
    16:17:void setPageAccessor(celtech.WebEngineFix.Accessor$PageAccessor) -> a
    20:20:com.sun.webkit.WebPage getPageFor(celtech.WebEngineFix.WebEngine) -> a
    celtech.WebEngineFix.WebEngine getEngine() -> a
    celtech.WebEngineFix.WebView getView() -> b
    com.sun.webkit.WebPage getPage() -> c
    void addChild(javafx.scene.Node) -> a
    void removeChild(javafx.scene.Node) -> b
    void addViewListener(javafx.beans.InvalidationListener) -> a
celtech.WebEngineFix.Accessor$PageAccessor -> celtech.WebEngineFix.c$a:
    com.sun.webkit.WebPage getPage(celtech.WebEngineFix.WebEngine) -> getPage
celtech.WebEngineFix.DirectoryLock -> celtech.WebEngineFix.DirectoryLock:
    java.util.logging.Logger logger -> a
    java.util.Map descriptors -> b
    celtech.WebEngineFix.DirectoryLock$Descriptor descriptor -> c
    26:55:void <init>(java.io.File) -> <init>
    59:79:void close() -> a
    83:84:int referenceCount(java.io.File) -> a
    88:94:java.io.File canonicalize(java.io.File) -> b
    98:98:java.io.File lockFile(java.io.File) -> c
    16:18:void <clinit>() -> <clinit>
celtech.WebEngineFix.DirectoryLock$1 -> celtech.WebEngineFix.DirectoryLock$1:
celtech.WebEngineFix.DirectoryLock$Descriptor -> celtech.WebEngineFix.DirectoryLock$a:
    java.io.File directory -> a
    java.io.RandomAccessFile lockRaf -> b
    java.nio.channels.FileLock lock -> c
    int referenceCount -> d
    111:115:void <init>(java.io.File,java.io.RandomAccessFile,java.nio.channels.FileLock) -> <init>
    102:102:void <init>(java.io.File,java.io.RandomAccessFile,java.nio.channels.FileLock,celtech.WebEngineFix.DirectoryLock$1) -> <init>
    102:102:int access$108(celtech.WebEngineFix.DirectoryLock$Descriptor) -> a
    102:102:int access$110(celtech.WebEngineFix.DirectoryLock$Descriptor) -> b
    102:102:int access$100(celtech.WebEngineFix.DirectoryLock$Descriptor) -> c
    102:102:java.nio.channels.FileLock access$200(celtech.WebEngineFix.DirectoryLock$Descriptor) -> d
    102:102:java.io.File access$300(celtech.WebEngineFix.DirectoryLock$Descriptor) -> e
    102:102:java.io.RandomAccessFile access$400(celtech.WebEngineFix.DirectoryLock$Descriptor) -> f
celtech.WebEngineFix.DirectoryLock$DirectoryAlreadyInUseException -> celtech.WebEngineFix.DirectoryLock$DirectoryAlreadyInUseException:
    celtech.WebEngineFix.DirectoryLock this$0 -> this$0
    119:121:void <init>(celtech.WebEngineFix.DirectoryLock,java.lang.String,java.lang.Throwable) -> <init>
celtech.WebEngineFix.InputMethodClientImpl -> celtech.WebEngineFix.d:
    java.lang.ref.WeakReference wvRef -> a
    com.sun.webkit.WebPage webPage -> b
    boolean state -> c
    28:34:void <init>(celtech.WebEngineFix.WebView,com.sun.webkit.WebPage) -> <init>
    37:42:void activateInputMethods(boolean) -> activateInputMethods
    45:45:boolean getInputMethodState() -> a
    52:89:com.sun.webkit.event.WCInputMethodEvent convertToWCInputMethodEvent(javafx.scene.input.InputMethodEvent) -> a
    94:98:javafx.geometry.Point2D getTextLocation(int) -> getTextLocation
    102:103:int getLocationOffset(int,int) -> getLocationOffset
    108:108:void cancelLatestCommittedText() -> cancelLatestCommittedText
    111:111:java.lang.String getSelectedText() -> getSelectedText
    116:116:int getInsertPositionOffset() -> getInsertPositionOffset
    122:124:java.lang.String getCommittedText(int,int) -> getCommittedText
    130:130:int getCommittedTextLength() -> getCommittedTextLength
celtech.WebEngineFix.RenderThemeImpl -> celtech.WebEngineFix.RenderThemeImpl:
    java.util.logging.Logger log -> a
    celtech.WebEngineFix.Accessor accessor -> b
    boolean isDefault -> c
    celtech.WebEngineFix.RenderThemeImpl$Pool pool -> d
    212:219:void <init>(celtech.WebEngineFix.Accessor) -> <init>
    221:223:void <init>() -> <init>
    226:229:void ensureNotDefault() -> b
    240:316:com.sun.webkit.graphics.Ref createWidget(long,int,int,int,int,int,java.nio.ByteBuffer) -> createWidget
    321:327:java.lang.String getMeterStyle(int) -> a
    337:349:void drawWidget(com.sun.webkit.graphics.WCGraphicsContext,com.sun.webkit.graphics.Ref,int,int) -> drawWidget
    353:360:com.sun.webkit.graphics.WCSize getWidgetSize(com.sun.webkit.graphics.Ref) -> getWidgetSize
    365:371:int getRadioButtonSize() -> getRadioButtonSize
    377:380:int getSelectionColor(int) -> getSelectionColor
    385:385:boolean hasState(int,int) -> b
    216:217:void lambda$new$0(celtech.WebEngineFix.Accessor,celtech.WebEngineFix.RenderThemeImpl$FormControl) -> a
    40:40:java.util.logging.Logger access$000() -> a
    40:40:boolean access$1300(int,int) -> a
    41:41:void <clinit>() -> <clinit>
celtech.WebEngineFix.RenderThemeImpl$1 -> celtech.WebEngineFix.RenderThemeImpl$1:
    int[] $SwitchMap$celtech$WebEngineFix$RenderThemeImpl$WidgetType -> a
    250:250:void <clinit>() -> <clinit>
celtech.WebEngineFix.RenderThemeImpl$FormButton -> celtech.WebEngineFix.RenderThemeImpl$a:
    409:409:void <init>() -> <init>
    411:411:javafx.scene.control.Control asControl() -> a
    414:419:void setState(int) -> a
    421:421:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    409:409:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormCheckBox -> celtech.WebEngineFix.RenderThemeImpl$b:
    442:442:void <init>() -> <init>
    444:444:javafx.scene.control.Control asControl() -> a
    447:451:void setState(int) -> a
    453:453:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    442:442:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormControl -> celtech.WebEngineFix.RenderThemeImpl$c:
    javafx.scene.control.Control asControl() -> a
    void setState(int) -> a
celtech.WebEngineFix.RenderThemeImpl$FormControlRef -> celtech.WebEngineFix.RenderThemeImpl$d:
    java.lang.ref.WeakReference fcRef -> a
    391:393:void <init>(celtech.WebEngineFix.RenderThemeImpl$FormControl) -> <init>
    396:396:celtech.WebEngineFix.RenderThemeImpl$FormControl asFormControl() -> a
    388:388:void <init>(celtech.WebEngineFix.RenderThemeImpl$FormControl,celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
    388:388:celtech.WebEngineFix.RenderThemeImpl$FormControl access$1200(celtech.WebEngineFix.RenderThemeImpl$FormControlRef) -> a
celtech.WebEngineFix.RenderThemeImpl$FormMenuList -> celtech.WebEngineFix.RenderThemeImpl$e:
    503:508:void <init>() -> <init>
    510:510:javafx.scene.control.Control asControl() -> a
    513:516:void setState(int) -> a
    518:518:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    501:501:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormMenuListButton -> celtech.WebEngineFix.RenderThemeImpl$f:
    int MAX_WIDTH -> a
    int MIN_WIDTH -> b
    526:526:javafx.scene.control.Control asControl() -> a
    529:533:void setState(int) -> a
    535:539:void <init>() -> <init>
    546:553:void resize(double,double) -> resize
    569:569:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    521:521:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormMenuListButton$Skin -> celtech.WebEngineFix.RenderThemeImpl$f$a:
    celtech.WebEngineFix.RenderThemeImpl$FormMenuListButton this$0 -> a
    556:566:void <init>(celtech.WebEngineFix.RenderThemeImpl$FormMenuListButton) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormProgressBar -> celtech.WebEngineFix.RenderThemeImpl$g:
    celtech.WebEngineFix.RenderThemeImpl$WidgetType type -> a
    486:488:void <init>(celtech.WebEngineFix.RenderThemeImpl$WidgetType) -> <init>
    490:490:javafx.scene.control.Control asControl() -> a
    493:496:void setState(int) -> a
    498:498:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    483:483:void <init>(celtech.WebEngineFix.RenderThemeImpl$WidgetType,celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormRadioButton -> celtech.WebEngineFix.RenderThemeImpl$h:
    456:456:void <init>() -> <init>
    458:458:javafx.scene.control.Control asControl() -> a
    461:465:void setState(int) -> a
    467:467:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    456:456:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormSlider -> celtech.WebEngineFix.RenderThemeImpl$i:
    470:470:void <init>() -> <init>
    472:472:javafx.scene.control.Control asControl() -> a
    475:478:void setState(int) -> a
    480:480:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    470:470:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$FormTextField -> celtech.WebEngineFix.RenderThemeImpl$j:
    426:428:void <init>() -> <init>
    430:430:javafx.scene.control.Control asControl() -> a
    433:437:void setState(int) -> a
    439:439:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    424:424:void <init>(celtech.WebEngineFix.RenderThemeImpl$1) -> <init>
celtech.WebEngineFix.RenderThemeImpl$Pool -> celtech.WebEngineFix.RenderThemeImpl$k:
    int INITIAL_CAPACITY -> b
    int capacity -> c
    java.util.LinkedHashMap ids -> d
    java.util.Map pool -> e
    celtech.WebEngineFix.RenderThemeImpl$Pool$Notifier notifier -> f
    java.lang.String type -> g
    boolean $assertionsDisabled -> a
    79:105:void <init>(celtech.WebEngineFix.RenderThemeImpl$Pool$Notifier,java.lang.Class) -> <init>
    108:128:celtech.WebEngineFix.RenderThemeImpl$Widget get(long) -> a
    132:155:void put(long,celtech.WebEngineFix.RenderThemeImpl$Widget,int) -> a
    158:173:void clear() -> a
    76:76:void <clinit>() -> <clinit>
celtech.WebEngineFix.RenderThemeImpl$Pool$Notifier -> celtech.WebEngineFix.RenderThemeImpl$k$a:
    void notifyRemoved(java.lang.Object) -> notifyRemoved
celtech.WebEngineFix.RenderThemeImpl$ViewListener -> celtech.WebEngineFix.RenderThemeImpl$l:
    celtech.WebEngineFix.RenderThemeImpl$Pool pool -> a
    celtech.WebEngineFix.Accessor accessor -> b
    com.sun.webkit.LoadListenerClient loadListener -> c
    181:184:void <init>(celtech.WebEngineFix.RenderThemeImpl$Pool,celtech.WebEngineFix.Accessor) -> <init>
    187:209:void invalidated(javafx.beans.Observable) -> invalidated
    176:176:celtech.WebEngineFix.RenderThemeImpl$Pool access$100(celtech.WebEngineFix.RenderThemeImpl$ViewListener) -> a
celtech.WebEngineFix.RenderThemeImpl$ViewListener$1 -> celtech.WebEngineFix.RenderThemeImpl$l$1:
    celtech.WebEngineFix.RenderThemeImpl$ViewListener this$0 -> a
    191:191:void <init>(celtech.WebEngineFix.RenderThemeImpl$ViewListener) -> <init>
    196:201:void dispatchLoadEvent(long,int,java.lang.String,java.lang.String,double,int) -> dispatchLoadEvent
    205:205:void dispatchResourceLoadEvent(long,int,java.lang.String,java.lang.String,double,int) -> dispatchResourceLoadEvent
celtech.WebEngineFix.RenderThemeImpl$Widget -> celtech.WebEngineFix.RenderThemeImpl$m:
    celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
celtech.WebEngineFix.RenderThemeImpl$WidgetType -> celtech.WebEngineFix.RenderThemeImpl$WidgetType:
    celtech.WebEngineFix.RenderThemeImpl$WidgetType TEXTFIELD -> TEXTFIELD
    celtech.WebEngineFix.RenderThemeImpl$WidgetType BUTTON -> BUTTON
    celtech.WebEngineFix.RenderThemeImpl$WidgetType CHECKBOX -> CHECKBOX
    celtech.WebEngineFix.RenderThemeImpl$WidgetType RADIOBUTTON -> RADIOBUTTON
    celtech.WebEngineFix.RenderThemeImpl$WidgetType MENULIST -> MENULIST
    celtech.WebEngineFix.RenderThemeImpl$WidgetType MENULISTBUTTON -> MENULISTBUTTON
    celtech.WebEngineFix.RenderThemeImpl$WidgetType SLIDER -> SLIDER
    celtech.WebEngineFix.RenderThemeImpl$WidgetType PROGRESSBAR -> PROGRESSBAR
    celtech.WebEngineFix.RenderThemeImpl$WidgetType METER -> METER
    celtech.WebEngineFix.RenderThemeImpl$WidgetType SCROLLBAR -> SCROLLBAR
    java.util.HashMap map -> map
    int value -> value
    celtech.WebEngineFix.RenderThemeImpl$WidgetType[] $VALUES -> $VALUES
    43:43:celtech.WebEngineFix.RenderThemeImpl$WidgetType[] values() -> values
    43:43:celtech.WebEngineFix.RenderThemeImpl$WidgetType valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int,int) -> <init>
    62:62:celtech.WebEngineFix.RenderThemeImpl$WidgetType convert(int) -> convert
    43:43:celtech.WebEngineFix.RenderThemeImpl$WidgetType access$200(int) -> access$200
    43:60:void <clinit>() -> <clinit>
celtech.WebEngineFix.Renderer -> celtech.WebEngineFix.e:
    celtech.WebEngineFix.Renderer instance -> a
    7:7:void <init>() -> <init>
    11:12:void setRenderer(celtech.WebEngineFix.Renderer) -> a
    15:15:celtech.WebEngineFix.Renderer getRenderer() -> a
    void render(javafx.scene.control.Control,com.sun.webkit.graphics.WCGraphicsContext) -> a
celtech.WebEngineFix.ScrollBarThemeImpl -> celtech.WebEngineFix.f:
    java.util.logging.Logger log -> a
    java.lang.ref.WeakReference testSBRef -> b
    boolean thicknessInitialized -> c
    celtech.WebEngineFix.Accessor accessor -> d
    celtech.WebEngineFix.RenderThemeImpl$Pool pool -> e
    36:98:void <init>(celtech.WebEngineFix.Accessor) -> <init>
    101:101:javafx.geometry.Orientation convertOrientation(int) -> a
    105:119:void adjustScrollBar(javafx.scene.control.ScrollBar,int,int,int) -> a
    124:154:void adjustScrollBar(javafx.scene.control.ScrollBar,int,int,int,int,int,int) -> a
    160:168:com.sun.webkit.graphics.Ref createWidget(long,int,int,int,int,int,int) -> createWidget
    174:188:void paint(com.sun.webkit.graphics.WCGraphicsContext,com.sun.webkit.graphics.Ref,int,int,int,int) -> paint
    191:195:com.sun.webkit.graphics.WCSize getWidgetSize(com.sun.webkit.graphics.Ref) -> getWidgetSize
    202:266:int hitTest(int,int,int,int,int,int,int,int) -> hitTest
    270:291:int thumbPosition() -> a
    299:316:int getThumbLength(int,int,int,int,int,int) -> getThumbLength
    320:337:int getTrackPosition(int,int,int) -> getTrackPosition
    341:358:int getTrackLength(int,int,int) -> getTrackLength
    365:373:int getThumbPosition(int,int,int,int,int,int) -> getThumbPosition
    377:388:void initializeThickness() -> b
    391:391:javafx.scene.Node getThumb(javafx.scene.control.ScrollBar) -> a
    395:395:javafx.scene.Node getTrack(javafx.scene.control.ScrollBar) -> b
    399:399:javafx.scene.Node getIncButton(javafx.scene.control.ScrollBar) -> c
    403:403:javafx.scene.Node getDecButton(javafx.scene.control.ScrollBar) -> d
    407:412:javafx.scene.Node findNode(javafx.scene.control.ScrollBar,java.lang.String) -> a
    86:87:void lambda$new$0(celtech.WebEngineFix.Accessor,celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarWidget) -> a
    32:32:void access$000(celtech.WebEngineFix.ScrollBarThemeImpl) -> a
    32:32:java.lang.ref.WeakReference access$202(celtech.WebEngineFix.ScrollBarThemeImpl,java.lang.ref.WeakReference) -> a
    34:34:void <clinit>() -> <clinit>
celtech.WebEngineFix.ScrollBarThemeImpl$1 -> celtech.WebEngineFix.f$1:
    celtech.WebEngineFix.Accessor val$accessor -> a
    celtech.WebEngineFix.ScrollBarThemeImpl this$0 -> b
    88:88:void <init>(celtech.WebEngineFix.ScrollBarThemeImpl,celtech.WebEngineFix.RenderThemeImpl$Pool,celtech.WebEngineFix.Accessor,celtech.WebEngineFix.Accessor) -> <init>
    90:95:void invalidated(javafx.beans.Observable) -> invalidated
celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarRef -> celtech.WebEngineFix.f$a:
    java.lang.ref.WeakReference sbRef -> a
    68:70:void <init>(celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarWidget) -> <init>
    73:73:javafx.scene.control.Control asControl() -> a
    65:65:void <init>(celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarWidget,celtech.WebEngineFix.ScrollBarThemeImpl$1) -> <init>
    65:65:javafx.scene.control.Control access$400(celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarRef) -> a
celtech.WebEngineFix.ScrollBarThemeImpl$ScrollBarWidget -> celtech.WebEngineFix.f$b:
    celtech.WebEngineFix.ScrollBarThemeImpl this$0 -> a
    46:50:void <init>(celtech.WebEngineFix.ScrollBarThemeImpl) -> <init>
    53:55:void impl_updatePeer() -> impl_updatePeer
    57:57:celtech.WebEngineFix.RenderThemeImpl$WidgetType getType() -> b
    60:62:void layoutChildren() -> layoutChildren
    45:45:void <init>(celtech.WebEngineFix.ScrollBarThemeImpl,celtech.WebEngineFix.ScrollBarThemeImpl$1) -> <init>
celtech.WebEngineFix.ThemeClientImpl -> celtech.WebEngineFix.g:
    celtech.WebEngineFix.Accessor accessor -> a
    10:12:void <init>(celtech.WebEngineFix.Accessor) -> <init>
    15:15:com.sun.webkit.graphics.RenderTheme createRenderTheme() -> createRenderTheme
    19:19:com.sun.webkit.graphics.ScrollBarTheme createScrollBarTheme() -> createScrollBarTheme
celtech.WebEngineFix.UIClientImpl -> celtech.WebEngineFix.h:
    celtech.WebEngineFix.Accessor accessor -> a
    javafx.stage.FileChooser chooser -> b
    javafx.scene.input.ClipboardContent content -> c
    javafx.scene.input.DataFormat DF_DRAG_IMAGE -> d
    javafx.scene.input.DataFormat DF_DRAG_IMAGE_OFFSET -> e
    49:51:void <init>(celtech.WebEngineFix.Accessor) -> <init>
    54:54:celtech.WebEngineFix.WebEngine getWebEngine() -> a
    58:58:java.security.AccessControlContext getAccessContext() -> b
    63:71:com.sun.webkit.WebPage createPage(boolean,boolean,boolean,boolean) -> createPage
    75:79:void dispatchWebEvent(javafx.event.EventHandler,javafx.scene.web.WebEvent) -> a
    82:88:void notifyVisibilityChanged(boolean) -> a
    91:92:void closePage() -> closePage
    95:96:void showView() -> showView
    99:109:com.sun.webkit.graphics.WCRectangle getViewBounds() -> getViewBounds
    113:120:void setViewBounds(com.sun.webkit.graphics.WCRectangle) -> setViewBounds
    123:129:void setStatusbarText(java.lang.String) -> setStatusbarText
    132:138:void alert(java.lang.String) -> alert
    141:146:boolean confirm(java.lang.String) -> confirm
    150:156:java.lang.String prompt(java.lang.String,java.lang.String) -> prompt
    161:194:java.lang.String[] chooseFile(java.lang.String,boolean) -> chooseFile
    200:200:void print() -> print
    204:210:javafx.scene.input.DataFormat getDataFormat(java.lang.String) -> a
    222:275:void startDrag(com.sun.webkit.graphics.WCImage,int,int,int,int,java.lang.String[],java.lang.Object[]) -> startDrag
    278:285:void confirmStartDrag() -> confirmStartDrag
    288:288:boolean isDragConfirmed() -> isDragConfirmed
    295:305:java.awt.image.BufferedImage toBufferedImage(javafx.scene.image.Image) -> a
    154:154:java.lang.String lambda$prompt$3(celtech.WebEngineFix.WebEngine,javafx.scene.web.PromptData) -> a
    144:144:java.lang.Boolean lambda$confirm$2(celtech.WebEngineFix.WebEngine,java.lang.String) -> a
    76:77:java.lang.Void lambda$dispatchWebEvent$1(javafx.event.EventHandler,javafx.scene.web.WebEvent) -> b
    68:68:celtech.WebEngineFix.WebEngine lambda$createPage$0(celtech.WebEngineFix.WebEngine,javafx.scene.web.PopupFeatures) -> a
    214:215:void <clinit>() -> <clinit>
celtech.WebEngineFix.Util -> celtech.WebEngineFix.i:
    15:16:void <init>() -> <init>
    30:47:java.lang.String adjustUrlForWebKit(java.lang.String,java.lang.String) -> a
    51:51:java.lang.String formatHeaders(java.lang.String) -> a
celtech.WebEngineFix.WebEngine -> celtech.WebEngineFix.j:
    java.util.logging.Logger logger -> a
    int instanceCount -> b
    javafx.beans.property.ObjectProperty view -> c
    celtech.WebEngineFix.WebEngine$LoadWorker loadWorker -> d
    com.sun.webkit.WebPage page -> e
    celtech.WebEngineFix.WebEngine$SelfDisposer disposer -> f
    celtech.WebEngineFix.WebEngine$DebuggerImpl debugger -> g
    boolean userDataDirectoryApplied -> h
    celtech.WebEngineFix.WebEngine$DocumentProperty document -> i
    javafx.beans.property.ReadOnlyStringWrapper location -> j
    javafx.beans.property.ReadOnlyStringWrapper title -> k
    javafx.beans.property.BooleanProperty javaScriptEnabled -> l
    javafx.beans.property.StringProperty userStyleSheetLocation -> m
    javafx.beans.property.ObjectProperty userDataDirectory -> n
    javafx.beans.property.StringProperty userAgent -> o
    javafx.beans.property.ObjectProperty onAlert -> p
    javafx.beans.property.ObjectProperty onStatusChanged -> q
    javafx.beans.property.ObjectProperty onResized -> r
    javafx.beans.property.ObjectProperty onVisibilityChanged -> s
    javafx.beans.property.ObjectProperty createPopupHandler -> t
    javafx.beans.property.ObjectProperty confirmHandler -> u
    javafx.beans.property.ObjectProperty promptHandler -> v
    javafx.beans.property.ObjectProperty onError -> w
    celtech.WebEngineFix.WebHistory history -> x
    318:318:javafx.concurrent.Worker getLoadWorker() -> a
    331:331:org.w3c.dom.Document getDocument() -> b
    338:338:javafx.beans.property.ReadOnlyObjectProperty documentProperty() -> c
    351:351:java.lang.String getLocation() -> d
    357:357:javafx.beans.property.ReadOnlyStringProperty locationProperty() -> e
    360:363:void updateLocation(java.lang.String) -> e
    375:375:java.lang.String getTitle() -> f
    381:381:javafx.beans.property.ReadOnlyStringProperty titleProperty() -> g
    384:385:void updateTitle() -> N
    399:400:void setJavaScriptEnabled(boolean) -> a
    403:403:boolean isJavaScriptEnabled() -> h
    407:423:javafx.beans.property.BooleanProperty javaScriptEnabledProperty() -> i
    439:440:void setUserStyleSheetLocation(java.lang.String) -> a
    443:443:java.lang.String getUserStyleSheetLocation() -> j
    447:475:byte[] readFully(java.io.BufferedInputStream) -> a
    479:522:javafx.beans.property.StringProperty userStyleSheetLocationProperty() -> k
    565:565:java.io.File getUserDataDirectory() -> l
    569:570:void setUserDataDirectory(java.io.File) -> a
    573:573:javafx.beans.property.ObjectProperty userDataDirectoryProperty() -> m
    586:587:void setUserAgent(java.lang.String) -> b
    590:590:java.lang.String getUserAgent() -> n
    594:610:javafx.beans.property.StringProperty userAgentProperty() -> o
    621:621:javafx.event.EventHandler getOnAlert() -> p
    628:628:void setOnAlert(javafx.event.EventHandler) -> a
    634:634:javafx.beans.property.ObjectProperty onAlertProperty() -> q
    645:645:javafx.event.EventHandler getOnStatusChanged() -> r
    652:652:void setOnStatusChanged(javafx.event.EventHandler) -> b
    658:658:javafx.beans.property.ObjectProperty onStatusChangedProperty() -> s
    669:669:javafx.event.EventHandler getOnResized() -> t
    676:676:void setOnResized(javafx.event.EventHandler) -> c
    683:683:javafx.beans.property.ObjectProperty onResizedProperty() -> u
    694:694:javafx.event.EventHandler getOnVisibilityChanged() -> v
    701:701:void setOnVisibilityChanged(javafx.event.EventHandler) -> d
    708:708:javafx.beans.property.ObjectProperty onVisibilityChangedProperty() -> w
    720:720:javafx.util.Callback getCreatePopupHandler() -> x
    728:728:void setCreatePopupHandler(javafx.util.Callback) -> a
    742:742:javafx.beans.property.ObjectProperty createPopupHandlerProperty() -> y
    753:753:javafx.util.Callback getConfirmHandler() -> z
    760:760:void setConfirmHandler(javafx.util.Callback) -> b
    768:768:javafx.beans.property.ObjectProperty confirmHandlerProperty() -> A
    780:780:javafx.util.Callback getPromptHandler() -> B
    788:788:void setPromptHandler(javafx.util.Callback) -> c
    798:798:javafx.beans.property.ObjectProperty promptHandlerProperty() -> C
    810:810:javafx.event.EventHandler getOnError() -> D
    814:815:void setOnError(javafx.event.EventHandler) -> e
    818:818:javafx.beans.property.ObjectProperty onErrorProperty() -> E
    826:827:void <init>() -> <init>
    833:834:void <init>(java.lang.String) -> <init>
    294:863:void <init>(java.lang.String,boolean,java.lang.String) -> <init>
    871:891:void load(java.lang.String,java.lang.String) -> a
    900:901:void loadContent(java.lang.String) -> c
    912:916:void loadContent(java.lang.String,java.lang.String) -> b
    924:926:void reload() -> F
    937:937:celtech.WebEngineFix.WebHistory getHistory() -> G
    961:963:java.lang.Object executeScript(java.lang.String) -> d
    967:967:long getMainFrame() -> O
    971:971:com.sun.webkit.WebPage getPage() -> H
    975:976:void setView(celtech.WebEngineFix.WebView) -> a
    979:981:void stop() -> P
    984:1059:void applyUserDataDirectory() -> Q
    1065:1067:java.io.File defaultUserDataDirectory() -> R
    1072:1079:void createDirectories(java.io.File) -> b
    1084:1089:void fireError(javafx.event.EventType,java.lang.String,java.lang.Throwable) -> a
    1093:1094:void dispose() -> I
    1197:1198:void checkThread() -> J
    1477:1477:com.sun.javafx.scene.web.Debugger impl_getDebugger() -> K
    1578:1588:void print(javafx.print.PrinterJob) -> a
    713:713:celtech.WebEngineFix.WebEngine lambda$new$1(javafx.scene.web.PopupFeatures) -> a
    269:269:com.sun.webkit.WebPage lambda$static$0(celtech.WebEngineFix.WebEngine) -> i
    267:267:com.sun.webkit.WebPage access$400(celtech.WebEngineFix.WebEngine) -> a
    267:267:byte[] access$500(celtech.WebEngineFix.WebEngine,java.io.BufferedInputStream) -> a
    267:267:int access$1410() -> L
    267:267:int access$1400() -> M
    267:267:javafx.beans.property.ObjectProperty access$1600(celtech.WebEngineFix.WebEngine) -> b
    267:267:celtech.WebEngineFix.WebEngine$LoadWorker access$1700(celtech.WebEngineFix.WebEngine) -> c
    267:267:void access$1800(celtech.WebEngineFix.WebEngine) -> d
    267:267:long access$1900(celtech.WebEngineFix.WebEngine) -> e
    267:267:void access$2000(celtech.WebEngineFix.WebEngine,java.lang.String) -> a
    267:267:void access$2100(celtech.WebEngineFix.WebEngine) -> f
    267:267:celtech.WebEngineFix.WebEngine$DocumentProperty access$2200(celtech.WebEngineFix.WebEngine) -> g
    267:267:celtech.WebEngineFix.WebEngine$DebuggerImpl access$2300(celtech.WebEngineFix.WebEngine) -> h
    269:287:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebEngine$1 -> celtech.WebEngineFix.j$1:
    celtech.WebEngineFix.WebEngine this$0 -> a
    408:408:void <init>(celtech.WebEngineFix.WebEngine,boolean) -> <init>
    410:412:void invalidated() -> invalidated
    415:415:java.lang.Object getBean() -> getBean
    419:419:java.lang.String getName() -> getName
celtech.WebEngineFix.WebEngine$2 -> celtech.WebEngineFix.j$2:
    java.lang.String DATA_PREFIX -> b
    celtech.WebEngineFix.WebEngine this$0 -> a
    480:480:void <init>(celtech.WebEngineFix.WebEngine,java.lang.String) -> <init>
    484:511:void invalidated() -> invalidated
    514:514:java.lang.Object getBean() -> getBean
    518:518:java.lang.String getName() -> getName
celtech.WebEngineFix.WebEngine$3 -> celtech.WebEngineFix.j$3:
    celtech.WebEngineFix.WebEngine this$0 -> a
    595:595:void <init>(celtech.WebEngineFix.WebEngine,java.lang.String) -> <init>
    597:599:void invalidated() -> invalidated
    602:602:java.lang.Object getBean() -> getBean
    606:606:java.lang.String getName() -> getName
celtech.WebEngineFix.WebEngine$AccessorImpl -> celtech.WebEngineFix.j$a:
    java.lang.ref.WeakReference engine -> a
    1125:1127:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1130:1130:celtech.WebEngineFix.WebEngine getEngine() -> a
    1134:1135:com.sun.webkit.WebPage getPage() -> c
    1139:1140:celtech.WebEngineFix.WebView getView() -> b
    1144:1148:void addChild(javafx.scene.Node) -> a
    1151:1155:void removeChild(javafx.scene.Node) -> b
    1158:1162:void addViewListener(javafx.beans.InvalidationListener) -> a
    1122:1122:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
celtech.WebEngineFix.WebEngine$DebuggerImpl -> celtech.WebEngineFix.j$b:
    boolean enabled -> b
    javafx.util.Callback messageCallback -> c
    celtech.WebEngineFix.WebEngine this$0 -> a
    1483:1483:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1491:1492:boolean isEnabled() -> isEnabled
    1497:1508:void setEnabled(boolean) -> setEnabled
    1512:1520:void sendMessage(java.lang.String) -> sendMessage
    1524:1525:javafx.util.Callback getMessageCallback() -> getMessageCallback
    1530:1532:void setMessageCallback(javafx.util.Callback) -> setMessageCallback
    1483:1483:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
    1483:1483:javafx.util.Callback access$2400(celtech.WebEngineFix.WebEngine$DebuggerImpl) -> a
celtech.WebEngineFix.WebEngine$DocumentProperty -> celtech.WebEngineFix.j$c:
    boolean available -> b
    org.w3c.dom.Document document -> c
    celtech.WebEngineFix.WebEngine this$0 -> a
    1422:1422:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1429:1434:void invalidate(boolean) -> a
    1437:1446:org.w3c.dom.Document get() -> a
    1450:1450:java.lang.Object getBean() -> getBean
    1454:1454:java.lang.String getName() -> getName
    1422:1422:java.lang.Object get() -> get
    1422:1422:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
    1422:1422:void access$300(celtech.WebEngineFix.WebEngine$DocumentProperty,boolean) -> a
celtech.WebEngineFix.WebEngine$InspectorClientImpl -> celtech.WebEngineFix.j$d:
    java.lang.ref.WeakReference engine -> a
    1545:1547:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1552:1565:boolean sendMessageToFrontend(java.lang.String) -> sendMessageToFrontend
    1559:1560:java.lang.Void lambda$sendMessageToFrontend$0(javafx.util.Callback,java.lang.String) -> a
    1540:1540:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
celtech.WebEngineFix.WebEngine$LoadWorker -> celtech.WebEngineFix.j$e:
    javafx.beans.property.ReadOnlyObjectWrapper state -> b
    javafx.beans.property.ReadOnlyObjectWrapper value -> c
    javafx.beans.property.ReadOnlyObjectWrapper exception -> d
    javafx.beans.property.ReadOnlyDoubleWrapper workDone -> e
    javafx.beans.property.ReadOnlyDoubleWrapper totalWorkToBeDone -> f
    javafx.beans.property.ReadOnlyDoubleWrapper progress -> g
    javafx.beans.property.ReadOnlyBooleanWrapper running -> h
    javafx.beans.property.ReadOnlyStringWrapper message -> i
    javafx.beans.property.ReadOnlyStringWrapper title -> j
    celtech.WebEngineFix.WebEngine this$0 -> a
    1234:1302:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1237:1237:javafx.concurrent.Worker$State getState() -> getState
    1238:1238:javafx.beans.property.ReadOnlyObjectProperty stateProperty() -> stateProperty
    1240:1243:void updateState(javafx.concurrent.Worker$State) -> a
    1249:1249:java.lang.Void getValue() -> a
    1250:1250:javafx.beans.property.ReadOnlyObjectProperty valueProperty() -> valueProperty
    1256:1256:java.lang.Throwable getException() -> getException
    1257:1257:javafx.beans.property.ReadOnlyObjectProperty exceptionProperty() -> exceptionProperty
    1263:1263:double getWorkDone() -> getWorkDone
    1264:1264:javafx.beans.property.ReadOnlyDoubleProperty workDoneProperty() -> workDoneProperty
    1270:1270:double getTotalWork() -> getTotalWork
    1271:1271:javafx.beans.property.ReadOnlyDoubleProperty totalWorkProperty() -> totalWorkProperty
    1277:1277:double getProgress() -> getProgress
    1278:1278:javafx.beans.property.ReadOnlyDoubleProperty progressProperty() -> progressProperty
    1280:1283:void updateProgress(double) -> a
    1289:1289:boolean isRunning() -> isRunning
    1290:1290:javafx.beans.property.ReadOnlyBooleanProperty runningProperty() -> runningProperty
    1296:1296:java.lang.String getMessage() -> getMessage
    1297:1297:javafx.beans.property.ReadOnlyStringProperty messageProperty() -> messageProperty
    1303:1303:java.lang.String getTitle() -> getTitle
    1304:1304:javafx.beans.property.ReadOnlyStringProperty titleProperty() -> titleProperty
    1311:1315:boolean cancel() -> cancel
    1320:1328:void cancelAndReset() -> b
    1333:1377:void dispatchLoadEvent(long,int,java.lang.String,java.lang.String,double,int) -> a
    1380:1417:java.lang.Throwable describeError(int) -> a
    1234:1234:java.lang.Object getValue() -> getValue
    1234:1234:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
    1234:1234:void access$1100(celtech.WebEngineFix.WebEngine$LoadWorker) -> a
    1234:1234:void access$1200(celtech.WebEngineFix.WebEngine$LoadWorker,long,int,java.lang.String,java.lang.String,double,int) -> a
celtech.WebEngineFix.WebEngine$PageLoadListener -> celtech.WebEngineFix.j$f:
    java.lang.ref.WeakReference engine -> a
    1211:1213:void <init>(celtech.WebEngineFix.WebEngine) -> <init>
    1219:1224:void dispatchLoadEvent(long,int,java.lang.String,java.lang.String,double,int) -> dispatchLoadEvent
    1230:1230:void dispatchResourceLoadEvent(long,int,java.lang.String,java.lang.String,double,int) -> dispatchResourceLoadEvent
    1206:1206:void <init>(celtech.WebEngineFix.WebEngine,celtech.WebEngineFix.WebEngine$1) -> <init>
celtech.WebEngineFix.WebEngine$Printable -> celtech.WebEngineFix.j$g:
    com.sun.javafx.sg.prism.NGNode peer -> b
    celtech.WebEngineFix.WebEngine this$0 -> a
    1593:1595:void <init>(celtech.WebEngineFix.WebEngine,int,float) -> <init>
    1598:1598:com.sun.javafx.sg.prism.NGNode impl_createPeer() -> impl_createPeer
    1602:1602:java.lang.Object impl_processMXNode(com.sun.javafx.jmx.MXNodeAlgorithm,com.sun.javafx.jmx.MXNodeAlgorithmContext) -> impl_processMXNode
    1606:1606:com.sun.javafx.geom.BaseBounds impl_computeGeomBounds(com.sun.javafx.geom.BaseBounds,com.sun.javafx.geom.transform.BaseTransform) -> impl_computeGeomBounds
    1610:1610:boolean impl_computeContains(double,double) -> impl_computeContains
celtech.WebEngineFix.WebEngine$Printable$Peer -> celtech.WebEngineFix.j$g$a:
    int pageIndex -> b
    float width -> c
    celtech.WebEngineFix.WebEngine$Printable this$1 -> a
    1617:1620:void <init>(celtech.WebEngineFix.WebEngine$Printable,int,float) -> <init>
    1623:1626:void renderContent(com.sun.prism.Graphics) -> renderContent
    1629:1629:boolean hasOverlappingContents() -> hasOverlappingContents
celtech.WebEngineFix.WebEngine$PulseTimer -> celtech.WebEngineFix.j$h:
    javafx.animation.AnimationTimer animation -> a
    com.sun.javafx.tk.TKPulseListener listener -> b
    1168:1168:void <init>() -> <init>
    1186:1188:void start() -> c
    1191:1193:void stop() -> d
    1182:1183:void lambda$static$0() -> e
    1168:1168:void access$1000() -> a
    1168:1168:void access$1500() -> b
    1171:1176:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebEngine$PulseTimer$1 -> celtech.WebEngineFix.j$h$1:
    1172:1172:void <init>() -> <init>
    1173:1173:void handle(long) -> handle
celtech.WebEngineFix.WebEngine$SelfDisposer -> celtech.WebEngineFix.j$i:
    com.sun.webkit.WebPage page -> a
    celtech.WebEngineFix.DirectoryLock userDataDirectoryLock -> b
    1100:1102:void <init>(com.sun.webkit.WebPage) -> <init>
    1105:1119:void dispose() -> dispose
    1096:1096:void <init>(com.sun.webkit.WebPage,celtech.WebEngineFix.WebEngine$1) -> <init>
    1096:1096:celtech.WebEngineFix.DirectoryLock access$1302(celtech.WebEngineFix.WebEngine$SelfDisposer,celtech.WebEngineFix.DirectoryLock) -> a
celtech.WebEngineFix.WebHistory -> celtech.WebEngineFix.k:
    com.sun.webkit.BackForwardList bfl -> b
    javafx.collections.ObservableList list -> c
    javafx.collections.ObservableList ulist -> d
    javafx.beans.property.ReadOnlyIntegerWrapper currentIndex -> e
    javafx.beans.property.IntegerProperty maxSize -> f
    boolean $assertionsDisabled -> a
    129:188:void <init>(com.sun.webkit.WebPage) -> <init>
    197:197:javafx.beans.property.ReadOnlyIntegerProperty currentIndexProperty() -> a
    201:201:int getCurrentIndex() -> b
    205:206:void setCurrentIndex(int) -> c
    221:232:javafx.beans.property.IntegerProperty maxSizeProperty() -> c
    236:238:void setMaxSize(int) -> a
    241:241:int getMaxSize() -> d
    250:250:javafx.collections.ObservableList getEntries() -> e
    274:284:void go(int) -> b
    140:185:void lambda$new$0(com.sun.webkit.event.WCChangeEvent) -> a
    45:45:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebHistory$1 -> celtech.WebEngineFix.k$1:
    celtech.WebEngineFix.WebHistory this$0 -> a
    222:222:void <init>(celtech.WebEngineFix.WebHistory,java.lang.Object,java.lang.String,int) -> <init>
    225:229:void set(int) -> set
celtech.WebEngineFix.WebHistory$Entry -> celtech.WebEngineFix.k$a:
    java.net.URL url -> c
    javafx.beans.property.ReadOnlyObjectWrapper title -> d
    javafx.beans.property.ReadOnlyObjectWrapper lastVisitedDate -> e
    com.sun.webkit.BackForwardList$Entry peer -> f
    boolean $assertionsDisabled -> a
    celtech.WebEngineFix.WebHistory this$0 -> b
    54:77:void <init>(celtech.WebEngineFix.WebHistory,com.sun.webkit.BackForwardList$Entry) -> <init>
    85:86:java.lang.String getUrl() -> a
    93:93:javafx.beans.property.ReadOnlyObjectProperty titleProperty() -> b
    97:97:java.lang.String getTitle() -> c
    104:104:javafx.beans.property.ReadOnlyObjectProperty lastVisitedDateProperty() -> d
    108:108:java.util.Date getLastVisitedDate() -> e
    112:112:boolean isPeer(com.sun.webkit.BackForwardList$Entry) -> a
    117:119:java.lang.String toString() -> toString
    65:76:void lambda$new$0(com.sun.webkit.BackForwardList$Entry,com.sun.webkit.event.WCChangeEvent) -> a
    52:52:void <init>(celtech.WebEngineFix.WebHistory,com.sun.webkit.BackForwardList$Entry,celtech.WebEngineFix.WebHistory$1) -> <init>
    52:52:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebPageClientImpl -> celtech.WebEngineFix.l:
    boolean backBufferSupported -> a
    com.sun.javafx.webkit.WebConsoleListener consoleListener -> b
    celtech.WebEngineFix.Accessor accessor -> c
    javafx.scene.control.Tooltip tooltip -> d
    boolean isTooltipRegistered -> e
    36:37:void setConsoleListener(com.sun.javafx.webkit.WebConsoleListener) -> a
    39:59:void <init>(celtech.WebEngineFix.Accessor) -> <init>
    44:48:void setFocus(boolean) -> setFocus
    51:56:void setCursor(long) -> setCursor
    61:76:void setTooltip(java.lang.String) -> setTooltip
    79:80:void transferFocus(boolean) -> transferFocus
    83:94:com.sun.webkit.graphics.WCRectangle getScreenBounds(boolean) -> getScreenBounds
    99:99:int getScreenDepth() -> getScreenDepth
    103:103:celtech.WebEngineFix.WebView getContainer() -> a
    107:119:com.sun.webkit.graphics.WCPoint screenToWindow(com.sun.webkit.graphics.WCPoint) -> screenToWindow
    124:135:com.sun.webkit.graphics.WCPoint windowToScreen(com.sun.webkit.graphics.WCPoint) -> windowToScreen
    140:143:com.sun.webkit.graphics.WCPageBackBuffer createBackBuffer() -> createBackBuffer
    147:147:boolean isBackBufferSupported() -> isBackBufferSupported
    153:160:void addMessageToConsole(java.lang.String,int,java.lang.String) -> addMessageToConsole
    165:165:void didClearWindowObject(long,long) -> didClearWindowObject
    24:24:java.lang.Object getContainer() -> getContainer
    31:31:java.lang.String lambda$static$0() -> b
    26:33:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebView -> celtech.WebEngineFix.m:
    java.util.Map idMap -> a
    boolean DEFAULT_CONTEXT_MENU_ENABLED -> b
    javafx.scene.text.FontSmoothingType DEFAULT_FONT_SMOOTHING_TYPE -> c
    double DEFAULT_ZOOM -> d
    double DEFAULT_FONT_SCALE -> e
    double DEFAULT_MIN_WIDTH -> f
    double DEFAULT_MIN_HEIGHT -> g
    double DEFAULT_PREF_WIDTH -> h
    double DEFAULT_PREF_HEIGHT -> i
    double DEFAULT_MAX_WIDTH -> j
    double DEFAULT_MAX_HEIGHT -> k
    com.sun.webkit.WebPage page -> l
    celtech.WebEngineFix.WebEngine engine -> m
    celtech.WebEngineFix.InputMethodClientImpl imClient -> n
    com.sun.javafx.tk.TKPulseListener stagePulseListener -> o
    javafx.beans.property.ReadOnlyDoubleWrapper width -> p
    javafx.beans.property.ReadOnlyDoubleWrapper height -> q
    javafx.beans.property.DoubleProperty zoom -> r
    javafx.beans.property.DoubleProperty fontScale -> s
    javafx.beans.property.DoubleProperty minWidth -> t
    javafx.beans.property.DoubleProperty minHeight -> u
    javafx.beans.property.DoubleProperty prefWidth -> v
    javafx.beans.property.DoubleProperty prefHeight -> w
    javafx.beans.property.DoubleProperty maxWidth -> x
    javafx.beans.property.DoubleProperty maxHeight -> y
    javafx.beans.property.ObjectProperty fontSmoothingType -> z
    javafx.beans.property.BooleanProperty contextMenuEnabled -> A
    int WK_DND_ACTION_NONE -> B
    int WK_DND_ACTION_COPY -> C
    int WK_DND_ACTION_MOVE -> D
    int WK_DND_ACTION_LINK -> E
    103:103:celtech.WebEngineFix.WebEngine getEngine() -> a
    112:112:double getWidth() -> b
    119:119:javafx.beans.property.ReadOnlyDoubleProperty widthProperty() -> c
    128:128:double getHeight() -> d
    135:135:javafx.beans.property.ReadOnlyDoubleProperty heightProperty() -> e
    153:155:void setZoom(double) -> a
    165:166:double getZoom() -> f
    178:196:javafx.beans.property.DoubleProperty zoomProperty() -> g
    208:210:void setFontScale(double) -> b
    213:214:double getFontScale() -> h
    219:236:javafx.beans.property.DoubleProperty fontScaleProperty() -> i
    106:266:void <init>() -> <init>
    272:272:boolean isResizable() -> isResizable
    276:282:void resize(double,double) -> resize
    290:291:double minWidth(double) -> minWidth
    300:301:double minHeight(double) -> minHeight
    311:312:double prefWidth(double) -> prefWidth
    321:322:double prefHeight(double) -> prefHeight
    330:331:double maxWidth(double) -> maxWidth
    340:341:double maxHeight(double) -> maxHeight
    348:370:javafx.beans.property.DoubleProperty minWidthProperty() -> j
    378:379:void setMinWidth(double) -> c
    385:386:double getMinWidth() -> k
    394:416:javafx.beans.property.DoubleProperty minHeightProperty() -> l
    424:425:void setMinHeight(double) -> d
    431:432:double getMinHeight() -> m
    440:442:void setMinSize(double,double) -> a
    448:470:javafx.beans.property.DoubleProperty prefWidthProperty() -> n
    478:479:void setPrefWidth(double) -> e
    485:486:double getPrefWidth() -> o
    494:516:javafx.beans.property.DoubleProperty prefHeightProperty() -> p
    524:525:void setPrefHeight(double) -> f
    531:532:double getPrefHeight() -> q
    540:542:void setPrefSize(double,double) -> b
    548:570:javafx.beans.property.DoubleProperty maxWidthProperty() -> r
    578:579:void setMaxWidth(double) -> g
    585:586:double getMaxWidth() -> s
    594:616:javafx.beans.property.DoubleProperty maxHeightProperty() -> t
    624:625:void setMaxHeight(double) -> h
    631:632:double getMaxHeight() -> u
    640:642:void setMaxSize(double,double) -> c
    659:660:void setFontSmoothingType(javafx.scene.text.FontSmoothingType) -> a
    663:664:javafx.scene.text.FontSmoothingType getFontSmoothingType() -> v
    669:690:javafx.beans.property.ObjectProperty fontSmoothingTypeProperty() -> w
    702:703:void setContextMenuEnabled(boolean) -> a
    706:708:boolean isContextMenuEnabled() -> x
    712:732:javafx.beans.property.BooleanProperty contextMenuEnabledProperty() -> y
    912:912:java.util.List getClassCssMetaData() -> z
    921:921:java.util.List getCssMetaData() -> getCssMetaData
    941:961:void handleStagePulse() -> B
    964:997:void processMouseEvent(javafx.scene.input.MouseEvent) -> a
    1000:1013:void processScrollEvent(javafx.scene.input.ScrollEvent) -> a
    1016:1039:void processKeyEvent(javafx.scene.input.KeyEvent) -> a
    1042:1049:celtech.WebEngineFix.InputMethodClientImpl getInputMethodClient() -> C
    1053:1067:void processInputMethodEvent(javafx.scene.input.InputMethodEvent) -> a
    1075:1084:int getWKDndEventType(javafx.event.EventType) -> a
    1088:1097:int getWKDndAction(javafx.scene.input.TransferMode[]) -> a
    1101:1108:javafx.scene.input.TransferMode[] getFXDndAction(int) -> a
    1112:1195:void registerEventHandlers() -> D
    1203:1204:void impl_pickNodeLocal(com.sun.javafx.geom.PickRay,com.sun.javafx.scene.input.PickResultChooser) -> impl_pickNodeLocal
    1207:1207:javafx.collections.ObservableList getChildren() -> getChildren
    1218:1218:com.sun.javafx.sg.prism.NGNode impl_createPeer() -> impl_createPeer
    1227:1229:com.sun.javafx.geom.BaseBounds impl_computeGeomBounds(com.sun.javafx.geom.BaseBounds,com.sun.javafx.geom.transform.BaseTransform) -> impl_computeGeomBounds
    1239:1239:boolean impl_computeContains(double,double) -> impl_computeContains
    1248:1260:void impl_updatePeer() -> impl_updatePeer
    1185:1192:void lambda$registerEventHandlers$8(javafx.scene.input.DragEvent) -> a
    1179:1183:void lambda$registerEventHandlers$7(javafx.scene.input.MouseEvent) -> b
    1138:1171:void lambda$registerEventHandlers$6(javafx.scene.input.DragEvent) -> b
    1132:1133:void lambda$registerEventHandlers$5(javafx.scene.input.InputMethodEvent) -> b
    1128:1129:void lambda$registerEventHandlers$4(javafx.scene.input.ScrollEvent) -> b
    1118:1125:void lambda$registerEventHandlers$3(javafx.scene.input.MouseEvent) -> c
    1114:1115:void lambda$registerEventHandlers$2(javafx.scene.input.KeyEvent) -> b
    255:263:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    252:253:void lambda$new$0() -> E
    72:72:com.sun.webkit.WebPage access$000(celtech.WebEngineFix.WebView) -> a
    72:72:javafx.beans.property.BooleanProperty access$1100(celtech.WebEngineFix.WebView) -> b
    72:72:javafx.scene.text.FontSmoothingType access$1200() -> A
    72:72:javafx.beans.property.ObjectProperty access$1300(celtech.WebEngineFix.WebView) -> c
    72:72:javafx.beans.property.DoubleProperty access$1400(celtech.WebEngineFix.WebView) -> d
    72:72:javafx.beans.property.DoubleProperty access$1500(celtech.WebEngineFix.WebView) -> e
    72:72:javafx.beans.property.DoubleProperty access$1600(celtech.WebEngineFix.WebView) -> f
    72:72:javafx.beans.property.DoubleProperty access$1700(celtech.WebEngineFix.WebView) -> g
    72:72:javafx.beans.property.DoubleProperty access$1800(celtech.WebEngineFix.WebView) -> h
    72:72:javafx.beans.property.DoubleProperty access$1900(celtech.WebEngineFix.WebView) -> i
    72:72:javafx.beans.property.DoubleProperty access$2000(celtech.WebEngineFix.WebView) -> j
    72:72:javafx.beans.property.DoubleProperty access$2100(celtech.WebEngineFix.WebView) -> k
    74:1276:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebView$1 -> celtech.WebEngineFix.m$1:
    celtech.WebEngineFix.WebView this$0 -> a
    179:179:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    181:183:void invalidated() -> invalidated
    186:186:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    189:189:java.lang.Object getBean() -> getBean
    192:192:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$10 -> celtech.WebEngineFix.m$2:
    celtech.WebEngineFix.WebView this$0 -> a
    713:713:void <init>(celtech.WebEngineFix.WebView,boolean) -> <init>
    715:717:void invalidated() -> invalidated
    720:720:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    724:724:java.lang.Object getBean() -> getBean
    728:728:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$2 -> celtech.WebEngineFix.m$3:
    celtech.WebEngineFix.WebView this$0 -> a
    220:220:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    222:224:void invalidated() -> invalidated
    226:226:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    229:229:java.lang.Object getBean() -> getBean
    232:232:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$3 -> celtech.WebEngineFix.m$4:
    celtech.WebEngineFix.WebView this$0 -> a
    349:349:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    352:355:void invalidated() -> invalidated
    358:358:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    362:362:java.lang.Object getBean() -> getBean
    366:366:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$4 -> celtech.WebEngineFix.m$5:
    celtech.WebEngineFix.WebView this$0 -> a
    395:395:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    398:401:void invalidated() -> invalidated
    404:404:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    408:408:java.lang.Object getBean() -> getBean
    412:412:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$5 -> celtech.WebEngineFix.m$6:
    celtech.WebEngineFix.WebView this$0 -> a
    449:449:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    452:455:void invalidated() -> invalidated
    458:458:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    462:462:java.lang.Object getBean() -> getBean
    466:466:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$6 -> celtech.WebEngineFix.m$7:
    celtech.WebEngineFix.WebView this$0 -> a
    495:495:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    498:501:void invalidated() -> invalidated
    504:504:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    508:508:java.lang.Object getBean() -> getBean
    512:512:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$7 -> celtech.WebEngineFix.m$8:
    celtech.WebEngineFix.WebView this$0 -> a
    549:549:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    552:555:void invalidated() -> invalidated
    558:558:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    562:562:java.lang.Object getBean() -> getBean
    566:566:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$8 -> celtech.WebEngineFix.m$9:
    celtech.WebEngineFix.WebView this$0 -> a
    595:595:void <init>(celtech.WebEngineFix.WebView,double) -> <init>
    598:601:void invalidated() -> invalidated
    604:604:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    608:608:java.lang.Object getBean() -> getBean
    612:612:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$9 -> celtech.WebEngineFix.m$10:
    celtech.WebEngineFix.WebView this$0 -> a
    670:670:void <init>(celtech.WebEngineFix.WebView,javafx.scene.text.FontSmoothingType) -> <init>
    673:675:void invalidated() -> invalidated
    678:678:javafx.css.CssMetaData getCssMetaData() -> getCssMetaData
    682:682:java.lang.Object getBean() -> getBean
    686:686:java.lang.String getName() -> getName
celtech.WebEngineFix.WebView$StyleableProperties -> celtech.WebEngineFix.m$a:
    javafx.css.CssMetaData CONTEXT_MENU_ENABLED -> a
    javafx.css.CssMetaData FONT_SMOOTHING_TYPE -> b
    javafx.css.CssMetaData ZOOM -> c
    javafx.css.CssMetaData FONT_SCALE -> d
    javafx.css.CssMetaData MIN_WIDTH -> e
    javafx.css.CssMetaData MIN_HEIGHT -> f
    javafx.css.CssMetaData MAX_WIDTH -> g
    javafx.css.CssMetaData MAX_HEIGHT -> h
    javafx.css.CssMetaData PREF_WIDTH -> i
    javafx.css.CssMetaData PREF_HEIGHT -> j
    java.util.List STYLEABLES -> k
    738:738:void <init>() -> <init>
    738:738:javafx.css.CssMetaData access$100() -> a
    738:738:javafx.css.CssMetaData access$200() -> b
    738:738:javafx.css.CssMetaData access$300() -> c
    738:738:javafx.css.CssMetaData access$400() -> d
    738:738:javafx.css.CssMetaData access$500() -> e
    738:738:javafx.css.CssMetaData access$600() -> f
    738:738:javafx.css.CssMetaData access$700() -> g
    738:738:javafx.css.CssMetaData access$800() -> h
    738:738:javafx.css.CssMetaData access$900() -> i
    738:738:javafx.css.CssMetaData access$1000() -> j
    738:738:java.util.List access$2200() -> k
    740:903:void <clinit>() -> <clinit>
celtech.WebEngineFix.WebView$StyleableProperties$1 -> celtech.WebEngineFix.m$a$1:
    745:745:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Boolean) -> <init>
    747:747:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    750:750:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    745:745:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    745:745:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$10 -> celtech.WebEngineFix.m$a$2:
    876:876:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    879:879:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    883:883:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    876:876:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    876:876:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$2 -> celtech.WebEngineFix.m$a$3:
    758:758:void <init>(java.lang.String,javafx.css.StyleConverter,javafx.scene.text.FontSmoothingType) -> <init>
    761:761:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    765:765:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    758:758:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    758:758:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$3 -> celtech.WebEngineFix.m$a$4:
    773:773:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    775:775:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    778:778:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    773:773:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    773:773:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$4 -> celtech.WebEngineFix.m$a$5:
    786:786:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    789:789:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    793:793:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    786:786:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    786:786:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$5 -> celtech.WebEngineFix.m$a$6:
    801:801:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    804:804:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    808:808:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    801:801:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    801:801:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$6 -> celtech.WebEngineFix.m$a$7:
    816:816:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    819:819:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    823:823:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    816:816:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    816:816:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$7 -> celtech.WebEngineFix.m$a$8:
    831:831:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    834:834:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    838:838:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    831:831:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    831:831:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$8 -> celtech.WebEngineFix.m$a$9:
    846:846:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    849:849:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    853:853:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    846:846:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    846:846:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.WebEngineFix.WebView$StyleableProperties$9 -> celtech.WebEngineFix.m$a$10:
    861:861:void <init>(java.lang.String,javafx.css.StyleConverter,java.lang.Number) -> <init>
    864:864:boolean isSettable(celtech.WebEngineFix.WebView) -> a
    868:868:javafx.css.StyleableProperty getStyleableProperty(celtech.WebEngineFix.WebView) -> b
    861:861:javafx.css.StyleableProperty getStyleableProperty(javafx.css.Styleable) -> getStyleableProperty
    861:861:boolean isSettable(javafx.css.Styleable) -> isSettable
celtech.appManager.ApplicationMode -> celtech.appManager.ApplicationMode:
    celtech.appManager.ApplicationMode WELCOME -> WELCOME
    celtech.appManager.ApplicationMode CALIBRATION_CHOICE -> CALIBRATION_CHOICE
    celtech.appManager.ApplicationMode REGISTRATION -> REGISTRATION
    celtech.appManager.ApplicationMode PURGE -> PURGE
    celtech.appManager.ApplicationMode MAINTENANCE -> MAINTENANCE
    celtech.appManager.ApplicationMode ABOUT -> ABOUT
    celtech.appManager.ApplicationMode SYSTEM_INFORMATION -> SYSTEM_INFORMATION
    celtech.appManager.ApplicationMode EXTRAS_MENU -> EXTRAS_MENU
    celtech.appManager.ApplicationMode STATUS -> STATUS
    celtech.appManager.ApplicationMode LAYOUT -> LAYOUT
    celtech.appManager.ApplicationMode ADD_MODEL -> ADD_MODEL
    celtech.appManager.ApplicationMode MY_MINI_FACTORY -> MY_MINI_FACTORY
    celtech.appManager.ApplicationMode SETTINGS -> SETTINGS
    celtech.appManager.ApplicationMode LIBRARY -> LIBRARY
    java.lang.String insetPanelFXMLPrefix -> insetPanelFXMLPrefix
    java.lang.Class controllerClass -> controllerClass
    celtech.appManager.ApplicationMode[] $VALUES -> $VALUES
    19:19:celtech.appManager.ApplicationMode[] values() -> values
    19:19:celtech.appManager.ApplicationMode valueOf(java.lang.String) -> valueOf
    50:53:void <init>(java.lang.String,int,java.lang.String,java.lang.Class) -> <init>
    61:61:java.lang.String getInsetPanelFXMLName() -> getInsetPanelFXMLName
    66:66:java.lang.Class getControllerClass() -> getControllerClass
    19:42:void <clinit>() -> <clinit>
celtech.appManager.ApplicationStatus -> celtech.appManager.a:
    celtech.appManager.ApplicationStatus instance -> a
    javafx.beans.property.ObjectProperty currentMode -> b
    javafx.beans.property.StringProperty modeStringProperty -> c
    javafx.beans.property.StringProperty modeDisplayStringProperty -> d
    boolean expertMode -> e
    javafx.beans.property.DoubleProperty averageTimePerFrameProperty -> f
    celtech.appManager.ApplicationMode lastMode -> g
    22:31:void <init>() -> <init>
    39:44:celtech.appManager.ApplicationStatus getInstance() -> a
    53:62:void setMode(celtech.appManager.ApplicationMode) -> a
    70:70:celtech.appManager.ApplicationMode getMode() -> b
    79:79:javafx.beans.property.ObjectProperty modeProperty() -> c
    88:89:void setExpertMode(boolean) -> a
    97:97:boolean isExpertMode() -> d
    106:107:void setAverageTimePerFrame(double) -> a
    115:115:double getAverageTimePerFrame() -> e
    124:124:javafx.beans.property.DoubleProperty averageTimePerFrameProperty() -> f
    129:133:void returnToLastMode() -> g
    21:27:void <clinit>() -> <clinit>
celtech.appManager.ModelContainerProject -> celtech.appManager.b:
    int version -> m
    celtech.roboxbase.configuration.Filament DEFAULT_FILAMENT -> n
    java.lang.String ASSOCIATE_WITH_EXTRUDER_NUMBER -> o
    libertysystems.stenographer.Stenographer steno -> p
    javafx.beans.property.ObjectProperty extruder0Filament -> q
    javafx.beans.property.ObjectProperty extruder1Filament -> r
    javafx.beans.property.BooleanProperty modelColourChanged -> s
    javafx.beans.binding.BooleanBinding hasInvalidMeshes -> t
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> u
    javafx.collections.ObservableList lastCalculatedUsedExtruders -> v
    java.util.Map modelExtruderNumberListener -> w
    boolean $assertionsDisabled -> a
    70:507:void <init>() -> <init>
    96:125:void initialise() -> a
    129:135:java.util.Set getModelContainersWithInvalidMesh() -> b
    140:140:javafx.beans.binding.BooleanBinding hasInvalidMeshes() -> c
    145:200:void load(celtech.configuration.fileRepresentation.ProjectFile,java.lang.String) -> a
    204:222:void loadModels(java.lang.String) -> e
    226:229:void saveProject(celtech.appManager.ModelContainerProject) -> a
    233:242:void saveModels(java.lang.String) -> f
    247:268:void save(java.lang.String) -> a
    272:284:java.util.List getPrintingExtruders(celtech.roboxbase.printerControl.model.Printer) -> a
    292:293:boolean allModelsOnSameExtruder(celtech.roboxbase.printerControl.model.Printer) -> b
    298:322:void getUsedExtruders(celtech.modelcontrol.ModelContainer,java.util.List,celtech.roboxbase.printerControl.model.Printer) -> a
    333:358:javafx.collections.ObservableList getUsedExtruders(celtech.roboxbase.printerControl.model.Printer) -> c
    369:375:java.util.Set getAllModels() -> d
    381:381:java.lang.String toString() -> toString
    386:387:void setLastPrintJobID(java.lang.String) -> b
    391:391:java.lang.String getLastPrintJobID() -> e
    396:396:javafx.beans.property.ReadOnlyBooleanProperty getModelColourChanged() -> f
    401:402:void setExtruder0Filament(celtech.roboxbase.configuration.Filament) -> a
    406:407:void setExtruder1Filament(celtech.roboxbase.configuration.Filament) -> b
    411:411:javafx.beans.property.ObjectProperty getExtruder0FilamentProperty() -> g
    416:416:javafx.beans.property.ObjectProperty getExtruder1FilamentProperty() -> h
    426:443:void initialiseExtruderFilaments() -> A
    448:460:void addModel(celtech.modelcontrol.ProjectifiableThing) -> a
    464:468:void fireWhenModelAdded(celtech.modelcontrol.ModelContainer) -> b
    473:477:void fireWhenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> a
    482:497:void removeModels(java.util.Set) -> a
    501:505:void fireWhenModelsRemoved(java.util.Set) -> k
    511:527:void addModelListeners(celtech.modelcontrol.ModelContainer) -> c
    531:536:void removeModelListeners(celtech.modelcontrol.ModelContainer) -> a
    540:545:java.util.Set getModelsHoldingMeshViews() -> B
    550:555:java.util.Set getModelsHoldingModels() -> C
    563:571:java.util.Set getDescendentModelsInAllGroups() -> D
    580:591:java.util.Set getDescendentModelsInGroup(celtech.modelcontrol.ModelGroup) -> a
    602:607:java.util.Map getGroupStructure() -> i
    618:623:java.util.Map getGroupState() -> j
    644:646:void recreateGroups(java.util.Map,java.util.Map) -> a
    657:672:int makeNewGroups(java.util.Map,java.util.Map) -> b
    681:698:boolean allModelsInstantiated(java.util.Set) -> l
    710:722:java.util.Set getModelContainersOfIds(java.util.Set) -> b
    727:734:java.util.Optional getModelContainerOfModelId(int) -> a
    743:746:void recreateGroupState(celtech.modelcontrol.ModelGroup,java.util.Map) -> a
    751:752:void autoLayout() -> k
    757:911:void autoLayout(java.util.List) -> a
    915:919:void fireWhenAutoLaidOut() -> E
    923:930:void rotateLeanModels(java.util.Set,double) -> a
    934:941:void rotateTwistModels(java.util.Set,double) -> b
    945:952:void rotateTurnModels(java.util.Set,double) -> c
    956:967:void dropToBed(java.util.Set) -> c
    971:978:void snapToGround(celtech.modelcontrol.ModelContainer,javafx.scene.shape.MeshView,int) -> a
    983:987:void fireWhenModelsTransformed(java.util.Set) -> d
    991:995:void fireWhenModelChanged(celtech.modelcontrol.ModelContainer,java.lang.String) -> a
    999:1029:void setAssociatedExtruder(java.util.Set,boolean) -> a
    1034:1042:void checkNotAlreadyInGroup(java.util.Set) -> e
    1054:1062:celtech.modelcontrol.ModelGroup createNewGroupAndAddModelListeners(java.util.Set) -> f
    664:664:boolean lambda$makeNewGroups$2(celtech.modelcontrol.ModelContainer) -> d
    133:134:void lambda$getModelContainersWithInvalidMesh$1(java.util.Set,celtech.modelcontrol.ModelContainer) -> a
    131:131:boolean lambda$getModelContainersWithInvalidMesh$0(celtech.modelcontrol.ModelContainer) -> e
    67:67:void access$000(celtech.appManager.ModelContainerProject,celtech.modelcontrol.ModelContainer,java.lang.String) -> a
    67:67:javafx.beans.property.BooleanProperty access$100(celtech.appManager.ModelContainerProject) -> b
    67:76:void <clinit>() -> <clinit>
celtech.appManager.ModelContainerProject$1 -> celtech.appManager.b$1:
    celtech.appManager.ModelContainerProject this$0 -> a
    101:104:void <init>(celtech.appManager.ModelContainerProject) -> <init>
    109:114:boolean computeValue() -> computeValue
celtech.appManager.ModelContainerProject$2 -> celtech.appManager.b$2:
    celtech.modelcontrol.ModelContainer val$modelContainer -> a
    celtech.appManager.ModelContainerProject this$0 -> b
    515:515:void <init>(celtech.appManager.ModelContainerProject,celtech.modelcontrol.ModelContainer) -> <init>
    519:521:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.appManager.NewsBot -> celtech.appManager.c:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.appManager.NewsBot instance -> b
    java.lang.String baseURL -> c
    java.util.Timer newsCheckTimer -> d
    com.fasterxml.jackson.databind.ObjectMapper jsonMapper -> e
    java.util.List newsListeners -> f
    java.util.List unreadNewsArticles -> g
    java.lang.String lastTimeThereWasNewNewsDateString -> h
    int strikes -> i
    int NORMAL_FREQUENCY_POLLING_PERIOD_MS -> j
    int LOWER_FREQUENCY_POLLING_THRESHOLD -> k
    int LOWER_FREQUENCY_POLLING_PERIOD_MS -> l
    int STRIKES_AND_YOURE_OUT -> m
    29:113:void <init>() -> <init>
    117:122:celtech.appManager.NewsBot getInstance() -> a
    127:132:void registerListener(celtech.appManager.NewsListener) -> a
    219:221:void addNewNewsArticles(java.util.List) -> a
    225:227:void addNewNewsArticle(celtech.appManager.NewsBot$NewsArticle) -> b
    231:235:void updateListeners() -> d
    239:242:void allNewsHasBeenRead() -> b
    246:248:void articleRead(celtech.appManager.NewsBot$NewsArticle) -> a
    233:234:void lambda$updateListeners$0(celtech.appManager.NewsListener) -> b
    23:23:java.lang.String access$100(celtech.appManager.NewsBot) -> a
    23:23:com.fasterxml.jackson.databind.ObjectMapper access$200(celtech.appManager.NewsBot) -> b
    23:23:java.lang.String access$102(celtech.appManager.NewsBot,java.lang.String) -> a
    23:23:void access$400(celtech.appManager.NewsBot,java.util.List) -> a
    23:23:int access$502(celtech.appManager.NewsBot,int) -> a
    23:23:int access$508(celtech.appManager.NewsBot) -> c
    23:23:libertysystems.stenographer.Stenographer access$600() -> c
    23:23:int access$500(celtech.appManager.NewsBot) -> d
    23:23:java.util.Timer access$700(celtech.appManager.NewsBot) -> e
    23:23:java.util.Timer access$702(celtech.appManager.NewsBot,java.util.Timer) -> a
    26:27:void <clinit>() -> <clinit>
celtech.appManager.NewsBot$1 -> celtech.appManager.c$1:
celtech.appManager.NewsBot$NewsArticle -> celtech.appManager.c$a:
    int id -> b
    java.lang.String title -> c
    java.lang.String content -> d
    java.lang.String link -> e
    java.lang.String dateString -> f
    celtech.appManager.NewsBot this$0 -> a
    50:56:void <init>(celtech.appManager.NewsBot,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    60:60:int getId() -> a
    65:66:void setId(int) -> a
    70:70:java.lang.String getTitle() -> b
    75:76:void setTitle(java.lang.String) -> a
    80:80:java.lang.String getContent() -> c
    85:86:void setContent(java.lang.String) -> b
    90:90:java.lang.String getLink() -> d
    95:96:void setLink(java.lang.String) -> c
    100:100:java.lang.String getDateString() -> e
    105:106:void setDateString(java.lang.String) -> d
    40:40:void <init>(celtech.appManager.NewsBot,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,celtech.appManager.NewsBot$1) -> <init>
celtech.appManager.NewsBot$PeriodicNewsCheckTask -> celtech.appManager.c$b:
    celtech.appManager.NewsBot this$0 -> a
    134:134:void <init>(celtech.appManager.NewsBot) -> <init>
    142:214:void run() -> run
    134:134:void <init>(celtech.appManager.NewsBot,celtech.appManager.NewsBot$1) -> <init>
celtech.appManager.NewsListener -> celtech.appManager.d:
    void hereIsTheNews(java.util.List) -> hereIsTheNews
celtech.appManager.Project -> celtech.appManager.Project:
    int version -> a
    libertysystems.stenographer.Stenographer steno -> m
    java.util.Set projectChangesListeners -> b
    javafx.beans.property.BooleanProperty canPrint -> c
    javafx.beans.property.BooleanProperty customSettingsNotChosen -> d
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printerSettings -> e
    javafx.beans.property.StringProperty projectNameProperty -> f
    javafx.beans.property.ObjectProperty lastModifiedDate -> g
    boolean suppressProjectChanged -> h
    javafx.beans.property.ObjectProperty mode -> i
    javafx.collections.ObservableList topLevelThings -> j
    java.lang.String lastPrintJobID -> k
    boolean $assertionsDisabled -> l
    65:124:void <init>() -> <init>
    void initialise() -> a
    130:131:void setProjectName(java.lang.String) -> c
    135:135:java.lang.String getProjectName() -> l
    140:140:javafx.beans.property.StringProperty projectNameProperty() -> m
    145:146:java.lang.String getAbsolutePath() -> n
    void load(celtech.configuration.fileRepresentation.ProjectFile,java.lang.String) -> a
    154:183:celtech.appManager.Project loadProject(java.lang.String) -> d
    void save(java.lang.String) -> a
    190:196:void saveProject(celtech.appManager.Project) -> a
    201:201:java.lang.String toString() -> toString
    206:206:celtech.roboxbase.services.slicer.PrintQualityEnumeration getPrintQuality() -> o
    211:216:void setPrintQuality(celtech.roboxbase.services.slicer.PrintQualityEnumeration) -> a
    220:220:celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides getPrinterSettings() -> p
    void addModel(celtech.modelcontrol.ProjectifiableThing) -> a
    void removeModels(java.util.Set) -> a
    229:230:void addProjectChangesListener(celtech.appManager.Project$ProjectChangesListener) -> a
    234:235:void removeProjectChangesListener(celtech.appManager.Project$ProjectChangesListener) -> b
    239:239:javafx.beans.property.ObjectProperty getLastModifiedDate() -> q
    244:244:javafx.beans.property.BooleanProperty canPrintProperty() -> r
    249:249:javafx.beans.property.BooleanProperty customSettingsNotChosenProperty() -> s
    void autoLayout() -> k
    void autoLayout(java.util.List) -> a
    320:328:void scaleXYZRatioSelection(java.util.Set,double) -> d
    340:347:void scaleXYRatioSelection(java.util.Set,double) -> e
    352:376:void scaleXModels(java.util.Set,double,boolean) -> a
    381:406:void scaleYModels(java.util.Set,double,boolean) -> b
    411:429:void scaleZModels(java.util.Set,double,boolean) -> c
    433:440:void translateModelsBy(java.util.Set,double,double) -> a
    444:450:void translateModelsTo(java.util.Set,double,double) -> b
    454:461:void translateModelsXTo(java.util.Set,double) -> f
    465:472:void translateModelsDepthPositionTo(java.util.Set,double) -> g
    476:483:void resizeModelsDepth(java.util.Set,double) -> h
    487:494:void resizeModelsHeight(java.util.Set,double) -> i
    498:505:void resizeModelsWidth(java.util.Set,double) -> j
    java.util.Set getAllModels() -> d
    511:516:java.util.Set getModelStates() -> t
    521:536:void setModelStates(java.util.Set) -> g
    540:540:javafx.beans.property.ReadOnlyObjectProperty getModeProperty() -> u
    545:545:celtech.appManager.ProjectMode getMode() -> v
    550:551:void setMode(celtech.appManager.ProjectMode) -> a
    555:560:void projectModified() -> w
    void fireWhenModelsTransformed(java.util.Set) -> d
    void fireWhenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> a
    568:568:int getNumberOfProjectifiableElements() -> x
    573:573:javafx.collections.ObservableList getTopLevelThings() -> y
    578:579:void setLastPrintJobID(java.lang.String) -> b
    583:583:java.lang.String getLastPrintJobID() -> e
    588:593:celtech.modelcontrol.ModelGroup group(java.util.Set) -> h
    598:603:celtech.modelcontrol.ModelGroup group(java.util.Set,int) -> a
    615:619:celtech.modelcontrol.ModelGroup createNewGroup(java.util.Set,int) -> b
    630:635:celtech.modelcontrol.ModelGroup createNewGroup(java.util.Set) -> i
    640:662:void ungroup(java.util.Set) -> j
    void checkNotAlreadyInGroup(java.util.Set) -> e
    celtech.modelcontrol.ModelGroup createNewGroupAndAddModelListeners(java.util.Set) -> f
    678:679:void invalidate() -> z
    121:122:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.SlicerType,celtech.roboxbase.configuration.SlicerType) -> a
    114:116:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    53:67:void <clinit>() -> <clinit>
celtech.appManager.Project$ProjectChangesListener -> celtech.appManager.Project$a:
    void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    void whenAutoLaidOut() -> whenAutoLaidOut
    void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
celtech.appManager.Project$ProjectLoadException -> celtech.appManager.Project$ProjectLoadException:
    61:62:void <init>(java.lang.String) -> <init>
celtech.appManager.ProjectCallback -> celtech.appManager.e:
    void modelAddedToProject(celtech.appManager.Project) -> modelAddedToProject
celtech.appManager.ProjectFileFilter -> celtech.appManager.ProjectFileFilter:
    17:17:void <init>() -> <init>
    29:35:boolean accept(java.io.File,java.lang.String) -> accept
celtech.appManager.ProjectHeader -> celtech.appManager.ProjectHeader:
    long serialVersionUID -> serialVersionUID
    java.text.SimpleDateFormat formatter -> formatter
    java.lang.String projectUUID -> projectUUID
    javafx.beans.property.StringProperty projectNameProperty -> projectNameProperty
    java.lang.String projectPath -> projectPath
    javafx.beans.property.ObjectProperty lastModifiedDate -> lastModifiedDate
    26:40:void <init>() -> <init>
    45:50:void writeObject(java.io.ObjectOutputStream) -> writeObject
    55:60:void readObject(java.io.ObjectInputStream) -> readObject
    66:66:void readObjectNoData() -> a
celtech.appManager.ProjectManager -> celtech.appManager.ProjectManager:
    celtech.appManager.ProjectManager instance -> instance
    java.util.List openProjects -> openProjects
    java.lang.String projectFileName -> projectFileName
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.appManager.ProjectFileFilter fileFilter -> fileFilter
    39:40:void <init>() -> <init>
    44:56:celtech.appManager.ProjectManager getInstance() -> a
    61:108:celtech.appManager.ProjectManager loadState() -> e
    113:114:celtech.appManager.Project loadProject(java.lang.String) -> a
    120:154:boolean saveState() -> b
    159:163:void projectOpened(celtech.appManager.Project) -> a
    167:169:void projectClosed(celtech.appManager.Project) -> b
    173:173:java.util.List getOpenProjects() -> c
    178:189:java.util.Set getAvailableProjectNames() -> f
    194:200:java.util.Set getOpenAndAvailableProjectNames() -> d
    31:36:void <clinit>() -> <clinit>
celtech.appManager.ProjectMode -> celtech.appManager.ProjectMode:
    celtech.appManager.ProjectMode NONE -> NONE
    celtech.appManager.ProjectMode MESH -> MESH
    celtech.appManager.ProjectMode SVG -> SVG
    celtech.appManager.ProjectMode[] $VALUES -> $VALUES
    7:7:celtech.appManager.ProjectMode[] values() -> values
    7:7:celtech.appManager.ProjectMode valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:22:void <clinit>() -> <clinit>
celtech.appManager.Savable -> celtech.appManager.f:
    boolean saveState() -> b
celtech.appManager.ShapeContainerProject -> celtech.appManager.g:
    libertysystems.stenographer.Stenographer steno -> m
    boolean $assertionsDisabled -> a
    32:33:void <init>() -> <init>
    38:38:void initialise() -> a
    43:43:void save(java.lang.String) -> a
    48:55:void addModel(celtech.modelcontrol.ProjectifiableThing) -> a
    59:63:void fireWhenModelAdded(celtech.utils.threed.importers.svg.ShapeContainer) -> a
    68:87:void removeModels(java.util.Set) -> a
    92:92:void autoLayout() -> k
    97:102:java.util.Set getAllModels() -> d
    108:112:void fireWhenModelsTransformed(java.util.Set) -> d
    117:117:void fireWhenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> a
    122:144:void load(celtech.configuration.fileRepresentation.ProjectFile,java.lang.String) -> a
    148:159:void loadModels(java.lang.String) -> e
    164:164:void checkNotAlreadyInGroup(java.util.Set) -> e
    170:170:celtech.modelcontrol.ModelGroup createNewGroupAndAddModelListeners(java.util.Set) -> f
    176:176:void autoLayout(java.util.List) -> a
    25:28:void <clinit>() -> <clinit>
celtech.appManager.SystemNotificationManagerJavaFX -> celtech.appManager.h:
    libertysystems.stenographer.Stenographer steno -> d
    java.util.HashMap errorToButtonMap -> e
    boolean sdDialogOnDisplay -> a
    javafx.stage.Stage programInvalidHeadStage -> f
    boolean headNotRecognisedDialogOnDisplay -> g
    boolean reelNotRecognisedDialogOnDisplay -> h
    boolean clearBedDialogOnDisplay -> i
    celtech.coreUI.components.ProgressDialog firmwareUpdateProgress -> b
    celtech.coreUI.components.PrinterIDDialog printerIDDialog -> c
    celtech.coreUI.components.ChoiceLinkDialogBox keepPushingFilamentDialogBox -> j
    celtech.coreUI.components.ChoiceLinkDialogBox failedTransferDialogBox -> k
    celtech.coreUI.components.ChoiceLinkDialogBox failedEjectDialogBox -> l
    celtech.coreUI.components.ChoiceLinkDialogBox filamentMotionCheckDialogBox -> m
    celtech.coreUI.components.ChoiceLinkDialogBox filamentStuckDialogBox -> n
    celtech.coreUI.components.ChoiceLinkDialogBox loadFilamentNowDialogBox -> o
    celtech.coreUI.components.ChoiceLinkDialogBox errorChoiceBox -> p
    47:93:void <init>() -> <init>
    98:102:void showErrorNotification(java.lang.String,java.lang.String) -> a
    107:111:void showWarningNotification(java.lang.String,java.lang.String) -> b
    116:120:void showInformationNotification(java.lang.String,java.lang.String) -> c
    125:214:void processErrorPacketFromPrinter(celtech.roboxbase.comms.rx.FirmwareError,celtech.roboxbase.printerControl.model.Printer) -> a
    218:229:void setupErrorOptions() -> A
    234:262:void showCalibrationDialogue() -> a
    267:273:void showHeadUpdatedNotification() -> b
    278:288:void showSDCardNotification() -> c
    293:295:void showSliceSuccessfulNotification() -> d
    300:302:void showGCodePostProcessSuccessfulNotification() -> e
    307:309:void showPrintJobCancelledNotification() -> f
    314:316:void showPrintJobFailedNotification() -> g
    321:326:void showPrintTransferSuccessfulNotification(java.lang.String) -> a
    335:361:void showPrintTransferFailedNotification(java.lang.String) -> b
    366:374:void removePrintTransferFailedNotification() -> h
    379:381:void showPrintTransferInitiatedNotification() -> i
    386:388:void showReprintStartedNotification() -> j
    393:419:void showFirmwareUpgradeStatusNotification(celtech.roboxbase.services.firmware.FirmwareLoadResult) -> a
    431:467:boolean askUserToUpdateFirmware() -> k
    474:478:void configureFirmwareProgressDialog(celtech.roboxbase.services.firmware.FirmwareLoadService) -> a
    483:506:void showNoSDCardDialog() -> l
    511:525:void showNoPrinterIDDialog(celtech.roboxbase.printerControl.model.Printer) -> a
    530:568:boolean showOpenDoorDialog() -> m
    580:617:boolean showModelTooBigDialog(java.lang.String) -> c
    629:668:boolean showApplicationUpgradeDialog(java.lang.String) -> d
    675:675:celtech.roboxbase.appManager.PurgeResponse showPurgeDialog() -> n
    684:736:celtech.roboxbase.appManager.PurgeResponse showPurgeDialog(boolean) -> a
    746:778:boolean showJobsTransferringShutdownDialog() -> o
    785:805:void showProgramInvalidHeadDialog(celtech.roboxbase.utils.tasks.TaskResponder) -> a
    810:815:void hideProgramInvalidHeadDialog() -> p
    820:850:void showHeadNotRecognisedDialog(java.lang.String) -> e
    857:939:java.util.Optional showPrinterErrorDialog(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> a
    947:952:void showReelUpdatedNotification() -> q
    957:985:void showReelNotRecognisedDialog(java.lang.String) -> f
    990:1012:void askUserToClearBed() -> r
    1023:1060:boolean confirmAdvancedMode() -> s
    1071:1092:void showKeepPushingFilamentNotification() -> t
    1097:1108:void hideKeepPushingFilamentNotification() -> u
    1117:1166:void showEjectFailedDialog(celtech.roboxbase.printerControl.model.Printer,int) -> a
    1171:1196:void showFilamentStuckMessage() -> v
    1201:1226:void showLoadFilamentNowMessage() -> w
    1231:1250:void showFilamentMotionCheckBanner() -> x
    1255:1266:void hideFilamentMotionCheckBanner() -> y
    1271:1312:boolean showModelIsInvalidDialog(java.util.Set) -> a
    1319:1326:void clearAllDialogsOnDisconnect() -> z
    1331:1335:void showDismissableNotification(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> a
    1333:1334:void lambda$showDismissableNotification$26(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> b
    1323:1324:void lambda$clearAllDialogsOnDisconnect$25() -> B
    1259:1264:void lambda$hideFilamentMotionCheckBanner$24() -> C
    1235:1248:void lambda$showFilamentMotionCheckBanner$23() -> D
    1205:1224:void lambda$showLoadFilamentNowMessage$22() -> E
    1175:1194:void lambda$showFilamentStuckMessage$21() -> F
    1121:1164:void lambda$showEjectFailedDialog$20(celtech.roboxbase.printerControl.model.Printer,int) -> b
    1101:1106:void lambda$hideKeepPushingFilamentNotification$19() -> G
    1075:1090:void lambda$showKeepPushingFilamentNotification$18() -> H
    995:1010:void lambda$askUserToClearBed$17() -> I
    962:983:void lambda$showReelNotRecognisedDialog$16(java.lang.String) -> g
    949:951:void lambda$showReelUpdatedNotification$15() -> J
    825:848:void lambda$showHeadNotRecognisedDialog$14(java.lang.String) -> h
    791:803:void lambda$showProgramInvalidHeadDialog$13() -> K
    517:523:void lambda$showNoPrinterIDDialog$12() -> L
    488:504:void lambda$showNoSDCardDialog$11() -> M
    476:477:void lambda$configureFirmwareProgressDialog$10(celtech.roboxbase.services.firmware.FirmwareLoadService) -> b
    370:372:void lambda$removePrintTransferFailedNotification$9() -> N
    339:359:void lambda$showPrintTransferFailedNotification$8(java.lang.String) -> i
    282:286:void lambda$showSDCardNotification$7() -> O
    269:272:void lambda$showHeadUpdatedNotification$6() -> P
    236:261:void lambda$showCalibrationDialogue$5() -> Q
    128:213:void lambda$processErrorPacketFromPrinter$4(celtech.roboxbase.comms.rx.FirmwareError,celtech.roboxbase.printerControl.model.Printer) -> b
    148:149:void lambda$null$3(celtech.roboxbase.SystemErrorHandlerOptions) -> a
    118:119:void lambda$showInformationNotification$2(java.lang.String,java.lang.String) -> d
    109:110:void lambda$showWarningNotification$1(java.lang.String,java.lang.String) -> e
    100:101:void lambda$showErrorNotification$0(java.lang.String,java.lang.String) -> f
celtech.appManager.SystemNotificationManagerJavaFX$1 -> celtech.appManager.h$1:
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> a
    432:432:void <init>(celtech.appManager.SystemNotificationManagerJavaFX) -> <init>
    436:456:java.lang.Boolean call() -> a
    432:432:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$10 -> celtech.appManager.h$2:
    int[] $SwitchMap$celtech$roboxbase$SystemErrorHandlerOptions -> a
    int[] $SwitchMap$celtech$roboxbase$comms$rx$FirmwareError -> b
    128:167:void <clinit>() -> <clinit>
celtech.appManager.SystemNotificationManagerJavaFX$2 -> celtech.appManager.h$3:
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> a
    531:531:void <init>(celtech.appManager.SystemNotificationManagerJavaFX) -> <init>
    535:555:java.lang.Boolean call() -> a
    531:531:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$3 -> celtech.appManager.h$4:
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> a
    581:581:void <init>(celtech.appManager.SystemNotificationManagerJavaFX) -> <init>
    585:604:java.lang.Boolean call() -> a
    581:581:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$4 -> celtech.appManager.h$5:
    java.lang.String val$applicationName -> a
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> b
    630:630:void <init>(celtech.appManager.SystemNotificationManagerJavaFX,java.lang.String) -> <init>
    634:656:java.lang.Boolean call() -> a
    630:630:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$5 -> celtech.appManager.h$6:
    boolean val$allowAutoPrint -> a
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> b
    685:685:void <init>(celtech.appManager.SystemNotificationManagerJavaFX,boolean) -> <init>
    689:724:celtech.roboxbase.appManager.PurgeResponse call() -> a
    685:685:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$6 -> celtech.appManager.h$7:
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> a
    747:747:void <init>(celtech.appManager.SystemNotificationManagerJavaFX) -> <init>
    751:766:java.lang.Boolean call() -> a
    747:747:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$7 -> celtech.appManager.h$8:
    java.lang.String val$title -> a
    java.lang.String val$message -> b
    boolean val$showContinueOption -> c
    boolean val$showAbortOption -> d
    boolean val$showRetryOption -> e
    boolean val$showOKOption -> f
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> g
    862:862:void <init>(celtech.appManager.SystemNotificationManagerJavaFX,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    866:926:java.util.Optional call() -> a
    862:862:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$8 -> celtech.appManager.h$9:
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> a
    1024:1024:void <init>(celtech.appManager.SystemNotificationManagerJavaFX) -> <init>
    1028:1048:java.lang.Boolean call() -> a
    1024:1024:java.lang.Object call() -> call
celtech.appManager.SystemNotificationManagerJavaFX$9 -> celtech.appManager.h$10:
    java.util.Set val$modelNames -> a
    celtech.appManager.SystemNotificationManagerJavaFX this$0 -> b
    1272:1272:void <init>(celtech.appManager.SystemNotificationManagerJavaFX,java.util.Set) -> <init>
    1276:1300:java.lang.Boolean call() -> a
    1272:1272:java.lang.Object call() -> call
celtech.appManager.undo.AddModelCommand -> celtech.appManager.undo.a:
    libertysystems.stenographer.Stenographer steno -> c
    celtech.appManager.Project project -> a
    celtech.modelcontrol.ProjectifiableThing modelContainer -> b
    20:32:void <init>(celtech.appManager.Project,celtech.modelcontrol.ProjectifiableThing) -> <init>
    37:38:void do_() -> a
    44:47:void undo() -> b
    52:78:void redo() -> c
    83:83:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    89:89:void merge(celtech.appManager.undo.Command) -> b
    95:103:java.lang.String toString() -> toString
celtech.appManager.undo.AssignModelToExtruderCommand -> celtech.appManager.undo.b:
    celtech.appManager.ModelContainerProject project -> a
    java.util.Set modelContainersToAssignToExtruder0 -> b
    java.util.Set modelContainersToAssignToExtruder1 -> c
    25:38:void <init>(celtech.appManager.ModelContainerProject,celtech.modelcontrol.ModelContainer,boolean) -> <init>
    43:47:void <init>(celtech.appManager.ModelContainerProject,java.util.Set,java.util.Set) -> <init>
    52:53:void do_() -> a
    58:69:void undo() -> b
    74:85:void redo() -> c
    90:90:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    96:96:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.Command -> celtech.appManager.undo.c:
    11:11:void <init>() -> <init>
    void do_() -> a
    void undo() -> b
    void redo() -> c
    boolean canMergeWith(celtech.appManager.undo.Command) -> a
    void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.CommandStack -> celtech.appManager.undo.CommandStack:
    libertysystems.stenographer.Stenographer steno -> a
    javafx.beans.property.BooleanProperty canUndo -> b
    javafx.beans.property.BooleanProperty canRedo -> c
    javafx.collections.ObservableList commands -> d
    javafx.beans.property.IntegerProperty index -> e
    30:52:void <init>() -> <init>
    56:65:void do_(celtech.appManager.undo.Command) -> a
    72:78:void clearEndOfList() -> e
    82:90:void undo() -> a
    94:102:void redo() -> b
    106:106:javafx.beans.property.ReadOnlyBooleanProperty getCanRedo() -> c
    111:111:javafx.beans.property.ReadOnlyBooleanProperty getCanUndo() -> d
    119:132:void tryMerge() -> f
    27:28:void <clinit>() -> <clinit>
celtech.appManager.undo.CommandStack$UndoException -> celtech.appManager.undo.CommandStack$UndoException:
    celtech.appManager.undo.CommandStack this$0 -> this$0
    42:44:void <init>(celtech.appManager.undo.CommandStack,java.lang.String) -> <init>
celtech.appManager.undo.CopyModelsCommand -> celtech.appManager.undo.d:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.appManager.Project project -> a
    java.util.Set modelContainers -> b
    java.util.Set newProjectifiableThings -> c
    21:32:void <init>(celtech.appManager.Project,java.util.Set) -> <init>
    37:48:void do_() -> a
    53:54:void undo() -> b
    59:63:void redo() -> c
    68:68:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    74:74:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.CutCommand -> celtech.appManager.undo.e:
    libertysystems.stenographer.Stenographer steno -> i
    java.util.Set groupingOperations -> j
    celtech.appManager.ModelContainerProject project -> a
    float cutHeightValue -> b
    java.util.Set modelContainers -> c
    java.util.Set createdModelContainers -> d
    java.util.Set modelsToRemoveFromProject -> e
    boolean cutWorked -> f
    java.util.Map groupState -> g
    java.util.Map groupStructure -> h
    35:150:void <init>(celtech.appManager.ModelContainerProject,java.util.Set,float) -> <init>
    155:156:void do_() -> a
    162:185:void undo() -> b
    191:214:void redo() -> c
    220:234:void multiCut(java.util.Set,float) -> a
    239:246:void cut(celtech.modelcontrol.ModelContainer,float) -> a
    251:293:void cutSingleModel(celtech.modelcontrol.ModelContainer,float) -> b
    301:337:void cutGroup(celtech.modelcontrol.ModelGroup,float) -> a
    342:402:java.util.List cutModelContainerAtHeight(celtech.modelcontrol.ModelContainer,float) -> c
    410:422:void ungroupAllDescendentModelGroups(celtech.modelcontrol.ModelGroup) -> a
    427:427:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    433:433:void merge(celtech.appManager.undo.Command) -> b
    32:32:void access$000(celtech.appManager.undo.CutCommand,celtech.modelcontrol.ModelGroup) -> a
celtech.appManager.undo.CutCommand$GroupingOperation -> celtech.appManager.undo.e$a:
    celtech.modelcontrol.ModelGroup originalGroup -> a
    java.util.Set modelsForTopGroup -> b
    java.util.Set modelsForBottomGroup -> c
    java.util.Set modelsToRemoveFromProject -> d
    java.util.Set modelsToAddToProject -> e
    celtech.modelcontrol.ModelGroup topGroup -> f
    celtech.modelcontrol.ModelGroup bottomGroup -> g
    celtech.appManager.undo.CutCommand this$0 -> h
    57:63:void <init>(celtech.appManager.undo.CutCommand,celtech.modelcontrol.ModelGroup,java.util.Set,java.util.Set,java.util.Set,java.util.Set) -> <init>
    68:87:void undo() -> a
    92:124:void redo() -> b
celtech.appManager.undo.DeleteModelsCommand -> celtech.appManager.undo.f:
    libertysystems.stenographer.Stenographer steno -> c
    celtech.appManager.Project project -> a
    java.util.Set modelContainers -> b
    18:27:void <init>(celtech.appManager.Project,java.util.Set) -> <init>
    32:33:void do_() -> a
    38:43:void undo() -> b
    48:49:void redo() -> c
    54:54:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    60:60:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.GroupCommand -> celtech.appManager.undo.g:
    celtech.appManager.Project project -> a
    java.util.Set modelContainers -> b
    java.util.Set states -> d
    celtech.modelcontrol.ModelContainer group -> c
    27:31:void <init>(celtech.appManager.Project,java.util.Set) -> <init>
    36:41:void do_() -> a
    46:51:void undo() -> b
    56:57:void redo() -> c
    60:65:void doGroup() -> d
    70:70:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    76:76:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.SetExtruderFilamentCommand -> celtech.appManager.undo.h:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.appManager.ModelContainerProject project -> a
    celtech.roboxbase.configuration.Filament filament -> b
    celtech.roboxbase.configuration.Filament previousFilament -> c
    int extruderNumber -> e
    18:31:void <init>(celtech.appManager.ModelContainerProject,celtech.roboxbase.configuration.Filament,int) -> <init>
    36:44:void do_() -> a
    49:56:void undo() -> b
    61:68:void redo() -> c
    73:73:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    79:79:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.SplitIntoPartsCommand -> celtech.appManager.undo.i:
    celtech.appManager.ModelContainerProject project -> a
    java.util.Set modelContainers -> b
    java.util.Set newModelContainers -> c
    java.util.Map states -> d
    27:30:void <init>(celtech.appManager.ModelContainerProject,java.util.Set) -> <init>
    35:41:void do_() -> a
    46:56:void undo() -> b
    61:78:void redo() -> c
    83:83:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    89:89:void merge(celtech.appManager.undo.Command) -> b
celtech.appManager.undo.TransformCommand -> celtech.appManager.undo.j:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.appManager.undo.UndoableProject$NoArgsVoidFunc func -> b
    java.util.Set originalStates -> c
    java.util.Set newStates -> d
    boolean canMerge -> e
    celtech.appManager.Project project -> f
    23:37:void <init>(celtech.appManager.Project,celtech.appManager.undo.UndoableProject$NoArgsVoidFunc,boolean) -> <init>
    42:51:void do_() -> a
    56:57:void undo() -> b
    62:63:void redo() -> c
    68:73:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    80:89:void merge(celtech.appManager.undo.Command) -> b
    93:93:boolean getCanMerge() -> d
    101:107:void mergeStates(java.util.Set,java.util.Set) -> a
    111:116:java.util.Map makeStatesById(java.util.Set) -> a
    122:152:java.lang.String toString() -> toString
    145:146:void lambda$toString$1(java.lang.StringBuilder,celtech.modelcontrol.ItemState) -> a
    133:134:void lambda$toString$0(java.lang.StringBuilder,celtech.modelcontrol.ItemState) -> b
celtech.appManager.undo.UndoableProject -> celtech.appManager.undo.k:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.appManager.Project project -> a
    celtech.appManager.undo.CommandStack commandStack -> c
    54:55:void doTransformCommand(celtech.appManager.undo.UndoableProject$NoArgsVoidFunc) -> a
    59:61:void doTransformCommand(celtech.appManager.undo.UndoableProject$NoArgsVoidFunc,boolean) -> a
    36:67:void <init>(celtech.appManager.Project) -> <init>
    71:75:void translateModelsXTo(java.util.Set,double) -> a
    79:83:void translateModelsDepthPositionTo(java.util.Set,double) -> b
    88:92:void scaleXModels(java.util.Set,double,boolean) -> a
    97:101:void scaleYModels(java.util.Set,double,boolean) -> b
    106:110:void scaleZModels(java.util.Set,double,boolean) -> c
    114:118:void scaleXYZRatioSelection(java.util.Set,double) -> c
    122:126:void scaleXYRatioSelection(java.util.Set,double) -> d
    130:134:void resizeModelsDepth(java.util.Set,double) -> e
    138:142:void resizeModelsHeight(java.util.Set,double) -> f
    146:150:void resizeModelsWidth(java.util.Set,double) -> g
    154:161:void rotateLeanModels(java.util.Set,double) -> h
    165:172:void rotateTwistModels(java.util.Set,double) -> i
    176:183:void rotateTurnModels(java.util.Set,double) -> j
    188:192:void translateModelsBy(java.util.Set,double,double,boolean) -> a
    197:201:void translateModelsTo(java.util.Set,double,double,boolean) -> b
    205:209:void autoLayout() -> a
    213:220:void dropToBed(java.util.Set) -> a
    224:231:void snapToGround(celtech.modelcontrol.ModelContainer,javafx.scene.shape.MeshView,int) -> a
    235:237:void addModel(celtech.modelcontrol.ProjectifiableThing) -> a
    241:243:void deleteModels(java.util.Set) -> b
    247:249:void copyModels(java.util.Set) -> c
    254:261:void assignModelToExtruder(celtech.modelcontrol.ModelContainer,boolean) -> a
    266:270:void assignModelsToExtruders(java.util.Set,java.util.Set) -> a
    274:279:void group(java.util.Set) -> d
    283:288:void ungroup(java.util.Set) -> e
    292:297:void cut(java.util.Set,float) -> a
    228:229:void lambda$snapToGround$17(celtech.modelcontrol.ModelContainer,javafx.scene.shape.MeshView,int) -> b
    217:218:void lambda$dropToBed$16(java.util.Set) -> f
    207:208:void lambda$autoLayout$15() -> b
    199:200:void lambda$translateModelsTo$14(java.util.Set,double,double) -> a
    190:191:void lambda$translateModelsBy$13(java.util.Set,double,double) -> b
    180:181:void lambda$rotateTurnModels$12(java.util.Set,double) -> k
    169:170:void lambda$rotateTwistModels$11(java.util.Set,double) -> l
    158:159:void lambda$rotateLeanModels$10(java.util.Set,double) -> m
    148:149:void lambda$resizeModelsWidth$9(java.util.Set,double) -> n
    140:141:void lambda$resizeModelsHeight$8(java.util.Set,double) -> o
    132:133:void lambda$resizeModelsDepth$7(java.util.Set,double) -> p
    124:125:void lambda$scaleXYRatioSelection$6(java.util.Set,double) -> q
    116:117:void lambda$scaleXYZRatioSelection$5(java.util.Set,double) -> r
    108:109:void lambda$scaleZModels$4(java.util.Set,double,boolean) -> d
    99:100:void lambda$scaleYModels$3(java.util.Set,double,boolean) -> e
    90:91:void lambda$scaleXModels$2(java.util.Set,double,boolean) -> f
    81:82:void lambda$translateModelsDepthPositionTo$1(java.util.Set,double) -> s
    73:74:void lambda$translateModelsXTo$0(java.util.Set,double) -> t
celtech.appManager.undo.UndoableProject$NoArgsVoidFunc -> celtech.appManager.undo.k$a:
    void run() -> run
celtech.appManager.undo.UngroupCommand -> celtech.appManager.undo.l:
    libertysystems.stenographer.Stenographer steno -> c
    celtech.appManager.ModelContainerProject project -> a
    java.util.Map groupIds -> b
    java.util.Set originalStates -> d
    java.util.Set newStates -> e
    java.util.Set containersToRecentre -> f
    25:46:void <init>(celtech.appManager.ModelContainerProject,java.util.Set) -> <init>
    51:52:void do_() -> a
    57:62:void undo() -> b
    67:82:void redo() -> c
    87:87:boolean canMergeWith(celtech.appManager.undo.Command) -> a
    93:93:void merge(celtech.appManager.undo.Command) -> b
celtech.automaker.AutoMaker -> celtech.automaker.AutoMaker:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.coreUI.DisplayManager displayManager -> b
    java.util.ResourceBundle i18nBundle -> c
    libertysystems.configuration.Configuration configuration -> d
    celtech.roboxbase.comms.RoboxCommsManager commsManager -> e
    celtech.utils.AutoUpdate autoUpdater -> f
    java.util.List waitingForCancelFrom -> g
    javafx.stage.Stage mainStage -> h
    celtech.webserver.LocalWebInterface localWebInterface -> i
    celtech.roboxbase.comms.interapp.InterAppCommsThread interAppCommsListener -> j
    java.util.List modelsToLoadAtStartup -> k
    java.lang.String modelsToLoadAtStartup_projectName -> l
    boolean modelsToLoadAtStartup_dontgroup -> m
    java.lang.String uriScheme -> n
    java.lang.String paramDivider -> o
    46:69:void <init>() -> <init>
    74:172:void init() -> init
    177:255:void start(javafx.stage.Stage) -> start
    259:265:void attachIcons(javafx.stage.Stage) -> a
    270:274:void autoUpdateComplete(boolean) -> a
    278:279:void main(java.lang.String[]) -> main
    284:319:void stop() -> stop
    354:356:boolean areThreadsStillRunning() -> a
    367:389:boolean outputRunningThreads() -> b
    394:428:void showMainStage() -> c
    433:469:void incomingComms(celtech.roboxbase.comms.interapp.InterAppRequest) -> a
    398:415:void lambda$showMainStage$3(celtech.utils.AutoUpdateCompletionListener,javafx.stage.WindowEvent) -> a
    197:246:void lambda$start$2(javafx.stage.WindowEvent) -> a
    221:222:void lambda$null$1(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.TaskResponse) -> a
    147:164:void lambda$init$0(celtech.automaker.InterAppParameter) -> a
    53:57:void <clinit>() -> <clinit>
celtech.automaker.AutoMaker$1 -> celtech.automaker.AutoMaker$1:
    int[] $SwitchMap$celtech$automaker$AutoMakerInterAppRequestCommands -> a
    140:140:void <clinit>() -> <clinit>
celtech.automaker.AutoMakerInterAppRequest -> celtech.automaker.a:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.automaker.AutoMakerInterAppRequestCommands command -> b
    java.util.List urlEncodedParameters -> c
    19:27:void <init>() -> <init>
    31:31:celtech.automaker.AutoMakerInterAppRequestCommands getCommand() -> a
    36:37:void setCommand(celtech.automaker.AutoMakerInterAppRequestCommands) -> a
    41:41:java.util.List getUrlEncodedParameters() -> b
    46:47:void setUrlEncodedParameters(java.util.List) -> a
    52:59:java.util.List getUnencodedParameters() -> c
    64:65:void addURLEncodedParameter(celtech.automaker.InterAppParameterType,java.lang.String) -> a
    69:74:void addSeparatedURLEncodedParameter(celtech.automaker.InterAppParameterType,java.lang.String) -> b
    79:82:int hashCode() -> hashCode
    88:102:boolean equals(java.lang.Object) -> equals
celtech.automaker.AutoMakerInterAppRequestCommands -> celtech.automaker.AutoMakerInterAppRequestCommands:
    celtech.automaker.AutoMakerInterAppRequestCommands NONE -> NONE
    celtech.automaker.AutoMakerInterAppRequestCommands LOAD_MESH_INTO_LAYOUT_VIEW -> LOAD_MESH_INTO_LAYOUT_VIEW
    celtech.automaker.AutoMakerInterAppRequestCommands PRINT_GCODE_FILE -> PRINT_GCODE_FILE
    celtech.automaker.AutoMakerInterAppRequestCommands[] $VALUES -> $VALUES
    7:7:celtech.automaker.AutoMakerInterAppRequestCommands[] values() -> values
    7:7:celtech.automaker.AutoMakerInterAppRequestCommands valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:11:void <clinit>() -> <clinit>
celtech.automaker.AutoMakerPreloader -> celtech.automaker.b:
    libertysystems.stenographer.Stenographer steno -> a
    javafx.stage.Stage preloaderStage -> b
    javafx.scene.layout.Pane splashLayout -> c
    double splashWidth -> d
    double splashHeight -> e
    30:30:void <init>() -> <init>
    47:95:void start(javafx.stage.Stage) -> start
    100:115:void handleStateChangeNotification(javafx.application.Preloader$StateChangeNotification) -> handleStateChangeNotification
    108:110:void lambda$handleStateChangeNotification$0(javafx.event.ActionEvent) -> a
    41:42:void <clinit>() -> <clinit>
celtech.automaker.InterAppParameter -> celtech.automaker.c:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.automaker.InterAppParameterType type -> b
    java.lang.String urlEncodedParameter -> c
    18:26:void <init>() -> <init>
    18:32:void <init>(celtech.automaker.InterAppParameterType,java.lang.String) -> <init>
    36:36:celtech.automaker.InterAppParameterType getType() -> a
    41:42:void setType(celtech.automaker.InterAppParameterType) -> a
    46:46:java.lang.String getUrlEncodedParameter() -> b
    51:52:void setUrlEncodedParameter(java.lang.String) -> a
    57:67:java.lang.String getUnencodedParameter() -> c
    72:85:celtech.automaker.InterAppParameter fromParts(java.lang.String) -> b
    91:94:int hashCode() -> hashCode
    100:114:boolean equals(java.lang.Object) -> equals
celtech.automaker.InterAppParameterType -> celtech.automaker.InterAppParameterType:
    celtech.automaker.InterAppParameterType PROJECT_NAME -> PROJECT_NAME
    celtech.automaker.InterAppParameterType MODEL_NAME -> MODEL_NAME
    celtech.automaker.InterAppParameterType DONT_GROUP_MODELS -> DONT_GROUP_MODELS
    java.lang.String parameterAsText -> parameterAsText
    celtech.automaker.InterAppParameterType[] $VALUES -> $VALUES
    7:7:celtech.automaker.InterAppParameterType[] values() -> values
    7:7:celtech.automaker.InterAppParameterType valueOf(java.lang.String) -> valueOf
    17:19:void <init>(java.lang.String,int,java.lang.String) -> <init>
    23:23:java.lang.String getParameterAsText() -> getParameterAsText
    28:39:celtech.automaker.InterAppParameterType fromTextValue(java.lang.String) -> fromTextValue
    7:12:void <clinit>() -> <clinit>
celtech.automaker.WelcomeToApplicationManager -> celtech.automaker.d:
    15:15:void <init>() -> <init>
    20:34:void displayWelcomeIfRequired() -> a
    38:57:boolean applicationJustInstalled() -> b
    62:66:void showWelcomePage() -> c
    64:65:void lambda$showWelcomePage$0() -> d
celtech.configuration.ApplicationConfiguration -> celtech.configuration.a:
    libertysystems.stenographer.Stenographer steno -> G
    java.lang.String resourcePath -> a
    java.lang.String modelResourcePath -> b
    java.lang.String imageResourcePath -> c
    java.lang.String fxmlResourcePath -> d
    java.lang.String fxmlPanelResourcePath -> e
    java.lang.String fxmlDiagramsResourcePath -> f
    java.lang.String fxmlButtonsResourcePath -> g
    java.lang.String fxmlUtilityPanelResourcePath -> h
    java.lang.String fxmlPopupResourcePath -> i
    java.lang.String fontResourcePath -> j
    java.lang.String cssResourcePath -> k
    java.lang.String timeAndCostFileSubpath -> l
    java.lang.String mainCSSFile -> H
    java.lang.String dialogsCSSFile -> I
    double DEFAULT_WIDTH -> m
    double DEFAULT_HEIGHT -> n
    double DESIRED_ASPECT_RATIO -> o
    java.lang.String projectFileStorageDirectory -> J
    java.lang.String projectFileDirectoryPath -> p
    java.lang.String projectFileExtension -> q
    java.lang.String projectModelsFileExtension -> r
    java.lang.String demoPrintFilename -> s
    java.lang.String supportedProjectFileExtension -> K
    java.lang.String[] supportedModelExtensions -> t
    java.lang.String[] supported2DModelExtensions -> u
    java.lang.String[] supportedProcessedModelExtensions -> v
    java.lang.String printFileExtension -> w
    java.lang.String myMiniFactoryDownloadsDirectory -> L
    float bedHotAboveDegrees -> x
    java.lang.String projectDataFilename -> y
    java.lang.String userLocaleItem -> M
    javafx.scene.paint.Color xAxisColour -> z
    javafx.scene.paint.Color zAxisColour -> A
    javafx.util.Duration notificationDisplayDelay -> B
    javafx.geometry.Pos notificationPosition -> C
    int xPrintOffset -> D
    int yPrintOffset -> E
    java.lang.String timeOfLastNewsRetrievalItem -> F
    24:24:void <init>() -> <init>
    120:129:java.lang.String getProjectDirectory() -> a
    134:168:java.util.ArrayList getSupportedFileExtensionWildcards(celtech.appManager.ProjectMode) -> a
    173:204:java.util.ArrayList getSupportedFileExtensions(celtech.appManager.ProjectMode) -> b
    209:220:java.util.Locale getUserPreferredLocale() -> b
    225:226:void setUserPreferredLocale(java.util.Locale) -> a
    230:233:java.lang.String resetLastDirectoryToDefaults(celtech.configuration.DirectoryMemoryProperty) -> a
    238:244:java.lang.String getLastDirectory(celtech.configuration.DirectoryMemoryProperty) -> b
    249:250:void setLastDirectory(celtech.configuration.DirectoryMemoryProperty,java.lang.String) -> a
    254:255:java.lang.String getLastNewsRetrievalTimeAsString() -> c
    260:261:void setLastNewsRetrievalTime(java.lang.String) -> a
    272:283:java.lang.String getDownloadModifier(java.lang.String) -> b
    289:289:java.lang.String getMainCSSFile() -> d
    294:294:java.lang.String getDialogsCSSFile() -> e
    299:311:java.lang.String getMyMiniFactoryDownloadDirectory() -> f
    27:105:void <clinit>() -> <clinit>
celtech.configuration.ApplicationConfiguration$1 -> celtech.configuration.a$1:
    int[] $SwitchMap$celtech$appManager$ProjectMode -> a
    136:136:void <clinit>() -> <clinit>
celtech.configuration.CustomSlicerType -> celtech.configuration.CustomSlicerType:
    celtech.configuration.CustomSlicerType Default -> Default
    celtech.configuration.CustomSlicerType Cura -> Cura
    celtech.roboxbase.configuration.SlicerType slicerType -> slicerType
    celtech.configuration.CustomSlicerType[] $VALUES -> $VALUES
    9:9:celtech.configuration.CustomSlicerType[] values() -> values
    9:9:celtech.configuration.CustomSlicerType valueOf(java.lang.String) -> valueOf
    16:18:void <init>(java.lang.String,int,celtech.roboxbase.configuration.SlicerType) -> <init>
    22:24:celtech.configuration.CustomSlicerType customTypefromSettings(celtech.roboxbase.configuration.SlicerType) -> customTypefromSettings
    29:29:celtech.roboxbase.configuration.SlicerType getSlicerType() -> getSlicerType
    9:11:void <clinit>() -> <clinit>
celtech.configuration.DirectoryMemoryProperty -> celtech.configuration.DirectoryMemoryProperty:
    celtech.configuration.DirectoryMemoryProperty LAST_MODEL_DIRECTORY -> LAST_MODEL_DIRECTORY
    celtech.configuration.DirectoryMemoryProperty LAST_FIRMWARE_DIRECTORY -> LAST_FIRMWARE_DIRECTORY
    celtech.configuration.DirectoryMemoryProperty LAST_MACRO_DIRECTORY -> LAST_MACRO_DIRECTORY
    celtech.configuration.DirectoryMemoryProperty LAST_GCODE_DIRECTORY -> LAST_GCODE_DIRECTORY
    celtech.configuration.DirectoryMemoryProperty[] $VALUES -> $VALUES
    7:7:celtech.configuration.DirectoryMemoryProperty[] values() -> values
    7:7:celtech.configuration.DirectoryMemoryProperty valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:16:void <clinit>() -> <clinit>
celtech.configuration.ProjectFileFilter -> celtech.configuration.b:
    15:15:void <init>() -> <init>
    26:31:boolean accept(java.io.File) -> accept
celtech.configuration.UserPreferences -> celtech.configuration.c:
    javafx.beans.property.ObjectProperty slicerType -> a
    javafx.beans.property.BooleanProperty safetyFeaturesOn -> b
    java.lang.String languageTag -> c
    javafx.beans.property.BooleanProperty showTooltips -> d
    libertysystems.stenographer.LogLevel loggingLevel -> e
    javafx.beans.property.BooleanProperty advancedMode -> f
    javafx.beans.property.BooleanProperty firstUse -> g
    javafx.beans.property.BooleanProperty detectLoadedFilament -> h
    javafx.beans.property.BooleanProperty showDiagnostics -> i
    javafx.beans.property.BooleanProperty showGCode -> j
    javafx.beans.property.BooleanProperty showAdjustments -> k
    javafx.beans.property.ObjectProperty currencySymbol -> l
    javafx.beans.property.FloatProperty currencyGBPToLocalMultiplier -> m
    javafx.beans.property.BooleanProperty showMetricUnits -> n
    javafx.beans.property.BooleanProperty timelapseTriggerEnabled -> o
    javafx.beans.property.StringProperty goProWifiPassword -> p
    javafx.beans.property.BooleanProperty timelapseMoveBeforeCapture -> q
    javafx.beans.property.IntegerProperty timelapseXMove -> r
    javafx.beans.property.IntegerProperty timelapseYMove -> s
    javafx.beans.property.IntegerProperty timelapseDelay -> t
    javafx.beans.property.IntegerProperty timelapseDelayBeforeCapture -> u
    javafx.beans.property.BooleanProperty loosePartSplitOnLoad -> v
    javafx.beans.value.ChangeListener stringChangeListener -> w
    javafx.beans.value.ChangeListener booleanChangeListener -> x
    javafx.beans.value.ChangeListener numberChangeListener -> y
    boolean suppressAdvancedModeListenerCheck -> z
    javafx.beans.value.ChangeListener advancedModeChangeListener -> A
    30:116:void <init>(celtech.configuration.fileRepresentation.UserPreferenceFile) -> <init>
    120:120:java.lang.String getLanguageTag() -> a
    125:127:void setLanguageTag(java.lang.String) -> a
    131:131:celtech.roboxbase.configuration.SlicerType getSlicerType() -> b
    136:136:javafx.beans.property.ObjectProperty getSlicerTypeProperty() -> c
    141:143:void setSlicerType(celtech.roboxbase.configuration.SlicerType) -> a
    147:147:boolean isSafetyFeaturesOn() -> d
    152:153:void setSafetyFeaturesOn(boolean) -> a
    157:157:javafx.beans.property.BooleanProperty safetyFeaturesOnProperty() -> e
    162:162:boolean isShowTooltips() -> f
    167:168:void setShowTooltips(boolean) -> b
    172:172:javafx.beans.property.BooleanProperty showTooltipsProperty() -> g
    177:177:libertysystems.stenographer.LogLevel getLoggingLevel() -> h
    182:185:void setLoggingLevel(libertysystems.stenographer.LogLevel) -> a
    189:189:boolean isAdvancedMode() -> i
    194:195:void setAdvancedMode(boolean) -> c
    199:199:javafx.beans.property.BooleanProperty advancedModeProperty() -> j
    204:204:boolean isFirstUse() -> k
    209:210:void setFirstUse(boolean) -> d
    214:214:javafx.beans.property.BooleanProperty firstUseProperty() -> l
    219:219:boolean getDetectLoadedFilament() -> m
    224:225:void setDetectLoadedFilament(boolean) -> e
    229:229:javafx.beans.property.BooleanProperty detectLoadedFilamentProperty() -> n
    234:234:javafx.beans.property.ObjectProperty currencySymbolProperty() -> o
    239:239:celtech.configuration.units.CurrencySymbol getCurrencySymbol() -> p
    244:245:void setCurrencySymbol(celtech.configuration.units.CurrencySymbol) -> a
    249:249:javafx.beans.property.FloatProperty currencyGBPToLocalMultiplierProperty() -> q
    254:254:float getcurrencyGBPToLocalMultiplier() -> r
    259:260:void setcurrencyGBPToLocalMultiplier(float) -> a
    264:264:javafx.beans.property.BooleanProperty getTimelapseTriggerEnabledProperty() -> s
    269:270:void setTimelapseTriggerEnabled(boolean) -> f
    274:274:boolean isTimelapseTriggerEnabled() -> t
    279:279:javafx.beans.property.StringProperty getGoProWifiProperty() -> u
    284:285:void setGoProWifiPassword(java.lang.String) -> b
    289:289:java.lang.String getGoProWifiPassword() -> v
    294:295:void saveSettings() -> Q
    299:312:void confirmAdvancedModeChange(boolean) -> m
    316:316:javafx.beans.property.BooleanProperty showDiagnosticsProperty() -> w
    321:321:boolean getShowDiagnostics() -> x
    326:327:void setShowDiagnostics(boolean) -> g
    331:331:javafx.beans.property.BooleanProperty showGCodeProperty() -> y
    336:336:boolean getShowGCode() -> z
    341:342:void setShowGCode(boolean) -> h
    346:346:javafx.beans.property.BooleanProperty showAdjustmentsProperty() -> A
    351:351:boolean getShowAdjustments() -> B
    356:357:void setShowAdjustments(boolean) -> i
    361:362:void setShowMetricUnits(boolean) -> j
    366:366:boolean isShowMetricUnits() -> C
    371:371:javafx.beans.property.BooleanProperty showMetricUnitsProperty() -> D
    376:376:javafx.beans.property.BooleanProperty getTimelapseMoveBeforeCaptureProperty() -> E
    381:381:boolean isTimelapseMoveBeforeCapture() -> F
    386:387:void setTimelapseMoveBeforeCapture(boolean) -> k
    391:391:int getTimelapseXMove() -> G
    396:397:void setTimelapseXMove(int) -> a
    401:401:javafx.beans.property.IntegerProperty getTimelapseXMoveProperty() -> H
    406:406:int getTimelapseYMove() -> I
    411:412:void setTimelapseYMove(int) -> b
    416:416:javafx.beans.property.IntegerProperty getTimelapseYMoveProperty() -> J
    421:421:int getTimelapseDelay() -> K
    426:427:void setTimelapseDelay(int) -> c
    431:431:javafx.beans.property.IntegerProperty getTimelapseDelayProperty() -> L
    436:436:int getTimelapseDelayBeforeCapture() -> M
    441:442:void setTimelapseDelayBeforeCapture(int) -> d
    446:446:javafx.beans.property.IntegerProperty getTimelapseDelayBeforeCaptureProperty() -> N
    451:451:boolean isLoosePartSplitOnLoad() -> O
    456:457:void setLoosePartSplitOnLoad(boolean) -> l
    461:461:javafx.beans.property.BooleanProperty loosePartSplitOnLoadProperty() -> P
    68:73:void lambda$new$3(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    63:64:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    59:60:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> b
    55:56:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
celtech.configuration.datafileaccessors.UserPreferenceContainer -> b.a:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.configuration.datafileaccessors.UserPreferenceContainer instance -> c
    celtech.configuration.fileRepresentation.UserPreferenceFile userPreferenceFile -> d
    com.fasterxml.jackson.databind.ObjectMapper mapper -> e
    java.lang.String defaultUserPreferenceFilename -> a
    29:57:void <init>() -> <init>
    65:70:celtech.configuration.datafileaccessors.UserPreferenceContainer getInstance() -> a
    79:84:celtech.configuration.fileRepresentation.UserPreferenceFile getUserPreferenceFile() -> b
    89:100:void savePreferences(celtech.configuration.UserPreferences) -> a
    22:25:void <clinit>() -> <clinit>
celtech.configuration.fileRepresentation.ModelContainerProjectFile -> celtech.configuration.fileRepresentation.ModelContainerProjectFile:
    int subVersion -> subVersion
    int brimOverride -> brimOverride
    float fillDensityOverride -> fillDensityOverride
    boolean printSupportOverride -> printSupportOverride
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType printSupportTypeOverride -> printSupportTypeOverride
    boolean printRaft -> printRaft
    boolean spiralPrint -> spiralPrint
    java.lang.String extruder0FilamentID -> extruder0FilamentID
    java.lang.String extruder1FilamentID -> extruder1FilamentID
    java.lang.String settingsName -> settingsName
    celtech.roboxbase.services.slicer.PrintQualityEnumeration printQuality -> printQuality
    java.util.Map groupStructure -> groupStructure
    java.util.Map groupState -> groupState
    16:34:void <init>() -> <init>
    38:38:java.lang.String getSettingsName() -> getSettingsName
    43:44:void setSettingsName(java.lang.String) -> setSettingsName
    48:48:celtech.roboxbase.services.slicer.PrintQualityEnumeration getPrintQuality() -> getPrintQuality
    53:54:void setPrintQuality(celtech.roboxbase.services.slicer.PrintQualityEnumeration) -> setPrintQuality
    58:58:int getBrimOverride() -> getBrimOverride
    63:64:void setBrimOverride(int) -> setBrimOverride
    68:68:float getFillDensityOverride() -> getFillDensityOverride
    73:74:void setFillDensityOverride(float) -> setFillDensityOverride
    78:78:boolean getPrintSupportOverride() -> getPrintSupportOverride
    83:84:void setPrintSupportOverride(boolean) -> setPrintSupportOverride
    88:88:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType getPrintSupportTypeOverride() -> getPrintSupportTypeOverride
    93:94:void setPrintSupportTypeOverride(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType) -> setPrintSupportTypeOverride
    98:98:boolean getPrintRaft() -> getPrintRaft
    103:104:void setPrintRaft(boolean) -> setPrintRaft
    108:108:java.lang.String getExtruder0FilamentID() -> getExtruder0FilamentID
    113:114:void setExtruder0FilamentID(java.lang.String) -> setExtruder0FilamentID
    118:118:java.lang.String getExtruder1FilamentID() -> getExtruder1FilamentID
    123:124:void setExtruder1FilamentID(java.lang.String) -> setExtruder1FilamentID
    128:128:int getSubVersion() -> getSubVersion
    133:134:void setSubVersion(int) -> setSubVersion
    138:138:java.util.Map getGroupStructure() -> getGroupStructure
    143:144:void setGroupStructure(java.util.Map) -> setGroupStructure
    148:148:java.util.Map getGroupState() -> getGroupState
    153:154:void setGroupState(java.util.Map) -> setGroupState
    158:158:boolean getSpiralPrint() -> getSpiralPrint
    163:164:void setSpiralPrint(boolean) -> setSpiralPrint
    168:168:void populateFromProject(celtech.appManager.ModelContainerProject) -> populateFromProject
    173:189:void implementationSpecificPopulate(celtech.appManager.Project) -> implementationSpecificPopulate
celtech.configuration.fileRepresentation.ProjectFile -> celtech.configuration.fileRepresentation.ProjectFile:
    celtech.configuration.fileRepresentation.ProjectFileTypeEnum projectType -> projectType
    int version -> version
    java.lang.String projectName -> projectName
    java.util.Date lastModifiedDate -> lastModifiedDate
    java.lang.String lastPrintJobID -> lastPrintJobID
    9:15:void <init>() -> <init>
    19:19:celtech.configuration.fileRepresentation.ProjectFileTypeEnum getProjectType() -> getProjectType
    24:25:void setProjectType(celtech.configuration.fileRepresentation.ProjectFileTypeEnum) -> setProjectType
    29:29:java.util.Date getLastModifiedDate() -> getLastModifiedDate
    34:35:void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
    39:39:java.lang.String getLastPrintJobID() -> getLastPrintJobID
    44:45:void setLastPrintJobID(java.lang.String) -> setLastPrintJobID
    49:49:java.lang.String getProjectName() -> getProjectName
    54:55:void setProjectName(java.lang.String) -> setProjectName
    59:59:int getVersion() -> getVersion
    64:65:void setVersion(int) -> setVersion
    void implementationSpecificPopulate(celtech.appManager.Project) -> implementationSpecificPopulate
    70:75:void populateFromProject(celtech.appManager.Project) -> populateFromProject
celtech.configuration.fileRepresentation.ProjectFileDeserialiser -> celtech.configuration.fileRepresentation.ProjectFileDeserialiser:
    26:27:void <init>() -> <init>
    31:32:void <init>(java.lang.Class) -> <init>
    39:79:celtech.configuration.fileRepresentation.ProjectFile deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    21:21:java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
celtech.configuration.fileRepresentation.ProjectFileDeserialiser$1 -> celtech.configuration.fileRepresentation.ProjectFileDeserialiser$1:
    int[] $SwitchMap$celtech$configuration$fileRepresentation$ProjectFileTypeEnum -> $SwitchMap$celtech$configuration$fileRepresentation$ProjectFileTypeEnum
    52:52:void <clinit>() -> <clinit>
celtech.configuration.fileRepresentation.ProjectFileTypeEnum -> celtech.configuration.fileRepresentation.ProjectFileTypeEnum:
    celtech.configuration.fileRepresentation.ProjectFileTypeEnum MODEL -> MODEL
    celtech.configuration.fileRepresentation.ProjectFileTypeEnum SHAPE -> SHAPE
    celtech.configuration.fileRepresentation.ProjectFileTypeEnum[] $VALUES -> $VALUES
    7:7:celtech.configuration.fileRepresentation.ProjectFileTypeEnum[] values() -> values
    7:7:celtech.configuration.fileRepresentation.ProjectFileTypeEnum valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:11:void <clinit>() -> <clinit>
celtech.configuration.fileRepresentation.ShapeContainerProjectFile -> celtech.configuration.fileRepresentation.ShapeContainerProjectFile:
    int subVersion -> subVersion
    10:14:void <init>() -> <init>
    18:18:int getSubVersion() -> getSubVersion
    23:24:void setSubVersion(int) -> setSubVersion
    28:28:void populateFromProject(celtech.appManager.ShapeContainerProject) -> populateFromProject
    33:33:void implementationSpecificPopulate(celtech.appManager.Project) -> implementationSpecificPopulate
celtech.configuration.fileRepresentation.UserPreferenceFile -> celtech.configuration.fileRepresentation.UserPreferenceFile:
    celtech.roboxbase.configuration.SlicerType slicerType -> slicerType
    boolean safetyFeaturesOn -> safetyFeaturesOn
    java.lang.String languageTag -> languageTag
    boolean showTooltips -> showTooltips
    libertysystems.stenographer.LogLevel loggingLevel -> loggingLevel
    boolean advancedMode -> advancedMode
    boolean firstUse -> firstUse
    boolean detectLoadedFilament -> detectLoadedFilament
    celtech.configuration.units.CurrencySymbol currencySymbol -> currencySymbol
    float currencyGBPToLocalMultiplier -> currencyGBPToLocalMultiplier
    boolean showDiagnostics -> showDiagnostics
    boolean showGCode -> showGCode
    boolean showAdjustments -> showAdjustments
    boolean showMetricUnits -> showMetricUnits
    boolean timelapseTriggerEnabled -> timelapseTriggerEnabled
    java.lang.String goProWifiPassword -> goProWifiPassword
    boolean timelapseMoveBeforeCapture -> timelapseMoveBeforeCapture
    int timelapseXMove -> timelapseXMove
    int timelapseYMove -> timelapseYMove
    int timelapseDelay -> timelapseDelay
    int timelapseDelayBeforeCapture -> timelapseDelayBeforeCapture
    boolean loosePartSplitOnLoad -> loosePartSplitOnLoad
    15:39:void <init>() -> <init>
    43:43:java.lang.String getLanguageTag() -> getLanguageTag
    48:49:void setLanguageTag(java.lang.String) -> setLanguageTag
    53:53:celtech.roboxbase.configuration.SlicerType getSlicerType() -> getSlicerType
    58:59:void setSlicerType(celtech.roboxbase.configuration.SlicerType) -> setSlicerType
    63:63:boolean isSafetyFeaturesOn() -> isSafetyFeaturesOn
    68:69:void setSafetyFeaturesOn(boolean) -> setSafetyFeaturesOn
    73:73:boolean isShowTooltips() -> isShowTooltips
    78:79:void setShowTooltips(boolean) -> setShowTooltips
    83:83:libertysystems.stenographer.LogLevel getLoggingLevel() -> getLoggingLevel
    88:89:void setLoggingLevel(libertysystems.stenographer.LogLevel) -> setLoggingLevel
    93:93:boolean isAdvancedMode() -> isAdvancedMode
    98:99:void setAdvancedMode(boolean) -> setAdvancedMode
    103:103:boolean isFirstUse() -> isFirstUse
    108:108:boolean isDetectLoadedFilament() -> isDetectLoadedFilament
    113:114:void setFirstUse(boolean) -> setFirstUse
    118:119:void setDetectLoadedFilament(boolean) -> setDetectLoadedFilament
    123:123:celtech.configuration.units.CurrencySymbol getCurrencySymbol() -> getCurrencySymbol
    128:129:void setCurrencySymbol(celtech.configuration.units.CurrencySymbol) -> setCurrencySymbol
    133:133:float getCurrencyGBPToLocalMultiplier() -> getCurrencyGBPToLocalMultiplier
    138:139:void setCurrencyGBPToLocalMultiplier(float) -> setCurrencyGBPToLocalMultiplier
    143:143:boolean isShowDiagnostics() -> isShowDiagnostics
    148:148:boolean isShowGCode() -> isShowGCode
    153:153:boolean isShowAdjustments() -> isShowAdjustments
    158:159:void setShowDiagnostics(boolean) -> setShowDiagnostics
    163:164:void setShowGCode(boolean) -> setShowGCode
    168:169:void setShowAdjustments(boolean) -> setShowAdjustments
    173:173:boolean isShowMetricUnits() -> isShowMetricUnits
    178:179:void setShowMetricUnits(boolean) -> setShowMetricUnits
    183:183:boolean isTimelapseTriggerEnabled() -> isTimelapseTriggerEnabled
    188:189:void setTimelapseTriggerEnabled(boolean) -> setTimelapseTriggerEnabled
    193:193:java.lang.String getGoProWifiPassword() -> getGoProWifiPassword
    198:199:void setGoProWifiPassword(java.lang.String) -> setGoProWifiPassword
    203:203:boolean isTimelapseMoveBeforeCapture() -> isTimelapseMoveBeforeCapture
    208:209:void setTimelapseMoveBeforeCapture(boolean) -> setTimelapseMoveBeforeCapture
    213:214:void setTimelapseXMove(int) -> setTimelapseXMove
    218:218:int getTimelapseXMove() -> getTimelapseXMove
    223:224:void setTimelapseYMove(int) -> setTimelapseYMove
    228:228:int getTimelapseYMove() -> getTimelapseYMove
    233:234:void setTimelapseDelay(int) -> setTimelapseDelay
    238:238:int getTimelapseDelay() -> getTimelapseDelay
    243:244:void setTimelapseDelayBeforeCapture(int) -> setTimelapseDelayBeforeCapture
    248:248:int getTimelapseDelayBeforeCapture() -> getTimelapseDelayBeforeCapture
    253:253:boolean isLoosePartSplitOnLoad() -> isLoosePartSplitOnLoad
    258:259:void setLoosePartSplitOnLoad(boolean) -> setLoosePartSplitOnLoad
    263:285:void populateFromSettings(celtech.configuration.UserPreferences) -> populateFromSettings
celtech.configuration.units.CelsiusToFahrenheitConverter -> celtech.configuration.units.a:
    7:7:void <init>() -> <init>
    13:13:double convertToImperial(double) -> a
    19:19:double convertToMetric(double) -> b
celtech.configuration.units.CurrencySymbol -> celtech.configuration.units.CurrencySymbol:
    celtech.configuration.units.CurrencySymbol POUND -> POUND
    celtech.configuration.units.CurrencySymbol DOLLAR -> DOLLAR
    celtech.configuration.units.CurrencySymbol EURO -> EURO
    celtech.configuration.units.CurrencySymbol YEN_YUAN -> YEN_YUAN
    celtech.configuration.units.CurrencySymbol KOREAN_WON -> KOREAN_WON
    celtech.configuration.units.CurrencySymbol KRONA -> KRONA
    celtech.configuration.units.CurrencySymbol INDIAN_RUPEE -> INDIAN_RUPEE
    celtech.configuration.units.CurrencySymbol BAHT -> BAHT
    celtech.configuration.units.CurrencySymbol SWISS_FRANC -> SWISS_FRANC
    celtech.configuration.units.CurrencySymbol RAND -> RAND
    java.lang.String currencySymbol -> currencySymbol
    celtech.configuration.units.CurrencySymbol[] $VALUES -> $VALUES
    7:7:celtech.configuration.units.CurrencySymbol[] values() -> values
    7:7:celtech.configuration.units.CurrencySymbol valueOf(java.lang.String) -> valueOf
    24:26:void <init>(java.lang.String,int,java.lang.String) -> <init>
    30:30:java.lang.String getDisplayString() -> getDisplayString
    7:19:void <clinit>() -> <clinit>
celtech.configuration.units.MMToInchesConverter -> celtech.configuration.units.b:
    7:7:void <init>() -> <init>
    13:13:double convertToImperial(double) -> a
    19:19:double convertToMetric(double) -> b
celtech.configuration.units.UnitConverter -> celtech.configuration.units.UnitConverter:
    double convertToImperial(double) -> a
    double convertToMetric(double) -> b
celtech.configuration.units.UnitType -> celtech.configuration.units.UnitType:
    celtech.configuration.units.UnitType NONE -> NONE
    celtech.configuration.units.UnitType DISTANCE -> DISTANCE
    celtech.configuration.units.UnitType TEMPERATURE -> TEMPERATURE
    java.lang.String metricSymbol -> metricSymbol
    java.lang.String imperialSymbol -> imperialSymbol
    celtech.configuration.units.UnitConverter unitConverter -> unitConverter
    celtech.configuration.units.UnitType[] $VALUES -> $VALUES
    7:7:celtech.configuration.units.UnitType[] values() -> values
    7:7:celtech.configuration.units.UnitType valueOf(java.lang.String) -> valueOf
    21:25:void <init>(java.lang.String,int,java.lang.String,java.lang.String,celtech.configuration.units.UnitConverter) -> <init>
    29:29:java.lang.String getMetricSymbol() -> getMetricSymbol
    34:34:java.lang.String getImperialSymbol() -> getImperialSymbol
    39:39:celtech.configuration.units.UnitConverter getUnitConverter() -> getUnitConverter
    7:12:void <clinit>() -> <clinit>
celtech.coreUI.AmbientLEDState -> celtech.coreUI.AmbientLEDState:
    celtech.coreUI.AmbientLEDState OFF -> OFF
    celtech.coreUI.AmbientLEDState WHITE -> WHITE
    celtech.coreUI.AmbientLEDState COLOUR -> COLOUR
    celtech.coreUI.AmbientLEDState[] $VALUES -> $VALUES
    12:12:celtech.coreUI.AmbientLEDState[] values() -> values
    12:12:celtech.coreUI.AmbientLEDState valueOf(java.lang.String) -> valueOf
    12:12:void <init>(java.lang.String,int) -> <init>
    36:54:celtech.coreUI.AmbientLEDState getNextState() -> getNextState
    12:28:void <clinit>() -> <clinit>
celtech.coreUI.DisplayManager -> celtech.coreUI.DisplayManager:
    libertysystems.stenographer.Stenographer steno -> a
    int START_SCALING_WINDOW_HEIGHT -> b
    double MINIMUM_SCALE_FACTOR -> c
    celtech.appManager.ApplicationStatus applicationStatus -> d
    celtech.appManager.ProjectManager projectManager -> e
    celtech.coreUI.DisplayManager instance -> f
    javafx.stage.Stage mainStage -> g
    javafx.scene.Scene scene -> h
    javafx.scene.layout.HBox mainHolder -> i
    javafx.scene.layout.StackPane sidePanelContainer -> j
    java.util.HashMap insetPanels -> k
    javafx.scene.layout.AnchorPane rhPanel -> l
    javafx.scene.layout.VBox projectTabPaneHolder -> m
    java.util.HashMap insetPanelControllers -> n
    javafx.scene.layout.VBox sidePanel -> o
    javafx.scene.layout.AnchorPane interchangeablePanelAreaWithNotificationArea -> p
    javafx.scene.control.TabPane tabDisplay -> q
    javafx.scene.control.SingleSelectionModel tabDisplaySelectionModel -> r
    javafx.scene.control.Tab printerStatusTab -> s
    javafx.scene.control.Tab addPageTab -> t
    javafx.scene.control.Tab lastLayoutTab -> u
    celtech.coreUI.components.ProgressDialog modelLoadDialog -> v
    celtech.coreUI.controllers.InfoScreenIndicatorController infoScreenIndicatorController -> w
    java.lang.String addDummyPrinterCommand -> x
    java.lang.String dummyCommandPrefix -> y
    javafx.scene.layout.StackPane rootStackPane -> z
    javafx.scene.layout.AnchorPane rootAnchorPane -> A
    javafx.scene.layout.Pane spinnerContainer -> B
    celtech.coreUI.components.Spinner spinner -> C
    celtech.coreUI.components.Notifications.NotificationArea notificationArea -> D
    javafx.beans.property.BooleanProperty nodesMayHaveMoved -> E
    javafx.beans.property.ObjectProperty displayScalingModeProperty -> F
    int SHORT_SCALE_BELOW_HEIGHT -> G
    int VERY_SHORT_SCALE_BELOW_HEIGHT -> H
    111:156:void <init>() -> <init>
    160:173:void loadProjectsAtStartup() -> k
    177:181:void showAndSelectPrintProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> a
    185:241:void switchPagesForMode(celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> a
    245:256:celtech.coreUI.DisplayManager getInstance() -> a
    265:268:void startSpinning(javafx.scene.layout.Region) -> a
    276:278:void stopSpinning() -> b
    285:561:void configureDisplayManager(javafx.stage.Stage,java.lang.String,java.lang.String,java.util.List,boolean) -> a
    567:586:void setupPanelsForMode(celtech.appManager.ApplicationMode) -> a
    590:595:celtech.coreUI.components.ProjectTab createAndAddNewProjectTab() -> l
    600:600:javafx.stage.Stage getMainStage() -> c
    605:618:void shutdown() -> d
    628:687:void handle(javafx.scene.input.KeyEvent) -> a
    691:697:void selectAllModels(celtech.appManager.Project) -> a
    701:705:void deleteSelectedModels(celtech.appManager.Project,celtech.appManager.undo.UndoableProject) -> a
    709:720:void undoCommand(celtech.appManager.Project) -> b
    724:735:void redoCommand(celtech.appManager.Project) -> c
    739:739:celtech.coreUI.controllers.panels.PurgeInsetPanelController getPurgeInsetPanelController() -> e
    748:789:void whenWindowChangesSize() -> m
    793:793:javafx.beans.property.ReadOnlyBooleanProperty nodesMayHaveMovedProperty() -> f
    799:817:boolean trigger(java.lang.String,java.lang.String) -> a
    824:825:void unhandledKeyEvent(javafx.scene.input.KeyEvent) -> b
    829:955:void configureProjectDragNDrop(javafx.scene.Node) -> a
    959:959:javafx.beans.property.ReadOnlyObjectProperty getDisplayScalingModeProperty() -> g
    964:1033:void loadModelsIntoNewProject(java.lang.String,java.util.List,boolean) -> a
    1038:1048:void modelAddedToProject(celtech.appManager.Project) -> modelAddedToProject
    1052:1053:void initialiseBlank3DProject() -> h
    1057:1058:void initialiseBlank2DProject() -> i
    76:76:void handle(javafx.event.Event) -> handle
    982:991:void lambda$loadModelsIntoNewProject$10(java.lang.String,java.util.List) -> a
    971:977:void lambda$loadModelsIntoNewProject$9(java.util.List,java.lang.String) -> a
    920:954:void lambda$configureProjectDragNDrop$8(javafx.scene.input.DragEvent) -> a
    928:943:void lambda$null$7(java.io.File) -> a
    912:915:void lambda$configureProjectDragNDrop$6(javafx.scene.Node,javafx.scene.input.DragEvent) -> a
    871:907:void lambda$configureProjectDragNDrop$5(javafx.scene.Node,javafx.scene.input.DragEvent) -> b
    831:865:void lambda$configureProjectDragNDrop$4(javafx.scene.Node,javafx.scene.input.DragEvent) -> c
    615:616:void lambda$shutdown$3(javafx.scene.control.Tab) -> a
    612:612:boolean lambda$shutdown$2(javafx.scene.control.Tab) -> b
    457:458:void lambda$configureDisplayManager$1(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> a
    408:442:void lambda$configureDisplayManager$0(javafx.beans.value.ObservableValue,javafx.scene.control.Tab,javafx.scene.control.Tab) -> a
    76:76:void access$000(celtech.coreUI.DisplayManager) -> a
    76:76:libertysystems.stenographer.Stenographer access$100() -> j
    80:81:void <clinit>() -> <clinit>
celtech.coreUI.DisplayManager$1 -> celtech.coreUI.DisplayManager$1:
    celtech.coreUI.DisplayManager this$0 -> a
    483:483:void <init>(celtech.coreUI.DisplayManager) -> <init>
    488:489:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    483:483:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$2 -> celtech.coreUI.DisplayManager$2:
    celtech.coreUI.DisplayManager this$0 -> a
    493:493:void <init>(celtech.coreUI.DisplayManager) -> <init>
    498:499:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    493:493:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$3 -> celtech.coreUI.DisplayManager$3:
    celtech.coreUI.DisplayManager this$0 -> a
    503:503:void <init>(celtech.coreUI.DisplayManager) -> <init>
    508:509:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    503:503:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$4 -> celtech.coreUI.DisplayManager$4:
    celtech.coreUI.DisplayManager this$0 -> a
    513:513:void <init>(celtech.coreUI.DisplayManager) -> <init>
    518:519:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    513:513:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$5 -> celtech.coreUI.DisplayManager$5:
    celtech.coreUI.DisplayManager this$0 -> a
    523:523:void <init>(celtech.coreUI.DisplayManager) -> <init>
    528:530:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    523:523:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$6 -> celtech.coreUI.DisplayManager$6:
    java.lang.Runnable val$loaderRunnable -> a
    celtech.coreUI.visualisation.ModelLoader val$loader -> b
    celtech.coreUI.DisplayManager this$0 -> c
    1008:1008:void <init>(celtech.coreUI.DisplayManager,java.lang.Runnable,celtech.coreUI.visualisation.ModelLoader) -> <init>
    1012:1017:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    1008:1008:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.DisplayManager$7 -> celtech.coreUI.DisplayManager$7:
    int[] $SwitchMap$javafx$scene$input$KeyCode -> a
    635:635:void <clinit>() -> <clinit>
celtech.coreUI.DisplayManager$DisplayScalingMode -> celtech.coreUI.DisplayManager$DisplayScalingMode:
    celtech.coreUI.DisplayManager$DisplayScalingMode NORMAL -> NORMAL
    celtech.coreUI.DisplayManager$DisplayScalingMode SHORT -> SHORT
    celtech.coreUI.DisplayManager$DisplayScalingMode VERY_SHORT -> VERY_SHORT
    celtech.coreUI.DisplayManager$DisplayScalingMode[] $VALUES -> $VALUES
    128:128:celtech.coreUI.DisplayManager$DisplayScalingMode[] values() -> values
    128:128:celtech.coreUI.DisplayManager$DisplayScalingMode valueOf(java.lang.String) -> valueOf
    128:128:void <init>(java.lang.String,int) -> <init>
    128:133:void <clinit>() -> <clinit>
celtech.coreUI.LayoutSubmode -> celtech.coreUI.LayoutSubmode:
    celtech.coreUI.LayoutSubmode SELECT -> SELECT
    celtech.coreUI.LayoutSubmode SNAP_TO_GROUND -> SNAP_TO_GROUND
    celtech.coreUI.LayoutSubmode Z_CUT -> Z_CUT
    celtech.coreUI.LayoutSubmode[] $VALUES -> $VALUES
    7:7:celtech.coreUI.LayoutSubmode[] values() -> values
    7:7:celtech.coreUI.LayoutSubmode valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:20:void <clinit>() -> <clinit>
celtech.coreUI.ProjectGUIRules -> celtech.coreUI.a:
    javafx.collections.ObservableSet excludedFromSelection -> a
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> b
    24:27:void <init>(celtech.coreUI.visualisation.ProjectSelection,javafx.collections.ObservableSet) -> <init>
    31:31:javafx.beans.binding.BooleanBinding canSnapToGroundSelection() -> a
    36:36:javafx.beans.binding.BooleanBinding canRemoveOrDuplicateSelection() -> b
    41:41:javafx.beans.binding.BooleanBinding canAddModel() -> c
    46:46:javafx.beans.binding.BooleanBinding canCutModel() -> d
    51:51:javafx.beans.binding.BooleanBinding canGroupSelection() -> e
    56:56:javafx.beans.binding.BooleanBinding canUngroupSelection() -> f
celtech.coreUI.ProjectGUIState -> celtech.coreUI.b:
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> a
    javafx.beans.property.ObjectProperty layoutSubmode -> b
    celtech.appManager.undo.CommandStack commandStack -> c
    javafx.collections.ObservableSet excludedFromSelection -> d
    celtech.coreUI.ProjectGUIRules projectGUIRules -> e
    27:37:void <init>(celtech.appManager.Project) -> <init>
    41:41:celtech.appManager.undo.CommandStack getCommandStack() -> a
    45:45:celtech.coreUI.ProjectGUIRules getProjectGUIRules() -> b
    49:49:javafx.collections.ObservableSet getExcludedFromSelection() -> c
    53:53:celtech.coreUI.visualisation.ProjectSelection getProjectSelection() -> d
    57:57:javafx.beans.property.ObjectProperty getLayoutSubmodeProperty() -> e
celtech.coreUI.SidePanel -> celtech.coreUI.c:
    javafx.scene.layout.HBox sidePanelNode -> a
    java.lang.Object sidePanelController -> b
    24:27:void <init>(javafx.scene.layout.HBox,java.lang.Object) -> <init>
    35:35:javafx.scene.layout.HBox getSidePanelNode() -> a
    44:45:void setSidePanelNode(javafx.scene.layout.HBox) -> a
    53:53:java.lang.Object getSidePanelController() -> b
    62:63:void setSidePanelController(java.lang.Object) -> a
    71:88:javafx.scene.layout.VBox getSlideOutContainer() -> c
celtech.coreUI.SpinnerControl -> celtech.coreUI.d:
    void startSpinning(javafx.scene.layout.Region) -> a
    void stopSpinning() -> b
celtech.coreUI.StandardColours -> celtech.coreUI.e:
    javafx.scene.paint.Color ROBOX_BLUE -> a
    javafx.scene.paint.Color ROBOX_BLUE_TRANSPARENT -> b
    javafx.scene.paint.Color LIGHT_GREY -> c
    javafx.scene.paint.Color LIGHT_GREY_TRANSPARENT -> d
    javafx.scene.paint.Color SELECTION_HIGHLIGHTER_GREEN -> e
    javafx.scene.paint.Color DIMENSION_LINE_GREEN -> f
    javafx.scene.paint.Color BED_AXIS_GREEN -> g
    javafx.scene.paint.Color HIGHLIGHT_ORANGE -> h
    javafx.scene.paint.Color HIGHLIGHT_ORANGE_TRANSPARENT -> i
    14:14:void <init>() -> <init>
    16:24:void <clinit>() -> <clinit>
celtech.coreUI.StandardEffects -> celtech.coreUI.f:
    javafx.scene.effect.Glow glowEffect -> a
    javafx.scene.effect.DropShadow dropShadowEffect -> b
    24:24:void <init>() -> <init>
    36:40:javafx.scene.effect.Effect getMouseEnteredEffect() -> a
    49:49:javafx.scene.effect.Effect getDropShadowEffect() -> b
    58:58:javafx.scene.effect.Effect getButtonPressEffect() -> c
    67:68:void disableEffect(javafx.scene.Node) -> a
    76:77:void enableEffect(javafx.scene.Node) -> b
    85:85:javafx.scene.effect.Effect defaultGlow() -> d
    97:103:javafx.animation.FillTransition getThrobFillEffect(javafx.scene.paint.Color,javafx.scene.shape.Shape,double) -> a
    115:121:javafx.animation.StrokeTransition getThrobStrokeEffect(javafx.scene.paint.Color,javafx.scene.shape.Shape,double) -> b
    130:131:void setDefaultStroke(javafx.scene.shape.Shape) -> a
    27:28:void <clinit>() -> <clinit>
celtech.coreUI.components.BoundTextField -> celtech.coreUI.components.BoundTextField:
    javafx.beans.property.DoubleProperty propertyToDisplay -> propertyToDisplay
    java.lang.String gcodePrefix -> gcodePrefix
    java.util.regex.Pattern wholeNumberPattern -> wholeNumberPattern
    23:33:void <init>() -> <init>
    42:92:void bindToDataSource(javafx.beans.property.DoubleProperty,java.lang.String) -> bindToDataSource
    96:97:void revertValue(java.lang.String) -> revertValue
    112:114:void bindTextDisplay() -> bindTextDisplay
    118:119:void unbindTextDisplay() -> unbindTextDisplay
    21:21:java.util.regex.Pattern access$000(celtech.coreUI.components.BoundTextField) -> access$000
    21:21:void access$100(celtech.coreUI.components.BoundTextField,java.lang.String) -> access$100
    21:21:void access$200(celtech.coreUI.components.BoundTextField) -> access$200
    21:21:void access$300(celtech.coreUI.components.BoundTextField) -> access$300
celtech.coreUI.components.BoundTextField$1 -> celtech.coreUI.components.BoundTextField$1:
    celtech.coreUI.components.BoundTextField this$0 -> this$0
    47:47:void <init>(celtech.coreUI.components.BoundTextField) -> <init>
    51:55:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> changed
    47:47:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.BoundTextField$2 -> celtech.coreUI.components.BoundTextField$2:
    celtech.coreUI.components.BoundTextField this$0 -> this$0
    59:59:void <init>(celtech.coreUI.components.BoundTextField) -> <init>
    63:70:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    59:59:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.BoundTextField$3 -> celtech.coreUI.components.BoundTextField$3:
    celtech.coreUI.components.BoundTextField this$0 -> this$0
    74:74:void <init>(celtech.coreUI.components.BoundTextField) -> <init>
    78:90:void handle(javafx.scene.input.KeyEvent) -> handle
    74:74:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.BoundTextField$4 -> celtech.coreUI.components.BoundTextField$4:
    int[] $SwitchMap$javafx$scene$input$KeyCode -> $SwitchMap$javafx$scene$input$KeyCode
    78:78:void <clinit>() -> <clinit>
celtech.coreUI.components.ChoiceLinkButton -> celtech.coreUI.components.ChoiceLinkButton:
    javafx.scene.layout.VBox labelGroup -> labelGroup
    celtech.coreUI.components.HyperlinkedLabel title -> title
    celtech.coreUI.components.HyperlinkedLabel message -> message
    27:44:void <init>() -> <init>
    48:49:void setTitle(java.lang.String) -> setTitle
    53:53:java.lang.String getTitle() -> getTitle
    58:58:javafx.beans.property.StringProperty titleProperty() -> titleProperty
    63:64:void setMessage(java.lang.String) -> setMessage
    68:68:java.lang.String getMessage() -> getMessage
    73:73:javafx.beans.property.StringProperty messageProperty() -> messageProperty
celtech.coreUI.components.ChoiceLinkDialogBox -> celtech.coreUI.components.ChoiceLinkDialogBox:
    celtech.coreUI.components.HyperlinkedLabel title -> title
    celtech.coreUI.components.HyperlinkedLabel message -> message
    javafx.scene.layout.VBox buttonContainer -> buttonContainer
    javafx.stage.Stage dialogStage -> dialogStage
    java.util.Optional chosenButton -> chosenButton
    boolean closeOnPrinterDisconnect -> closeOnPrinterDisconnect
    boolean closedDueToPrinterDisconnect -> closedDueToPrinterDisconnect
    java.util.List openDialogs -> openDialogs
    60:66:void whenPrinterDisconnected() -> whenPrinterDisconnected
    69:71:void closeDueToPrinterDisconnect() -> closeDueToPrinterDisconnect
    74:74:boolean closedDueToPrinterDisconnect() -> closedDueToPrinterDisconnect
    46:80:void <init>() -> <init>
    46:113:void <init>(boolean) -> <init>
    117:118:void setTitle(java.lang.String) -> setTitle
    122:123:void setMessage(java.lang.String) -> setMessage
    127:132:celtech.coreUI.components.ChoiceLinkButton addChoiceLink(java.lang.String,java.lang.String) -> addChoiceLink
    137:141:celtech.coreUI.components.ChoiceLinkButton addChoiceLink(java.lang.String) -> addChoiceLink
    145:146:void addControl(javafx.scene.control.Control) -> addControl
    150:161:void configureButtonListener(celtech.coreUI.components.ChoiceLinkButton) -> configureButtonListener
    165:167:celtech.coreUI.components.ChoiceLinkButton addChoiceLink(celtech.coreUI.components.ChoiceLinkButton) -> addChoiceLink
    177:185:java.util.Optional getUserInput() -> getUserInput
    194:194:boolean isShowing() -> isShowing
    199:201:void close() -> close
    25:25:java.util.Optional access$002(celtech.coreUI.components.ChoiceLinkDialogBox,java.util.Optional) -> access$002
    25:25:javafx.stage.Stage access$100(celtech.coreUI.components.ChoiceLinkDialogBox) -> access$100
    54:54:void <clinit>() -> <clinit>
celtech.coreUI.components.ChoiceLinkDialogBox$1 -> celtech.coreUI.components.ChoiceLinkDialogBox$1:
    celtech.coreUI.components.ChoiceLinkButton val$button -> val$button
    celtech.coreUI.components.ChoiceLinkDialogBox this$0 -> this$0
    151:151:void <init>(celtech.coreUI.components.ChoiceLinkDialogBox,celtech.coreUI.components.ChoiceLinkButton) -> <init>
    156:158:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    151:151:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.ChoiceLinkDialogBox$PrinterDisconnectedException -> celtech.coreUI.components.ChoiceLinkDialogBox$PrinterDisconnectedException:
    celtech.coreUI.components.ChoiceLinkDialogBox this$0 -> this$0
    31:33:void <init>(celtech.coreUI.components.ChoiceLinkDialogBox,java.lang.String) -> <init>
celtech.coreUI.components.ColourChooserButton -> celtech.coreUI.components.ColourChooserButton:
    javafx.beans.property.ObjectProperty axis -> axis
    javafx.beans.property.ObjectProperty displayColour -> displayColour
    javafx.scene.shape.Rectangle colourSwatch -> colourSwatch
    31:32:void setDisplayColour(javafx.scene.paint.Color) -> setDisplayColour
    40:40:javafx.scene.paint.Color getDisplayColour() -> getDisplayColour
    49:49:javafx.beans.property.ObjectProperty getDisplayColourProperty() -> getDisplayColourProperty
    21:61:void <init>() -> <init>
celtech.coreUI.components.DoubleTextField -> celtech.coreUI.components.DoubleTextField:
    15:15:void <init>() -> <init>
celtech.coreUI.components.EnhancedToggleGroup -> celtech.coreUI.components.EnhancedToggleGroup:
    javafx.beans.property.ObjectProperty selectedToggle -> selectedToggle
    30:30:javafx.beans.property.ObjectProperty writableSelectedToggleProperty() -> writableSelectedToggleProperty
    22:58:void <init>() -> <init>
celtech.coreUI.components.EnhancedToggleGroup$1 -> celtech.coreUI.components.EnhancedToggleGroup$1:
    celtech.coreUI.components.EnhancedToggleGroup this$0 -> this$0
    39:39:void <init>(celtech.coreUI.components.EnhancedToggleGroup) -> <init>
    43:44:void changed(javafx.beans.value.ObservableValue,javafx.scene.control.Toggle,javafx.scene.control.Toggle) -> changed
    39:39:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.EnhancedToggleGroup$2 -> celtech.coreUI.components.EnhancedToggleGroup$2:
    celtech.coreUI.components.EnhancedToggleGroup this$0 -> this$0
    48:48:void <init>(celtech.coreUI.components.EnhancedToggleGroup) -> <init>
    52:56:void changed(javafx.beans.value.ObservableValue,javafx.scene.control.Toggle,javafx.scene.control.Toggle) -> changed
    48:48:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.GCodeMacroButton -> celtech.coreUI.components.GCodeMacroButton:
    javafx.beans.property.StringProperty macroName -> macroName
    11:13:void <init>() -> <init>
    21:22:void setMacroName(java.lang.String) -> setMacroName
    30:30:java.lang.String getMacroName() -> getMacroName
    39:39:javafx.beans.property.StringProperty macroNameProperty() -> macroNameProperty
celtech.coreUI.components.HideableTooltip -> celtech.coreUI.components.HideableTooltip:
    13:17:void <init>() -> <init>
celtech.coreUI.components.HyperlinkedLabel -> celtech.coreUI.components.HyperlinkedLabel:
    javafx.beans.property.StringProperty text -> text
    java.util.regex.Pattern hyperlinkPattern -> hyperlinkPattern
    java.util.Map hyperlinkMap -> hyperlinkMap
    24:30:void <init>() -> <init>
    34:107:void replaceText(java.lang.String) -> replaceText
    111:114:void addPlainText(java.lang.String) -> addPlainText
    118:118:java.lang.String getText() -> getText
    123:124:void setText(java.lang.String) -> setText
    128:128:javafx.beans.property.StringProperty textProperty() -> textProperty
    61:88:void lambda$replaceText$0(javafx.event.ActionEvent) -> lambda$replaceText$0
    28:28:void <clinit>() -> <clinit>
celtech.coreUI.components.InsetPanelMenu -> celtech.coreUI.components.InsetPanelMenu:
    javafx.scene.text.Text menuTitle -> menuTitle
    javafx.scene.layout.VBox menuItemContainer -> menuItemContainer
    javafx.scene.control.ToggleGroup buttonGroup -> buttonGroup
    28:46:void <init>() -> <init>
    50:51:void setTitle(java.lang.String) -> setTitle
    55:58:void addMenuItem(celtech.coreUI.components.InsetPanelMenuItem) -> addMenuItem
celtech.coreUI.components.InsetPanelMenuItem -> celtech.coreUI.components.InsetPanelMenuItem:
    22:39:void <init>() -> <init>
    43:44:void setTitle(java.lang.String) -> setTitle
celtech.coreUI.components.InsetPanelWithMenu -> celtech.coreUI.components.InsetPanelWithMenu:
    celtech.coreUI.components.InsetPanelMenu menu -> menu
    javafx.scene.layout.HBox contentContainer -> contentContainer
    28:58:void <init>() -> <init>
    62:63:void setMenuTitle(java.lang.String) -> setMenuTitle
    67:70:void addMenuItem(celtech.coreUI.components.InsetPanelMenuItem,javafx.scene.Node) -> addMenuItem
celtech.coreUI.components.JogButton -> celtech.coreUI.components.JogButton:
    javafx.beans.property.ObjectProperty axis -> axis
    javafx.beans.property.FloatProperty distance -> distance
    javafx.beans.property.BooleanProperty useG1 -> useG1
    javafx.beans.property.IntegerProperty feedRate -> feedRate
    37:38:void setAxis(celtech.roboxbase.utils.AxisSpecifier) -> setAxis
    46:46:celtech.roboxbase.utils.AxisSpecifier getAxis() -> getAxis
    55:55:javafx.beans.property.ObjectProperty getAxisProperty() -> getAxisProperty
    64:65:void setDistance(float) -> setDistance
    73:73:float getDistance() -> getDistance
    82:82:javafx.beans.property.FloatProperty getDistanceProperty() -> getDistanceProperty
    91:92:void setUseG1(boolean) -> setUseG1
    100:100:boolean getUseG1() -> getUseG1
    109:109:javafx.beans.property.BooleanProperty getUseG1Property() -> getUseG1Property
    118:119:void setFeedRate(int) -> setFeedRate
    127:127:int getFeedRate() -> getFeedRate
    136:136:javafx.beans.property.IntegerProperty getFeedRateProperty() -> getFeedRateProperty
    26:146:void <init>() -> <init>
celtech.coreUI.components.ModalDialog -> celtech.coreUI.components.ModalDialog:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.stage.Stage dialogStage -> dialogStage
    celtech.coreUI.controllers.ModalDialogController dialogController -> dialogController
    31:42:void <init>(java.lang.String) -> <init>
    31:50:void <init>() -> <init>
    54:82:void initialise(java.lang.String) -> initialise
    90:91:void setTitle(java.lang.String) -> setTitle
    99:100:void setMessage(java.lang.String) -> setMessage
    109:109:int addButton(java.lang.String) -> addButton
    120:120:int addButton(java.lang.String,javafx.beans.property.ReadOnlyBooleanProperty) -> addButton
    129:131:int show() -> show
    139:140:void close() -> close
    148:148:boolean isShowing() -> isShowing
    157:158:void setContent(javafx.scene.Node) -> setContent
celtech.coreUI.components.Notifications.AppearingNotificationBar -> celtech.coreUI.components.Notifications.AppearingNotificationBar:
    javafx.scene.layout.StackPane notificationBar -> notificationBar
    celtech.coreUI.components.HyperlinkedLabel notificationDescription -> notificationDescription
    javafx.scene.control.Label notificationStepXofY -> notificationStepXofY
    javafx.scene.shape.SVGPath noteIndicator -> noteIndicator
    javafx.scene.Group warningIndicator -> warningIndicator
    javafx.scene.Group cautionIndicator -> cautionIndicator
    javafx.scene.control.Button actionButton -> actionButton
    javafx.util.Duration transitionLengthMillis -> transitionLengthMillis
    celtech.roboxbase.appManager.NotificationType notificationType -> notificationType
    javafx.animation.Animation hideSidebar -> hideSidebar
    javafx.animation.Animation showSidebar -> showSidebar
    double minimumToShow -> minimumToShow
    double maximumToShow -> maximumToShow
    boolean slidingIntoView -> slidingIntoView
    boolean slidingOutOfView -> slidingOutOfView
    boolean slidIntoView -> slidIntoView
    boolean slidOutOfView -> slidOutOfView
    double panelHeight -> panelHeight
    javafx.scene.shape.Rectangle clippingRectangle -> clippingRectangle
    59:132:void <init>() -> <init>
    140:153:void slideMenuPanel(double) -> slideMenuPanel
    160:186:void startSlidingOutOfView() -> startSlidingOutOfView
    193:219:void startSlidingInToView() -> startSlidingInToView
    224:245:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    249:249:boolean isSlidInOrSlidingIn() -> isSlidInOrSlidingIn
    254:254:boolean isSlidOutOrSlidingOut() -> isSlidOutOrSlidingOut
    259:260:void setMessage(java.lang.String) -> setMessage
    264:289:void setType(celtech.roboxbase.appManager.NotificationType) -> setType
    293:293:celtech.roboxbase.appManager.NotificationType getType() -> getType
    298:300:void setXOfY(int,int) -> setXOfY
    void show() -> show
    void finishedSlidingIntoView() -> finishedSlidingIntoView
    void finishedSlidingOutOfView() -> finishedSlidingOutOfView
    boolean isSameAs(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> isSameAs
    void destroyBar() -> destroyBar
    124:128:void lambda$new$1(javafx.event.ActionEvent) -> lambda$new$1
    117:120:void lambda$new$0(javafx.event.ActionEvent) -> lambda$new$0
    31:31:javafx.util.Duration access$000() -> access$000
    31:31:void access$100(celtech.coreUI.components.Notifications.AppearingNotificationBar,double) -> access$100
    55:55:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.AppearingNotificationBar$1 -> celtech.coreUI.components.Notifications.AppearingNotificationBar$1:
    celtech.coreUI.components.Notifications.AppearingNotificationBar this$0 -> this$0
    60:63:void <init>(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> <init>
    68:69:void interpolate(double) -> interpolate
celtech.coreUI.components.Notifications.AppearingNotificationBar$2 -> celtech.coreUI.components.Notifications.AppearingNotificationBar$2:
    celtech.coreUI.components.Notifications.AppearingNotificationBar this$0 -> this$0
    73:77:void <init>(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> <init>
    82:83:void interpolate(double) -> interpolate
celtech.coreUI.components.Notifications.AppearingNotificationBar$3 -> celtech.coreUI.components.Notifications.AppearingNotificationBar$3:
    int[] $SwitchMap$celtech$roboxbase$appManager$NotificationType -> $SwitchMap$celtech$roboxbase$appManager$NotificationType
    264:264:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.AppearingProgressBar -> celtech.coreUI.components.Notifications.AppearingProgressBar:
    javafx.scene.layout.StackPane statusBar -> statusBar
    javafx.scene.control.Label largeTargetValue -> largeTargetValue
    javafx.scene.control.Label currentValue -> currentValue
    javafx.scene.control.Label largeProgressDescription -> largeProgressDescription
    javafx.scene.control.Label largeTargetLegend -> largeTargetLegend
    javafx.scene.control.ProgressBar progressBar -> progressBar
    celtech.coreUI.components.buttons.GraphicButton pauseButton -> pauseButton
    celtech.coreUI.components.buttons.GraphicButton resumeButton -> resumeButton
    celtech.coreUI.components.buttons.GraphicButton cancelButton -> cancelButton
    javafx.scene.layout.VBox layerData -> layerData
    javafx.scene.control.Label layerN -> layerN
    javafx.scene.control.Label layerTotal -> layerTotal
    javafx.scene.control.Label layerTitle -> layerTitle
    javafx.util.Duration transitionLengthMillis -> transitionLengthMillis
    javafx.animation.Animation hideSidebar -> hideSidebar
    javafx.animation.Animation showSidebar -> showSidebar
    double minimumToShow -> minimumToShow
    double maximumToShow -> maximumToShow
    boolean slidingIntoView -> slidingIntoView
    boolean slidingOutOfView -> slidingOutOfView
    boolean slidIntoView -> slidIntoView
    boolean slidOutOfView -> slidOutOfView
    double panelHeight -> panelHeight
    javafx.scene.shape.Rectangle clippingRectangle -> clippingRectangle
    74:142:void <init>() -> <init>
    150:163:void slideMenuPanel(double) -> slideMenuPanel
    170:196:void startSlidingOutOfView() -> startSlidingOutOfView
    203:229:void startSlidingInToView() -> startSlidingInToView
    234:256:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    260:260:boolean isSlidInOrSlidingIn() -> isSlidInOrSlidingIn
    265:265:boolean isSlidOutOrSlidingOut() -> isSlidOutOrSlidingOut
    270:271:void targetLegendRequired(boolean) -> targetLegendRequired
    275:276:void targetValueRequired(boolean) -> targetValueRequired
    280:281:void currentValueRequired(boolean) -> currentValueRequired
    285:287:void progressRequired(boolean) -> progressRequired
    291:292:void layerDataRequired(boolean) -> layerDataRequired
    137:140:void lambda$new$1(javafx.event.ActionEvent) -> lambda$new$1
    131:133:void lambda$new$0(javafx.event.ActionEvent) -> lambda$new$0
    30:30:javafx.util.Duration access$000() -> access$000
    30:30:void access$100(celtech.coreUI.components.Notifications.AppearingProgressBar,double) -> access$100
    72:72:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.AppearingProgressBar$1 -> celtech.coreUI.components.Notifications.AppearingProgressBar$1:
    celtech.coreUI.components.Notifications.AppearingProgressBar this$0 -> this$0
    75:78:void <init>(celtech.coreUI.components.Notifications.AppearingProgressBar) -> <init>
    83:84:void interpolate(double) -> interpolate
celtech.coreUI.components.Notifications.AppearingProgressBar$2 -> celtech.coreUI.components.Notifications.AppearingProgressBar$2:
    celtech.coreUI.components.Notifications.AppearingProgressBar this$0 -> this$0
    87:91:void <init>(celtech.coreUI.components.Notifications.AppearingProgressBar) -> <init>
    96:97:void interpolate(double) -> interpolate
celtech.coreUI.components.Notifications.BedHeaterStatusBar -> celtech.coreUI.components.Notifications.BedHeaterStatusBar:
    javafx.beans.property.ReadOnlyObjectProperty heaterMode -> heaterMode
    javafx.beans.property.ReadOnlyIntegerProperty bedTemperature -> bedTemperature
    javafx.beans.property.ReadOnlyIntegerProperty bedTargetTemperature -> bedTargetTemperature
    javafx.beans.property.ReadOnlyIntegerProperty bedFirstLayerTargetTemperature -> bedFirstLayerTargetTemperature
    double showBarIfMoreThanXDegreesOut -> showBarIfMoreThanXDegreesOut
    javafx.beans.value.ChangeListener numberChangeListener -> numberChangeListener
    javafx.beans.value.ChangeListener heaterModeChangeListener -> heaterModeChangeListener
    32:61:void <init>(celtech.roboxbase.printerControl.model.PrinterAncillarySystems) -> <init>
    66:72:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    76:147:void reassessStatus() -> reassessStatus
    151:174:void unbindAll() -> unbindAll
    39:40:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.HeaterMode,celtech.roboxbase.printerControl.model.HeaterMode) -> lambda$new$1
    34:35:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
celtech.coreUI.components.Notifications.BedHeaterStatusBar$1 -> celtech.coreUI.components.Notifications.BedHeaterStatusBar$1:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode -> $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode
    78:78:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.ConditionalNotificationBar -> celtech.coreUI.components.Notifications.ConditionalNotificationBar:
    javafx.beans.value.ObservableValue appearanceCondition -> appearanceCondition
    javafx.beans.value.ChangeListener conditionChangeListener -> conditionChangeListener
    18:32:void <init>(java.lang.String,celtech.roboxbase.appManager.NotificationType) -> <init>
    36:42:void clearAppearanceCondition() -> clearAppearanceCondition
    46:46:javafx.beans.value.ObservableValue getAppearanceCondition() -> getAppearanceCondition
    51:58:void setAppearanceCondition(javafx.beans.binding.BooleanBinding) -> setAppearanceCondition
    62:69:void calculateVisibility() -> calculateVisibility
    74:76:void show() -> show
    81:81:void finishedSlidingIntoView() -> finishedSlidingIntoView
    86:87:void finishedSlidingOutOfView() -> finishedSlidingOutOfView
    92:99:boolean isSameAs(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> isSameAs
    105:107:void destroyBar() -> destroyBar
    13:13:void access$000(celtech.coreUI.components.Notifications.ConditionalNotificationBar) -> access$000
celtech.coreUI.components.Notifications.ConditionalNotificationBar$1 -> celtech.coreUI.components.Notifications.ConditionalNotificationBar$1:
    celtech.coreUI.components.Notifications.ConditionalNotificationBar this$0 -> this$0
    19:19:void <init>(celtech.coreUI.components.Notifications.ConditionalNotificationBar) -> <init>
    24:25:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    19:19:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.Notifications.DismissableNotificationBar -> celtech.coreUI.components.Notifications.DismissableNotificationBar:
    javafx.event.EventHandler dismissAction -> dismissAction
    14:28:void <init>() -> <init>
    14:36:void <init>(java.lang.String) -> <init>
    41:43:void show() -> show
    48:48:void finishedSlidingIntoView() -> finishedSlidingIntoView
    53:54:void finishedSlidingOutOfView() -> finishedSlidingOutOfView
    59:68:boolean isSameAs(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> isSameAs
    74:75:void destroyBar() -> destroyBar
celtech.coreUI.components.Notifications.DismissableNotificationBar$1 -> celtech.coreUI.components.Notifications.DismissableNotificationBar$1:
    celtech.coreUI.components.Notifications.DismissableNotificationBar this$0 -> this$0
    15:15:void <init>(celtech.coreUI.components.Notifications.DismissableNotificationBar) -> <init>
    19:20:void handle(javafx.event.ActionEvent) -> handle
    15:15:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.Notifications.MaterialHeatingStatusBar -> celtech.coreUI.components.Notifications.MaterialHeatingStatusBar:
    double EJECT_TEMPERATURE -> EJECT_TEMPERATURE
    celtech.roboxbase.printerControl.model.NozzleHeater heater -> heater
    int materialNumber -> materialNumber
    boolean thisIsTheOnlyNozzle -> thisIsTheOnlyNozzle
    double showBarIfMoreThanXDegreesOut -> showBarIfMoreThanXDegreesOut
    javafx.beans.value.ChangeListener numberChangeListener -> numberChangeListener
    javafx.beans.value.ChangeListener heaterModeChangeListener -> heaterModeChangeListener
    24:57:void <init>(celtech.roboxbase.printerControl.model.NozzleHeater,int,boolean) -> <init>
    62:68:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    72:248:void reassessStatus() -> reassessStatus
    252:260:void unbindAll() -> unbindAll
    36:37:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.HeaterMode,celtech.roboxbase.printerControl.model.HeaterMode) -> lambda$new$1
    31:32:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
celtech.coreUI.components.Notifications.MaterialHeatingStatusBar$1 -> celtech.coreUI.components.Notifications.MaterialHeatingStatusBar$1:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode -> $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode
    74:74:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.NotificationArea -> celtech.coreUI.components.Notifications.NotificationArea:
    celtech.coreUI.components.Notifications.ProgressDisplay progressDisplay -> progressDisplay
    16:21:void <init>() -> <init>
celtech.coreUI.components.Notifications.NotificationDisplay -> celtech.coreUI.components.Notifications.NotificationDisplay:
    javafx.scene.layout.VBox stepCountedNotifications -> stepCountedNotifications
    javafx.scene.layout.VBox noteNotifications -> noteNotifications
    javafx.scene.layout.VBox cautionNotifications -> cautionNotifications
    javafx.scene.layout.VBox warningNotifications -> warningNotifications
    14:57:void <init>() -> <init>
    107:114:void displayTimedNotification(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> displayTimedNotification
    118:133:boolean isThisADuplicateBar(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> isThisADuplicateBar
    138:145:void displayDismissableNotification(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> displayDismissableNotification
    149:153:void addNotificationBar(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> addNotificationBar
    157:158:void removeNotificationBar(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> removeNotificationBar
    162:187:void addStepCountedNotificationBar(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> addStepCountedNotificationBar
    191:207:void removeStepCountedNotificationBar(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> removeStepCountedNotificationBar
    211:233:void updateNotificationNumbers() -> updateNotificationNumbers
celtech.coreUI.components.Notifications.NotificationDisplay$1 -> celtech.coreUI.components.Notifications.NotificationDisplay$1:
    int[] $SwitchMap$celtech$roboxbase$appManager$NotificationType -> $SwitchMap$celtech$roboxbase$appManager$NotificationType
    162:162:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.PrintPreparationStatusBar -> celtech.coreUI.components.Notifications.PrintPreparationStatusBar:
    celtech.roboxbase.printerControl.model.Printer printer -> printer
    javafx.beans.value.ChangeListener serviceStatusListener -> serviceStatusListener
    javafx.beans.value.ChangeListener serviceProgressListener -> serviceProgressListener
    javafx.beans.property.BooleanProperty cancelAllowed -> cancelAllowed
    javafx.event.EventHandler cancelEventHandler -> cancelEventHandler
    28:75:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    80:86:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    90:121:void reassessStatus() -> reassessStatus
    125:135:void unbindAll() -> unbindAll
    37:38:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$1
    32:33:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
    25:25:celtech.roboxbase.printerControl.model.Printer access$000(celtech.coreUI.components.Notifications.PrintPreparationStatusBar) -> access$000
celtech.coreUI.components.Notifications.PrintPreparationStatusBar$1 -> celtech.coreUI.components.Notifications.PrintPreparationStatusBar$1:
    celtech.coreUI.components.Notifications.PrintPreparationStatusBar this$0 -> this$0
    43:43:void <init>(celtech.coreUI.components.Notifications.PrintPreparationStatusBar) -> <init>
    49:54:void handle(javafx.event.ActionEvent) -> handle
    43:43:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.Notifications.PrintStatusBar -> celtech.coreUI.components.Notifications.PrintStatusBar:
    celtech.roboxbase.printerControl.model.Printer printer -> printer
    javafx.beans.value.ChangeListener printerNumberElementListener -> printerNumberElementListener
    javafx.beans.value.ChangeListener printerStatusChangeListener -> printerStatusChangeListener
    javafx.beans.value.ChangeListener printQueueStatusChangeListener -> printQueueStatusChangeListener
    javafx.beans.value.ChangeListener pauseStatusChangeListener -> pauseStatusChangeListener
    javafx.beans.value.ChangeListener busyStatusChangeListener -> busyStatusChangeListener
    javafx.event.EventHandler pauseEventHandler -> pauseEventHandler
    javafx.event.EventHandler resumeEventHandler -> resumeEventHandler
    javafx.event.EventHandler cancelEventHandler -> cancelEventHandler
    javafx.beans.property.BooleanProperty buttonsAllowed -> buttonsAllowed
    30:113:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    117:335:void reassessStatus() -> reassessStatus
    339:342:java.lang.String convertToHoursMinutes(int) -> convertToHoursMinutes
    347:364:void unbindAll() -> unbindAll
    83:88:void lambda$new$7(javafx.event.ActionEvent) -> lambda$new$7
    72:77:void lambda$new$6(javafx.event.ActionEvent) -> lambda$new$6
    61:66:void lambda$new$5(javafx.event.ActionEvent) -> lambda$new$5
    54:55:void lambda$new$4(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.remote.BusyStatus,celtech.roboxbase.comms.remote.BusyStatus) -> lambda$new$4
    49:50:void lambda$new$3(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.remote.PauseStatus,celtech.roboxbase.comms.remote.PauseStatus) -> lambda$new$3
    44:45:void lambda$new$2(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrintQueueStatus,celtech.roboxbase.printerControl.PrintQueueStatus) -> lambda$new$2
    39:40:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrinterStatus,celtech.roboxbase.printerControl.PrinterStatus) -> lambda$new$1
    34:35:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
celtech.coreUI.components.Notifications.PrintStatusBar$1 -> celtech.coreUI.components.Notifications.PrintStatusBar$1:
    int[] $SwitchMap$celtech$roboxbase$comms$remote$BusyStatus -> $SwitchMap$celtech$roboxbase$comms$remote$BusyStatus
    int[] $SwitchMap$celtech$roboxbase$comms$remote$PauseStatus -> $SwitchMap$celtech$roboxbase$comms$remote$PauseStatus
    int[] $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus -> $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus
    121:173:void <clinit>() -> <clinit>
celtech.coreUI.components.Notifications.ProgressDisplay -> celtech.coreUI.components.Notifications.ProgressDisplay:
    celtech.roboxbase.printerControl.model.Printer printerInUse -> printerInUse
    celtech.coreUI.components.Notifications.PrintStatusBar stateDisplayBar -> stateDisplayBar
    celtech.coreUI.components.Notifications.BedHeaterStatusBar bedTemperatureDisplayBar -> bedTemperatureDisplayBar
    celtech.coreUI.components.Notifications.MaterialHeatingStatusBar material1TemperatureDisplayBar -> material1TemperatureDisplayBar
    celtech.coreUI.components.Notifications.MaterialHeatingStatusBar material2TemperatureDisplayBar -> material2TemperatureDisplayBar
    celtech.coreUI.components.Notifications.PrintPreparationStatusBar printPreparationDisplayBar -> printPreparationDisplayBar
    javafx.beans.value.ChangeListener headDataChangedListener -> headDataChangedListener
    javafx.beans.value.ChangeListener headListener -> headListener
    17:58:void <init>() -> <init>
    62:79:void bindToPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindToPrinter
    83:96:void destroyMaterialHeatBars() -> destroyMaterialHeatBars
    100:121:void createMaterialHeatBars(celtech.roboxbase.printerControl.model.Head) -> createMaterialHeatBars
    125:141:void unbindFromPrinter() -> unbindFromPrinter
    52:57:void lambda$new$2(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$new$2
    31:43:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Head,celtech.roboxbase.printerControl.model.Head) -> lambda$new$1
    26:27:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
celtech.coreUI.components.Notifications.TimedNotificationBar -> celtech.coreUI.components.Notifications.TimedNotificationBar:
    int displayFor_ms -> displayFor_ms
    int selfDestructIn_ms -> selfDestructIn_ms
    java.util.Timer selfDestructTimer -> selfDestructTimer
    12:17:void <init>() -> <init>
    22:26:void show() -> show
    31:33:void finishedSlidingIntoView() -> finishedSlidingIntoView
    38:44:void finishedSlidingOutOfView() -> finishedSlidingOutOfView
    72:79:boolean isSameAs(celtech.coreUI.components.Notifications.AppearingNotificationBar) -> isSameAs
    85:86:void destroyBar() -> destroyBar
celtech.coreUI.components.Notifications.TimedNotificationBar$1 -> celtech.coreUI.components.Notifications.TimedNotificationBar$1:
celtech.coreUI.components.Notifications.TimedNotificationBar$SelfDestructTask -> celtech.coreUI.components.Notifications.TimedNotificationBar$SelfDestructTask:
    celtech.coreUI.components.Notifications.TimedNotificationBar this$0 -> this$0
    56:56:void <init>(celtech.coreUI.components.Notifications.TimedNotificationBar) -> <init>
    62:66:void run() -> run
    64:65:void lambda$run$0() -> lambda$run$0
    56:56:void <init>(celtech.coreUI.components.Notifications.TimedNotificationBar,celtech.coreUI.components.Notifications.TimedNotificationBar$1) -> <init>
celtech.coreUI.components.Notifications.TimedNotificationBar$SlideAwayTask -> celtech.coreUI.components.Notifications.TimedNotificationBar$SlideAwayTask:
    celtech.coreUI.components.Notifications.TimedNotificationBar this$0 -> this$0
    46:46:void <init>(celtech.coreUI.components.Notifications.TimedNotificationBar) -> <init>
    52:53:void run() -> run
    46:46:void <init>(celtech.coreUI.components.Notifications.TimedNotificationBar,celtech.coreUI.components.Notifications.TimedNotificationBar$1) -> <init>
celtech.coreUI.components.NudgeControlVertical -> celtech.coreUI.components.NudgeControlVertical:
    javafx.beans.property.DoubleProperty deltaValue -> deltaValue
    javafx.beans.property.DoubleProperty maxValue -> maxValue
    javafx.beans.property.DoubleProperty minValue -> minValue
    javafx.scene.control.Button upButton -> upButton
    celtech.coreUI.components.RestrictedNumberField numberDisplay -> numberDisplay
    javafx.scene.control.Button downButton -> downButton
    38:40:void upPressed(javafx.event.ActionEvent) -> upPressed
    45:47:void downPressed(javafx.event.ActionEvent) -> downPressed
    51:61:double getLimitedValue(double) -> getLimitedValue
    22:81:void <init>() -> <init>
    85:86:void setDecimalPlaces(int) -> setDecimalPlaces
    90:90:int getDecimalPlaces() -> getDecimalPlaces
    95:95:javafx.beans.property.IntegerProperty getDecimalPlacesProperty() -> getDecimalPlacesProperty
    100:104:double getValue() -> getValue
    109:110:void setValue(double) -> setValue
    114:114:double getDeltaValue() -> getDeltaValue
    119:120:void setDeltaValue(double) -> setDeltaValue
    124:124:javafx.beans.property.DoubleProperty getDeltaValueProperty() -> getDeltaValueProperty
    129:129:double getMaxValue() -> getMaxValue
    134:135:void setMaxValue(double) -> setMaxValue
    139:139:javafx.beans.property.DoubleProperty getMaxValueProperty() -> getMaxValueProperty
    144:144:javafx.beans.property.DoubleProperty getMinValueProperty() -> getMinValueProperty
    149:149:double getMinValue() -> getMinValue
    154:155:void setMinValue(double) -> setMinValue
celtech.coreUI.components.Orientation -> celtech.coreUI.components.Orientation:
    celtech.coreUI.components.Orientation NORTH -> NORTH
    celtech.coreUI.components.Orientation NORTH_EAST -> NORTH_EAST
    celtech.coreUI.components.Orientation EAST -> EAST
    celtech.coreUI.components.Orientation SOUTH_EAST -> SOUTH_EAST
    celtech.coreUI.components.Orientation SOUTH -> SOUTH
    celtech.coreUI.components.Orientation SOUTH_WEST -> SOUTH_WEST
    celtech.coreUI.components.Orientation WEST -> WEST
    celtech.coreUI.components.Orientation NORTH_WEST -> NORTH_WEST
    celtech.coreUI.components.Orientation TWELVE_O_CLOCK -> TWELVE_O_CLOCK
    celtech.coreUI.components.Orientation THREE_O_CLOCK -> THREE_O_CLOCK
    celtech.coreUI.components.Orientation SIX_O_CLOCK -> SIX_O_CLOCK
    celtech.coreUI.components.Orientation NINE_O_CLOCK -> NINE_O_CLOCK
    double angle -> angle
    celtech.coreUI.components.Orientation[] $VALUES -> $VALUES
    7:7:celtech.coreUI.components.Orientation[] values() -> values
    7:7:celtech.coreUI.components.Orientation valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,double) -> <init>
    32:32:double getAngle() -> getAngle
    7:21:void <clinit>() -> <clinit>
celtech.coreUI.components.PrinterIDDialog -> celtech.coreUI.components.PrinterIDDialog:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.stage.Stage dialogStage -> dialogStage
    celtech.coreUI.controllers.PrinterIDDialogController dialogController -> dialogController
    29:56:void <init>() -> <init>
    64:65:boolean show() -> show
    73:74:void close() -> close
    82:82:boolean isShowing() -> isShowing
    91:91:java.lang.String getChosenPrinterName() -> getChosenPrinterName
    100:101:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> setPrinterToUse
    109:110:void setChosenDisplayColour(javafx.scene.paint.Color) -> setChosenDisplayColour
    118:118:javafx.scene.paint.Color getChosenDisplayColour() -> getChosenDisplayColour
    127:128:void setChosenPrinterName(java.lang.String) -> setChosenPrinterName
celtech.coreUI.components.ProfileChoiceListCell -> celtech.coreUI.components.ProfileChoiceListCell:
    16:16:void <init>() -> <init>
    22:30:void updateItem(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,boolean) -> updateItem
    34:36:void clearContent() -> clearContent
    40:41:void addContent(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> addContent
    16:16:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.components.ProgressDialog -> celtech.coreUI.components.ProgressDialog:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.stage.Stage dialogStage -> dialogStage
    celtech.coreUI.controllers.ProgressDialogController dialogController -> dialogController
    javafx.scene.layout.StackPane dialogBoxContainer -> dialogBoxContainer
    33:44:void <init>() -> <init>
    33:54:void <init>(celtech.roboxbase.services.ControllableService) -> <init>
    62:63:void associateControllableService(celtech.roboxbase.services.ControllableService) -> associateControllableService
    67:85:void setupDialog() -> setupDialog
    94:95:void addKeyHandler(javafx.event.EventType,javafx.event.EventHandler) -> addKeyHandler
    104:105:void removeKeyHandler(javafx.event.EventType,javafx.event.EventHandler) -> removeKeyHandler
celtech.coreUI.components.ProgressRing -> celtech.coreUI.components.ProgressRing:
    21:23:void <init>() -> <init>
celtech.coreUI.components.ProjectNotLoadedException -> celtech.coreUI.components.ProjectNotLoadedException:
    java.lang.String projectName -> projectName
    14:23:void <init>(java.lang.String) -> <init>
    32:32:java.lang.String getMessage() -> getMessage
celtech.coreUI.components.ProjectTab -> celtech.coreUI.components.ProjectTab:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.control.Label nonEditableProjectNameField -> nonEditableProjectNameField
    celtech.coreUI.components.RestrictedTextField editableProjectNameField -> editableProjectNameField
    celtech.appManager.Project project -> project
    javafx.scene.layout.Pane baseContainer -> baseContainer
    javafx.scene.layout.AnchorPane basePane -> basePane
    javafx.scene.layout.AnchorPane overlayPane -> overlayPane
    celtech.coreUI.visualisation.ThreeDViewManager viewManager -> viewManager
    celtech.coreUI.visualisation.SVGViewManager svgViewManager -> svgViewManager
    celtech.appManager.ProjectManager projectManager -> projectManager
    boolean titleBeingEdited -> titleBeingEdited
    celtech.coreUI.visualisation.ModelLoader modelLoader -> modelLoader
    celtech.coreUI.visualisation.DimensionLineManager dimensionLineManager -> dimensionLineManager
    celtech.coreUI.visualisation.BedAxes bedAxes -> bedAxes
    celtech.coreUI.components.ZCutEntryBox zCutEntryBox -> zCutEntryBox
    javafx.beans.property.ObjectProperty layoutSubmode -> layoutSubmode
    celtech.coreUI.controllers.ProjectAwareController projectAwareController -> projectAwareController
    javafx.beans.property.ReadOnlyDoubleProperty tabDisplayWidthProperty -> tabDisplayWidthProperty
    javafx.beans.property.ReadOnlyDoubleProperty tabDisplayHeightProperty -> tabDisplayHeightProperty
    javafx.beans.property.BooleanProperty hideDimensions -> hideDimensions
    javafx.scene.layout.VBox nonSpecificModelIndicator -> nonSpecificModelIndicator
    javafx.scene.layout.VBox rhInsetContainer -> rhInsetContainer
    celtech.coreUI.components.ProjectTab$LoadedPanelData settingsInsetPanelData -> settingsInsetPanelData
    celtech.coreUI.components.ProjectTab$LoadedPanelData timeCostInsetPanelData -> timeCostInsetPanelData
    celtech.coreUI.components.ProjectTab$LoadedPanelData modelActionsInsetPanelData -> modelActionsInsetPanelData
    62:124:void <init>(javafx.beans.property.ReadOnlyDoubleProperty,javafx.beans.property.ReadOnlyDoubleProperty) -> <init>
    62:135:void <init>(celtech.appManager.Project,javafx.beans.property.ReadOnlyDoubleProperty,javafx.beans.property.ReadOnlyDoubleProperty) -> <init>
    139:211:void coreInitialisation() -> coreInitialisation
    216:281:void initialiseWithProject() -> initialiseWithProject
    285:301:void setup3DView() -> setup3DView
    305:316:void setupSVGView() -> setupSVGView
    320:333:celtech.coreUI.components.ProjectTab$LoadedPanelData loadInsetPanel(java.lang.String,celtech.appManager.Project) -> loadInsetPanel
    338:378:void setupNameFields() -> setupNameFields
    382:528:void setupDragHandlers() -> setupDragHandlers
    532:541:void switchToNonEditableTitle() -> switchToNonEditableTitle
    545:553:void saveAndCloseProject() -> saveAndCloseProject
    557:561:void fireProjectSelected() -> fireProjectSelected
    566:571:void modelAddedToProject(celtech.appManager.Project) -> modelAddedToProject
    575:581:void initialiseBlank3DProject() -> initialiseBlank3DProject
    585:591:void initialiseBlank2DProject() -> initialiseBlank2DProject
    502:527:void lambda$setupDragHandlers$4(javafx.scene.input.DragEvent) -> lambda$setupDragHandlers$4
    376:377:void lambda$setupNameFields$3(javafx.event.ActionEvent) -> lambda$setupNameFields$3
    349:358:void lambda$setupNameFields$2(javafx.scene.input.MouseEvent) -> lambda$setupNameFields$2
    148:152:void lambda$coreInitialisation$1(javafx.event.Event) -> lambda$coreInitialisation$1
    141:144:void lambda$coreInitialisation$0(javafx.event.Event) -> lambda$coreInitialisation$0
    59:59:celtech.coreUI.components.ProjectTab$LoadedPanelData access$000(celtech.coreUI.components.ProjectTab) -> access$000
    59:59:javafx.scene.layout.VBox access$100(celtech.coreUI.components.ProjectTab) -> access$100
    59:59:celtech.coreUI.components.ProjectTab$LoadedPanelData access$002(celtech.coreUI.components.ProjectTab,celtech.coreUI.components.ProjectTab$LoadedPanelData) -> access$002
    59:59:celtech.coreUI.components.ProjectTab$LoadedPanelData access$200(celtech.coreUI.components.ProjectTab) -> access$200
    59:59:celtech.coreUI.components.ProjectTab$LoadedPanelData access$202(celtech.coreUI.components.ProjectTab,celtech.coreUI.components.ProjectTab$LoadedPanelData) -> access$202
    59:59:celtech.appManager.Project access$300(celtech.coreUI.components.ProjectTab) -> access$300
    59:59:celtech.coreUI.components.ProjectTab$LoadedPanelData access$400(celtech.coreUI.components.ProjectTab,java.lang.String,celtech.appManager.Project) -> access$400
    59:59:celtech.coreUI.components.ZCutEntryBox access$500(celtech.coreUI.components.ProjectTab) -> access$500
    59:59:javafx.scene.layout.AnchorPane access$600(celtech.coreUI.components.ProjectTab) -> access$600
    59:59:void access$700(celtech.coreUI.components.ProjectTab) -> access$700
    59:59:javafx.scene.layout.AnchorPane access$800(celtech.coreUI.components.ProjectTab) -> access$800
celtech.coreUI.components.ProjectTab$1 -> celtech.coreUI.components.ProjectTab$1:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    183:183:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    187:209:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    183:183:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.ProjectTab$2 -> celtech.coreUI.components.ProjectTab$2:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    240:240:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    244:260:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> changed
    240:240:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.ProjectTab$3 -> celtech.coreUI.components.ProjectTab$3:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    362:362:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    367:371:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    362:362:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.ProjectTab$4 -> celtech.coreUI.components.ProjectTab$4:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    383:383:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    387:433:void handle(javafx.scene.input.DragEvent) -> handle
    383:383:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.ProjectTab$5 -> celtech.coreUI.components.ProjectTab$5:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    437:437:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    442:486:void handle(javafx.scene.input.DragEvent) -> handle
    437:437:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.ProjectTab$6 -> celtech.coreUI.components.ProjectTab$6:
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    490:490:void <init>(celtech.coreUI.components.ProjectTab) -> <init>
    494:497:void handle(javafx.scene.input.DragEvent) -> handle
    490:490:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.ProjectTab$LoadedPanelData -> celtech.coreUI.components.ProjectTab$LoadedPanelData:
    javafx.scene.Node node -> node
    celtech.coreUI.controllers.ProjectAwareController controller -> controller
    celtech.coreUI.components.ProjectTab this$0 -> this$0
    101:104:void <init>(celtech.coreUI.components.ProjectTab,javafx.scene.Node,celtech.coreUI.controllers.ProjectAwareController) -> <init>
    108:108:javafx.scene.Node getNode() -> getNode
    113:113:celtech.coreUI.controllers.ProjectAwareController getController() -> getController
celtech.coreUI.components.RestrictedCustomTextField -> celtech.coreUI.components.RestrictedCustomTextField:
    javafx.beans.property.StringProperty restrict -> restrict
    javafx.beans.property.IntegerProperty maxLength -> maxLength
    javafx.beans.property.BooleanProperty forceUpperCase -> forceUpperCase
    javafx.beans.property.BooleanProperty directorySafeName -> directorySafeName
    java.lang.String standardAllowedCharacters -> standardAllowedCharacters
    33:33:int getMaxLength() -> getMaxLength
    43:44:void setMaxLength(int) -> setMaxLength
    52:52:javafx.beans.property.IntegerProperty maxLengthProperty() -> maxLengthProperty
    61:62:void setForceUpperCase(boolean) -> setForceUpperCase
    70:70:boolean getForceUpperCase() -> getForceUpperCase
    79:79:javafx.beans.property.BooleanProperty forceUpperCaseProperty() -> forceUpperCaseProperty
    90:92:void setRestrict(java.lang.String) -> setRestrict
    100:100:java.lang.String getRestrict() -> getRestrict
    109:109:javafx.beans.property.StringProperty restrictProperty() -> restrictProperty
    20:118:void <init>() -> <init>
    123:132:void replaceText(int,int,java.lang.String) -> replaceText
    136:148:java.lang.String applyRestriction(java.lang.String) -> applyRestriction
    154:161:void replaceSelection(java.lang.String) -> replaceSelection
    168:168:boolean getDirectorySafeName() -> getDirectorySafeName
    176:177:void setDirectorySafeName(boolean) -> setDirectorySafeName
    180:181:java.lang.Float getFloatValue() -> getFloatValue
celtech.coreUI.components.RestrictedNumberField -> celtech.coreUI.components.RestrictedNumberField:
    javafx.beans.property.IntegerProperty maxLength -> maxLength
    javafx.beans.property.IntegerProperty allowedDecimalPlaces -> allowedDecimalPlaces
    javafx.beans.property.BooleanProperty allowNegative -> allowNegative
    javafx.beans.property.BooleanProperty maxValueSet -> maxValueSet
    javafx.beans.property.DoubleProperty maxValue -> maxValue
    javafx.beans.property.BooleanProperty minValueSet -> minValueSet
    javafx.beans.property.DoubleProperty minValue -> minValue
    javafx.beans.property.ObjectProperty units -> units
    java.util.regex.Pattern restrictionPattern -> restrictionPattern
    javafx.beans.property.BooleanProperty drivesUndoableOperation -> drivesUndoableOperation
    javafx.beans.property.BooleanProperty immediateUpdateMode -> immediateUpdateMode
    boolean lastValueValid -> lastValueValid
    double lastValue -> lastValue
    double currentValue -> currentValue
    javafx.beans.property.BooleanProperty valueChangedProperty -> valueChangedProperty
    java.text.NumberFormat numberFormatter -> numberFormatter
    java.lang.String standardAllowedCharacters -> standardAllowedCharacters
    java.lang.String restriction -> restriction
    java.lang.String decimalSeparator -> decimalSeparator
    63:63:celtech.configuration.units.UnitType getUnits() -> getUnits
    68:69:void setUnits(celtech.configuration.units.UnitType) -> setUnits
    73:73:javafx.beans.property.ObjectProperty unitsProperty() -> unitsProperty
    78:78:boolean getAllowNegative() -> getAllowNegative
    83:84:void setAllowNegative(boolean) -> setAllowNegative
    88:88:javafx.beans.property.BooleanProperty allowNegativeProperty() -> allowNegativeProperty
    93:93:boolean getImmediateUpdateMode() -> getImmediateUpdateMode
    98:99:void setImmediateUpdateMode(boolean) -> setImmediateUpdateMode
    103:103:javafx.beans.property.BooleanProperty immediateUpdateModeProperty() -> immediateUpdateModeProperty
    108:108:boolean getMaxValueSet() -> getMaxValueSet
    113:114:void setMaxValueSet(boolean) -> setMaxValueSet
    118:118:javafx.beans.property.BooleanProperty maxValueSetProperty() -> maxValueSetProperty
    123:123:boolean getMinValueSet() -> getMinValueSet
    128:129:void setMinValueSet(boolean) -> setMinValueSet
    133:133:javafx.beans.property.BooleanProperty minValueSetProperty() -> minValueSetProperty
    138:138:double getMinValue() -> getMinValue
    143:144:void setMinValue(double) -> setMinValue
    148:148:javafx.beans.property.DoubleProperty minValueProperty() -> minValueProperty
    153:153:double getMaxValue() -> getMaxValue
    158:159:void setMaxValue(double) -> setMaxValue
    163:163:javafx.beans.property.DoubleProperty maxValueProperty() -> maxValueProperty
    172:172:int getMaxLength() -> getMaxLength
    182:184:void setMaxLength(int) -> setMaxLength
    192:192:javafx.beans.property.IntegerProperty maxLengthProperty() -> maxLengthProperty
    201:201:int getAllowedDecimalPlaces() -> getAllowedDecimalPlaces
    211:221:void setAllowedDecimalPlaces(int) -> setAllowedDecimalPlaces
    225:241:void configureRestriction() -> configureRestriction
    249:249:javafx.beans.property.IntegerProperty allowedDecimalPlacesProperty() -> allowedDecimalPlacesProperty
    254:254:boolean getDrivesUndoableOperation() -> getDrivesUndoableOperation
    259:260:void setDrivesUndoableOperation(boolean) -> setDrivesUndoableOperation
    264:264:javafx.beans.property.BooleanProperty drivesUndoableOperationProperty() -> drivesUndoableOperationProperty
    37:319:void <init>() -> <init>
    323:332:void enforceRestriction(java.lang.String,javafx.scene.control.IndexRange) -> enforceRestriction
    337:343:void replaceText(int,int,java.lang.String) -> replaceText
    349:367:void updateNumberValuesFromText() -> updateNumberValuesFromText
    372:378:void replaceSelection(java.lang.String) -> replaceSelection
    383:389:void replaceText(javafx.scene.control.IndexRange,java.lang.String) -> replaceText
    393:416:java.text.NumberFormat getNumberFormatter() -> getNumberFormatter
    421:432:java.lang.String getDecimalSeparator() -> getDecimalSeparator
    437:437:javafx.beans.property.ReadOnlyBooleanProperty valueChangedProperty() -> valueChangedProperty
    442:449:void setValueFromExternalSource(double) -> setValueFromExternalSource
    453:454:void setValue(double) -> setValue
    458:459:void setValue(float) -> setValue
    463:464:void setValue(int) -> setValue
    468:480:double doMinMax(double) -> doMinMax
    485:485:float getAsFloat() -> getAsFloat
    490:490:double getAsDouble() -> getAsDouble
    495:495:int getAsInt() -> getAsInt
    34:34:boolean access$000(celtech.coreUI.components.RestrictedNumberField) -> access$000
    34:34:javafx.beans.property.BooleanProperty access$100(celtech.coreUI.components.RestrictedNumberField) -> access$100
    34:34:double access$200(celtech.coreUI.components.RestrictedNumberField) -> access$200
    34:34:java.text.NumberFormat access$300(celtech.coreUI.components.RestrictedNumberField) -> access$300
    34:34:void access$400(celtech.coreUI.components.RestrictedNumberField) -> access$400
    34:34:double access$500(celtech.coreUI.components.RestrictedNumberField) -> access$500
    34:34:javafx.beans.property.BooleanProperty access$600(celtech.coreUI.components.RestrictedNumberField) -> access$600
celtech.coreUI.components.RestrictedNumberField$1 -> celtech.coreUI.components.RestrictedNumberField$1:
    celtech.coreUI.components.RestrictedNumberField this$0 -> this$0
    277:277:void <init>(celtech.coreUI.components.RestrictedNumberField) -> <init>
    281:305:void handle(javafx.scene.input.KeyEvent) -> handle
    277:277:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.RestrictedNumberField$2 -> celtech.coreUI.components.RestrictedNumberField$2:
    celtech.coreUI.components.RestrictedNumberField this$0 -> this$0
    309:309:void <init>(celtech.coreUI.components.RestrictedNumberField) -> <init>
    313:317:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    309:309:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.RestrictedTextField -> celtech.coreUI.components.RestrictedTextField:
    javafx.beans.property.StringProperty restrict -> restrict
    javafx.beans.property.IntegerProperty maxLength -> maxLength
    javafx.beans.property.BooleanProperty forceUpperCase -> forceUpperCase
    javafx.beans.property.BooleanProperty directorySafeName -> directorySafeName
    java.lang.String standardAllowedCharacters -> standardAllowedCharacters
    33:33:int getMaxLength() -> getMaxLength
    43:44:void setMaxLength(int) -> setMaxLength
    52:52:javafx.beans.property.IntegerProperty maxLengthProperty() -> maxLengthProperty
    61:62:void setForceUpperCase(boolean) -> setForceUpperCase
    70:70:boolean getForceUpperCase() -> getForceUpperCase
    79:79:javafx.beans.property.BooleanProperty forceUpperCaseProperty() -> forceUpperCaseProperty
    90:92:void setRestrict(java.lang.String) -> setRestrict
    100:100:java.lang.String getRestrict() -> getRestrict
    109:109:javafx.beans.property.StringProperty restrictProperty() -> restrictProperty
    20:118:void <init>() -> <init>
    123:143:void replaceText(int,int,java.lang.String) -> replaceText
    147:160:java.lang.String applyRestriction(java.lang.String) -> applyRestriction
    166:173:void replaceSelection(java.lang.String) -> replaceSelection
    180:180:boolean getDirectorySafeName() -> getDirectorySafeName
    188:189:void setDirectorySafeName(boolean) -> setDirectorySafeName
    193:194:java.lang.Float getFloatValue() -> getFloatValue
celtech.coreUI.components.RootTableCell -> celtech.coreUI.components.RootTableCell:
    javafx.scene.image.ImageView imageContainer -> imageContainer
    javafx.scene.image.Image connectedImage -> connectedImage
    javafx.scene.image.Image disconnectedImage -> disconnectedImage
    22:26:void <init>() -> <init>
    31:47:void updateItem(celtech.roboxbase.comms.DetectedServer$ServerStatus,boolean) -> updateItem
    14:14:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.components.ScalingGroup -> celtech.coreUI.components.ScalingGroup:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.transform.Translate translate -> translate
    javafx.scene.transform.Scale scale -> scale
    double twoSize -> twoSize
    24:35:void <init>() -> <init>
    40:97:void layoutChildren() -> layoutChildren
celtech.coreUI.components.SlideoutAndProjectHolder -> celtech.coreUI.components.SlideoutAndProjectHolder:
    javafx.scene.layout.VBox slideOutHolder -> slideOutHolder
    javafx.scene.control.Button slideButton -> slideButton
    javafx.scene.layout.VBox projectTabPaneHolder -> projectTabPaneHolder
    javafx.beans.property.ObjectProperty panelToSlide -> panelToSlide
    javafx.beans.property.BooleanProperty slidIn -> slidIn
    boolean sliding -> sliding
    int slideMs -> slideMs
    double lastAmountShown -> lastAmountShown
    double minimumToShow -> minimumToShow
    double maximumToShow -> maximumToShow
    double panelWidth -> panelWidth
    double panelHeight -> panelHeight
    javafx.scene.shape.Rectangle clippingRectangle -> clippingRectangle
    javafx.animation.Animation hideSidebar -> hideSidebar
    javafx.animation.Animation showSidebar -> showSidebar
    30:128:void <init>() -> <init>
    135:142:void toggleSlide() -> toggleSlide
    149:151:void slideIn() -> slideIn
    159:183:void slideMenuPanel(double) -> slideMenuPanel
    191:197:boolean startSlidingOut() -> startSlidingOut
    207:213:boolean startSlidingIn() -> startSlidingIn
    223:223:boolean isSlidIn() -> isSlidIn
    232:232:boolean isSliding() -> isSliding
    241:255:void switchInSlideout(javafx.scene.layout.HBox) -> switchInSlideout
    263:263:javafx.scene.layout.VBox getProjectTabPaneHolder() -> getProjectTabPaneHolder
    272:273:void populateProjectDisplay(javafx.scene.Node) -> populateProjectDisplay
    125:127:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
    27:27:javafx.beans.property.BooleanProperty access$000(celtech.coreUI.components.SlideoutAndProjectHolder) -> access$000
celtech.coreUI.components.SlideoutAndProjectHolder$1 -> celtech.coreUI.components.SlideoutAndProjectHolder$1:
    celtech.coreUI.components.SlideoutAndProjectHolder this$0 -> this$0
    47:50:void <init>(celtech.coreUI.components.SlideoutAndProjectHolder) -> <init>
    55:56:void interpolate(double) -> interpolate
celtech.coreUI.components.SlideoutAndProjectHolder$2 -> celtech.coreUI.components.SlideoutAndProjectHolder$2:
    celtech.coreUI.components.SlideoutAndProjectHolder this$0 -> this$0
    59:62:void <init>(celtech.coreUI.components.SlideoutAndProjectHolder) -> <init>
    67:68:void interpolate(double) -> interpolate
celtech.coreUI.components.SlideoutAndProjectHolder$3 -> celtech.coreUI.components.SlideoutAndProjectHolder$3:
    celtech.coreUI.components.SlideoutAndProjectHolder this$0 -> this$0
    77:77:void <init>(celtech.coreUI.components.SlideoutAndProjectHolder) -> <init>
    81:82:void handle(javafx.event.ActionEvent) -> handle
    77:77:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.SlideoutAndProjectHolder$4 -> celtech.coreUI.components.SlideoutAndProjectHolder$4:
    celtech.coreUI.components.SlideoutAndProjectHolder this$0 -> this$0
    87:87:void <init>(celtech.coreUI.components.SlideoutAndProjectHolder) -> <init>
    91:92:void handle(javafx.event.ActionEvent) -> handle
    87:87:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.SlideoutAndProjectHolder$5 -> celtech.coreUI.components.SlideoutAndProjectHolder$5:
    celtech.coreUI.components.SlideoutAndProjectHolder this$0 -> this$0
    109:109:void <init>(celtech.coreUI.components.SlideoutAndProjectHolder) -> <init>
    113:114:void handle(javafx.event.ActionEvent) -> handle
    109:109:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.SlidingComponentDirection -> celtech.coreUI.components.SlidingComponentDirection:
    celtech.coreUI.components.SlidingComponentDirection IN_FROM_LEFT -> IN_FROM_LEFT
    celtech.coreUI.components.SlidingComponentDirection IN_FROM_RIGHT -> IN_FROM_RIGHT
    celtech.coreUI.components.SlidingComponentDirection DOWN_FROM_TOP -> DOWN_FROM_TOP
    celtech.coreUI.components.SlidingComponentDirection UP_FROM_BOTTOM -> UP_FROM_BOTTOM
    celtech.coreUI.components.SlidingComponentDirection[] $VALUES -> $VALUES
    13:13:celtech.coreUI.components.SlidingComponentDirection[] values() -> values
    13:13:celtech.coreUI.components.SlidingComponentDirection valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:34:void <clinit>() -> <clinit>
celtech.coreUI.components.Spinner -> celtech.coreUI.components.Spinner:
    javafx.scene.shape.SVGPath outerArcs -> outerArcs
    javafx.scene.shape.SVGPath innerArcs -> innerArcs
    javafx.animation.AnimationTimer timer -> timer
    30:54:void <init>() -> <init>
    58:59:void startSpinning() -> startSpinning
    63:64:void stopSpinning() -> stopSpinning
    69:86:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    89:96:void recentreSpinner(javafx.scene.layout.Region) -> recentreSpinner
    100:113:void setCentreNode(javafx.scene.layout.Region) -> setCentreNode
    109:110:void lambda$setCentreNode$1(javafx.scene.layout.Region,javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setCentreNode$1
    103:104:void lambda$setCentreNode$0(javafx.scene.layout.Region,javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setCentreNode$0
    21:21:javafx.scene.shape.SVGPath access$000(celtech.coreUI.components.Spinner) -> access$000
    21:21:javafx.scene.shape.SVGPath access$100(celtech.coreUI.components.Spinner) -> access$100
celtech.coreUI.components.Spinner$1 -> celtech.coreUI.components.Spinner$1:
    celtech.coreUI.components.Spinner this$0 -> this$0
    70:70:void <init>(celtech.coreUI.components.Spinner) -> <init>
    74:84:void handle(long) -> handle
celtech.coreUI.components.TooltipGraphic -> celtech.coreUI.components.TooltipGraphic:
    javafx.scene.text.Text menuTitle -> menuTitle
    javafx.scene.layout.VBox menuItemContainer -> menuItemContainer
    javafx.scene.control.ToggleGroup buttonGroup -> buttonGroup
    28:46:void <init>() -> <init>
    50:51:void setTitle(java.lang.String) -> setTitle
    55:58:void addMenuItem(celtech.coreUI.components.InsetPanelMenuItem) -> addMenuItem
celtech.coreUI.components.TopMenuStrip -> celtech.coreUI.components.TopMenuStrip:
    celtech.appManager.ApplicationStatus applicationStatus -> applicationStatus
    celtech.coreUI.components.buttons.GraphicButton aboutButton -> aboutButton
    celtech.coreUI.components.buttons.GraphicButton extrasMenuButton -> extrasMenuButton
    celtech.coreUI.components.buttons.GraphicButton libraryButton -> libraryButton
    35:36:void extrasMenuPressed(javafx.event.ActionEvent) -> extrasMenuPressed
    41:42:void aboutPressed(javafx.event.ActionEvent) -> aboutPressed
    47:48:void libraryPressed(javafx.event.ActionEvent) -> libraryPressed
    21:66:void <init>() -> <init>
    71:85:void initialize() -> initialize
celtech.coreUI.components.UnitLabel -> celtech.coreUI.components.UnitLabel:
    javafx.beans.property.StringProperty unitType -> unitType
    celtech.configuration.units.UnitType units -> units
    14:18:void <init>() -> <init>
    22:22:celtech.configuration.units.UnitType getUnits() -> getUnits
    27:30:void setUnits(celtech.configuration.units.UnitType) -> setUnits
    34:34:java.lang.String getUnitType() -> getUnitType
    39:42:void setUnitType(java.lang.String) -> setUnitType
    46:46:javafx.beans.property.ReadOnlyStringProperty unitTypeProperty() -> unitTypeProperty
    51:58:void updateDisplay() -> updateDisplay
celtech.coreUI.components.VerticalMenu -> celtech.coreUI.components.VerticalMenu:
    int SQUARE_SIZE -> SQUARE_SIZE
    int ROW_HEIGHT -> ROW_HEIGHT
    celtech.coreUI.components.VerticalMenu$Item selectedItem -> selectedItem
    javafx.scene.layout.GridPane verticalMenuGrid -> verticalMenuGrid
    javafx.scene.text.Text verticalMenuTitle -> verticalMenuTitle
    int nextRowNum -> nextRowNum
    boolean disableNonSelectedItems -> disableNonSelectedItems
    javafx.css.PseudoClass SELECTED_PSEUDO_CLASS -> SELECTED_PSEUDO_CLASS
    java.util.Set allItems -> allItems
    java.util.Map itemCallbacks -> itemCallbacks
    boolean firstItemInitialised -> firstItemInitialised
    celtech.coreUI.components.VerticalMenu$Item firstItem -> firstItem
    54:142:void <init>() -> <init>
    146:147:void setTitle(java.lang.String) -> setTitle
    156:172:void addItem(java.lang.String,celtech.coreUI.components.VerticalMenu$NoArgsVoidFunc,javafx.beans.property.ReadOnlyBooleanProperty) -> addItem
    179:180:void selectFirstItem() -> selectFirstItem
    188:197:void selectItemOfName(java.lang.String) -> selectItemOfName
    201:230:void setUpEventHandlersForItem(celtech.coreUI.components.VerticalMenu$Item) -> setUpEventHandlersForItem
    234:244:void selectItem(celtech.coreUI.components.VerticalMenu$Item) -> selectItem
    251:256:void addRow(javafx.scene.layout.GridPane,celtech.coreUI.components.VerticalMenu$Item) -> addRow
    264:272:void disableNonSelectedItems() -> disableNonSelectedItems
    280:288:void enableNonSelectedItems() -> enableNonSelectedItems
    295:300:void deselectSelectedItem() -> deselectSelectedItem
    307:309:void reset() -> reset
    220:229:void lambda$setUpEventHandlersForItem$2(celtech.coreUI.components.VerticalMenu$Item,javafx.scene.input.MouseEvent) -> lambda$setUpEventHandlersForItem$2
    212:217:void lambda$setUpEventHandlersForItem$1(celtech.coreUI.components.VerticalMenu$Item,javafx.scene.input.MouseEvent) -> lambda$setUpEventHandlersForItem$1
    204:209:void lambda$setUpEventHandlersForItem$0(celtech.coreUI.components.VerticalMenu$Item,javafx.scene.input.MouseEvent) -> lambda$setUpEventHandlersForItem$0
    31:31:javafx.css.PseudoClass access$000() -> access$000
    57:57:void <clinit>() -> <clinit>
celtech.coreUI.components.VerticalMenu$Item -> celtech.coreUI.components.VerticalMenu$Item:
    java.lang.String name -> name
    javafx.scene.text.Text text -> text
    javafx.scene.shape.Rectangle square -> square
    java.lang.Boolean predicateEnabled -> predicateEnabled
    javafx.beans.value.ChangeListener enabledListener -> enabledListener
    celtech.coreUI.components.VerticalMenu this$0 -> this$0
    73:83:void <init>(celtech.coreUI.components.VerticalMenu,java.lang.String) -> <init>
    90:92:void whenPredicateEnabledChanged(java.lang.Boolean) -> whenPredicateEnabledChanged
    96:98:void setEnabledPredicate(javafx.beans.property.ReadOnlyBooleanProperty) -> setEnabledPredicate
    102:108:void setEnabled(java.lang.Boolean) -> setEnabled
    112:115:void deselect() -> deselect
    119:122:void displayAsSelected() -> displayAsSelected
    85:86:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
    64:64:void access$100(celtech.coreUI.components.VerticalMenu$Item,javafx.beans.property.ReadOnlyBooleanProperty) -> access$100
    64:64:void access$200(celtech.coreUI.components.VerticalMenu$Item) -> access$200
    64:64:void access$300(celtech.coreUI.components.VerticalMenu$Item,java.lang.Boolean) -> access$300
    64:64:void access$400(celtech.coreUI.components.VerticalMenu$Item) -> access$400
celtech.coreUI.components.VerticalMenu$NoArgsVoidFunc -> celtech.coreUI.components.VerticalMenu$NoArgsVoidFunc:
    void run() -> run
celtech.coreUI.components.ZCutEntryBox -> celtech.coreUI.components.ZCutEntryBox:
    javafx.scene.layout.Pane paneInWhichControlResides -> paneInWhichControlResides
    javafx.beans.property.ObjectProperty layoutSubmodeProperty -> layoutSubmodeProperty
    celtech.coreUI.visualisation.ThreeDViewManager viewManager -> viewManager
    celtech.modelcontrol.ModelContainer currentModel -> currentModel
    celtech.appManager.ModelContainerProject project -> project
    celtech.appManager.undo.UndoableProject undoableProject -> undoableProject
    java.lang.Thread cutThread -> cutThread
    celtech.roboxbase.utils.TimeUtils timeUtils -> timeUtils
    celtech.coreUI.components.RestrictedNumberField cutHeight -> cutHeight
    55:124:void accept(javafx.event.ActionEvent) -> accept
    129:136:void cancel(javafx.event.ActionEvent) -> cancel
    43:146:void <init>() -> <init>
    43:159:void <init>(javafx.scene.layout.Pane,javafx.beans.property.ObjectProperty,celtech.coreUI.visualisation.ThreeDViewManager,celtech.appManager.ModelContainerProject) -> <init>
    163:175:void loadContent() -> loadContent
    179:187:void prime(celtech.modelcontrol.ModelContainer) -> prime
    192:196:void screenExtentsChanged(celtech.coreUI.visualisation.ScreenExtentsProvider) -> screenExtentsChanged
    201:218:void positionCutBox(celtech.coreUI.visualisation.ScreenExtents) -> positionCutBox
    37:37:javafx.scene.layout.Pane access$000(celtech.coreUI.components.ZCutEntryBox) -> access$000
    37:37:celtech.roboxbase.utils.TimeUtils access$100(celtech.coreUI.components.ZCutEntryBox) -> access$100
    37:37:celtech.modelcontrol.ModelContainer access$200(celtech.coreUI.components.ZCutEntryBox) -> access$200
    37:37:celtech.coreUI.components.RestrictedNumberField access$300(celtech.coreUI.components.ZCutEntryBox) -> access$300
    37:37:celtech.coreUI.visualisation.ThreeDViewManager access$400(celtech.coreUI.components.ZCutEntryBox) -> access$400
    37:37:celtech.appManager.ModelContainerProject access$500(celtech.coreUI.components.ZCutEntryBox) -> access$500
    37:37:java.lang.Thread access$602(celtech.coreUI.components.ZCutEntryBox,java.lang.Thread) -> access$602
celtech.coreUI.components.ZCutEntryBox$1 -> celtech.coreUI.components.ZCutEntryBox$1:
    celtech.coreUI.components.ZCutEntryBox val$instance -> val$instance
    celtech.coreUI.components.ZCutEntryBox this$0 -> this$0
    61:61:void <init>(celtech.coreUI.components.ZCutEntryBox,celtech.coreUI.components.ZCutEntryBox) -> <init>
    65:97:java.lang.Void call() -> call
    61:61:java.lang.Object call() -> call
celtech.coreUI.components.ZCutEntryBox$1$1 -> celtech.coreUI.components.ZCutEntryBox$1$1:
    java.util.Set val$modelToRemove -> val$modelToRemove
    java.util.List val$resultingModels -> val$resultingModels
    celtech.coreUI.components.ZCutEntryBox$1 this$1 -> this$1
    76:76:void <init>(celtech.coreUI.components.ZCutEntryBox$1,java.util.Set,java.util.List) -> <init>
    81:94:void run() -> run
celtech.coreUI.components.ZCutEntryBox$2 -> celtech.coreUI.components.ZCutEntryBox$2:
    celtech.coreUI.components.ZCutEntryBox this$0 -> this$0
    103:103:void <init>(celtech.coreUI.components.ZCutEntryBox) -> <init>
    107:108:void handle(javafx.event.Event) -> handle
celtech.coreUI.components.buttons.GraphicButton -> celtech.coreUI.components.buttons.GraphicButton:
    javafx.beans.property.StringProperty fxmlFileName -> fxmlFileName
    javafx.beans.property.StringProperty styleClassOverride -> styleClassOverride
    17:25:void <init>() -> <init>
    17:31:void <init>(java.lang.String) -> <init>
    35:35:java.lang.String getFxmlFileName() -> getFxmlFileName
    40:43:void setFxmlFileName(java.lang.String) -> setFxmlFileName
    47:47:javafx.beans.property.StringProperty getFxmlFileNameProperty() -> getFxmlFileNameProperty
    52:52:java.lang.String getStyleClassOverride() -> getStyleClassOverride
    57:60:void setStyleClassOverride(java.lang.String) -> setStyleClassOverride
    64:64:javafx.beans.property.StringProperty getStyleClassOverrideProperty() -> getStyleClassOverrideProperty
    69:87:void loadFXML() -> loadFXML
celtech.coreUI.components.buttons.GraphicButtonWithLabel -> celtech.coreUI.components.buttons.GraphicButtonWithLabel:
    javafx.scene.layout.VBox container -> container
    celtech.coreUI.components.buttons.GraphicButton button -> button
    javafx.scene.control.Label label -> label
    21:47:void <init>() -> <init>
    51:51:java.lang.String getFxmlFileName() -> getFxmlFileName
    56:57:void setFxmlFileName(java.lang.String) -> setFxmlFileName
    61:61:javafx.beans.property.StringProperty getFxmlFileNameProperty() -> getFxmlFileNameProperty
    66:66:javafx.beans.property.ObjectProperty onActionProperty() -> onActionProperty
    71:72:void setOnAction(javafx.event.EventHandler) -> setOnAction
    76:76:javafx.event.EventHandler getOnAction() -> getOnAction
    81:81:java.lang.String getLabelText() -> getLabelText
    86:87:void setLabelText(java.lang.String) -> setLabelText
    91:91:javafx.beans.property.StringProperty getLabelTextProperty() -> getLabelTextProperty
celtech.coreUI.components.buttons.GraphicToggleButton -> celtech.coreUI.components.buttons.GraphicToggleButton:
    javafx.beans.property.StringProperty fxmlFileName -> fxmlFileName
    16:23:void <init>() -> <init>
    27:27:java.lang.String getFxmlFileName() -> getFxmlFileName
    32:35:void setFxmlFileName(java.lang.String) -> setFxmlFileName
    39:39:javafx.beans.property.StringProperty getFxmlFileNameProperty() -> getFxmlFileNameProperty
    44:61:void loadFXML() -> loadFXML
celtech.coreUI.components.buttons.GraphicToggleButtonWithLabel -> celtech.coreUI.components.buttons.GraphicToggleButtonWithLabel:
    javafx.scene.layout.VBox container -> container
    celtech.coreUI.components.buttons.GraphicToggleButton button -> button
    javafx.scene.control.Label label -> label
    22:48:void <init>() -> <init>
    52:52:java.lang.String getFxmlFileName() -> getFxmlFileName
    57:58:void setFxmlFileName(java.lang.String) -> setFxmlFileName
    62:62:javafx.beans.property.StringProperty getFxmlFileNameProperty() -> getFxmlFileNameProperty
    67:67:javafx.beans.property.ObjectProperty onActionProperty() -> onActionProperty
    72:73:void setOnAction(javafx.event.EventHandler) -> setOnAction
    77:77:javafx.event.EventHandler getOnAction() -> getOnAction
    82:82:java.lang.String getLabelText() -> getLabelText
    87:88:void setLabelText(java.lang.String) -> setLabelText
    92:92:javafx.beans.property.StringProperty getLabelTextProperty() -> getLabelTextProperty
    97:98:void setSelected(boolean) -> setSelected
    102:102:javafx.beans.property.BooleanProperty selectedProperty() -> selectedProperty
celtech.coreUI.components.buttons.NewsButton -> celtech.coreUI.components.buttons.NewsButton:
    java.lang.String fxmlFileName -> fxmlFileName
    celtech.appManager.NewsBot newsBot -> newsBot
    javafx.scene.control.Tooltip tooltip -> tooltip
    java.lang.String allAutoMakerNewsFlashesURL -> allAutoMakerNewsFlashesURL
    javafx.scene.text.Text newsCounter -> newsCounter
    javafx.scene.layout.StackPane newsCounterContainer -> newsCounterContainer
    27:70:void <init>() -> <init>
    75:99:void hereIsTheNews(java.util.List) -> hereIsTheNews
    89:94:void lambda$hereIsTheNews$1(java.lang.StringBuilder,celtech.appManager.NewsBot$NewsArticle) -> lambda$hereIsTheNews$1
    44:66:void lambda$new$0(javafx.event.ActionEvent) -> lambda$new$0
celtech.coreUI.components.material.FilamentCategory -> celtech.coreUI.components.material.FilamentCategory:
    javafx.scene.text.Text categoryTitle -> categoryTitle
    javafx.scene.layout.VBox swatchContainer -> swatchContainer
    java.util.Comparator byMaterialName -> byMaterialName
    celtech.coreUI.components.material.FilamentSelectionListener materialSelectionListener -> materialSelectionListener
    java.util.Map filamentMap -> filamentMap
    29:55:void <init>(celtech.coreUI.components.material.FilamentSelectionListener) -> <init>
    59:82:void setCategoryData(java.lang.String,java.util.Map) -> setCategoryData
    85:85:java.util.Map getFilamentMap() -> getFilamentMap
    67:81:void lambda$setCategoryData$1(java.util.Map$Entry) -> lambda$setCategoryData$1
    30:30:int lambda$new$0(java.util.Map$Entry,java.util.Map$Entry) -> lambda$new$0
celtech.coreUI.components.material.FilamentCategoryMenuItem -> celtech.coreUI.components.material.FilamentCategoryMenuItem:
    14:15:void <init>(javafx.scene.Node) -> <init>
celtech.coreUI.components.material.FilamentCell -> celtech.coreUI.components.material.FilamentCell:
    int SWATCH_SQUARE_SIZE -> SWATCH_SQUARE_SIZE
    javafx.scene.layout.HBox cellContainer -> cellContainer
    javafx.scene.shape.Rectangle rectangle -> rectangle
    javafx.scene.control.Label label -> label
    25:37:void <init>() -> <init>
    42:64:void updateItem(celtech.roboxbase.configuration.Filament,boolean) -> updateItem
    19:19:void updateItem(java.lang.Object,boolean) -> updateItem
    22:22:void <clinit>() -> <clinit>
celtech.coreUI.components.material.FilamentCellLong -> celtech.coreUI.components.material.FilamentCellLong:
    18:19:void <init>() -> <init>
    24:53:void updateItem(celtech.roboxbase.configuration.Filament,boolean) -> updateItem
    14:14:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.components.material.FilamentMenuButton -> celtech.coreUI.components.material.FilamentMenuButton:
    celtech.coreUI.components.material.SelectedFilamentDisplayNode filamentDisplayNode -> filamentDisplayNode
    celtech.coreUI.components.material.FilamentOnReelDisplay filamentOnReelDisplayNode -> filamentOnReelDisplayNode
    celtech.coreUI.components.material.FilamentSelectionListener filamentSelectionListener -> filamentSelectionListener
    celtech.coreUI.components.material.SpecialItemSelectionListener specialItemSelectionListener -> specialItemSelectionListener
    boolean dontDisplayDuplicateNamedFilaments -> dontDisplayDuplicateNamedFilaments
    java.util.Map permanentMenuItems -> permanentMenuItems
    java.util.Map permanentMenuFilaments -> permanentMenuFilaments
    java.lang.String roboxCategoryPrefix -> roboxCategoryPrefix
    java.lang.String customCategoryPrefix -> customCategoryPrefix
    java.util.Comparator byCategory -> byCategory
    java.util.Comparator byCategoryName -> byCategoryName
    30:101:void <init>() -> <init>
    107:112:void initialiseButton(celtech.coreUI.components.material.FilamentSelectionListener,celtech.coreUI.components.material.SpecialItemSelectionListener,boolean) -> initialiseButton
    116:118:void addSeparator() -> addSeparator
    122:180:void repopulateFilaments() -> repopulateFilaments
    184:222:void displayFirstFilament() -> displayFirstFilament
    226:228:void displayFilamentOnButton(celtech.roboxbase.configuration.Filament) -> displayFilamentOnButton
    232:234:void displaySpecialItemOnButton(java.lang.String) -> displaySpecialItemOnButton
    238:238:celtech.roboxbase.configuration.Filament getCurrentlyDisplayedFilament() -> getCurrentlyDisplayedFilament
    243:246:void deleteSpecialMenuItem(java.lang.String) -> deleteSpecialMenuItem
    250:261:void addSpecialMenuItem(java.lang.String,celtech.roboxbase.configuration.Filament) -> addSpecialMenuItem
    265:268:void specialItemSelectedAction(java.lang.String) -> specialItemSelectedAction
    272:275:void filamentSelectedAction(celtech.roboxbase.configuration.Filament) -> filamentSelectedAction
    281:282:void filamentSelected(celtech.roboxbase.configuration.Filament) -> filamentSelected
    256:257:void lambda$addSpecialMenuItem$6(java.lang.String,javafx.event.ActionEvent) -> lambda$addSpecialMenuItem$6
    145:146:void lambda$repopulateFilaments$5(java.util.Map$Entry,celtech.roboxbase.configuration.Filament) -> lambda$repopulateFilaments$5
    126:126:java.util.TreeMap lambda$repopulateFilaments$4() -> lambda$repopulateFilaments$4
    99:100:void lambda$new$3(javafx.collections.ListChangeListener$Change) -> lambda$new$3
    93:94:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$2
    66:82:int lambda$static$1(java.lang.String,java.lang.String) -> lambda$static$1
    44:61:int lambda$static$0(celtech.roboxbase.configuration.Filament,celtech.roboxbase.configuration.Filament) -> lambda$static$0
    42:64:void <clinit>() -> <clinit>
celtech.coreUI.components.material.FilamentOnReelDisplay -> celtech.coreUI.components.material.FilamentOnReelDisplay:
    javafx.scene.text.Text titleText -> titleText
    javafx.scene.text.Text filamentNameText -> filamentNameText
    celtech.coreUI.components.material.FilamentSwatch swatch -> swatch
    16:23:void <init>() -> <init>
    16:29:void <init>(java.lang.String,celtech.roboxbase.configuration.Filament) -> <init>
    33:39:void initialise() -> initialise
    43:46:void updateFilamentOnReelDisplay(java.lang.String,celtech.roboxbase.configuration.Filament) -> updateFilamentOnReelDisplay
celtech.coreUI.components.material.FilamentSelectionListener -> celtech.coreUI.components.material.FilamentSelectionListener:
    void filamentSelected(celtech.roboxbase.configuration.Filament) -> filamentSelected
celtech.coreUI.components.material.FilamentSwatch -> celtech.coreUI.components.material.FilamentSwatch:
    javafx.scene.shape.Rectangle swatchPanel -> swatchPanel
    javafx.scene.control.Tooltip ttip -> ttip
    celtech.coreUI.components.material.FilamentSelectionListener filamentSelectionListener -> filamentSelectionListener
    21:28:void <init>() -> <init>
    21:33:void <init>(celtech.coreUI.components.material.FilamentSelectionListener,celtech.roboxbase.configuration.Filament) -> <init>
    37:65:void initialise(celtech.coreUI.components.material.FilamentSelectionListener,celtech.roboxbase.configuration.Filament) -> initialise
    69:70:void updateFilamentSelectionListener(celtech.coreUI.components.material.FilamentSelectionListener) -> updateFilamentSelectionListener
    74:86:void updateFilament(celtech.roboxbase.configuration.Filament) -> updateFilament
    57:61:void lambda$initialise$0(celtech.roboxbase.configuration.Filament,javafx.scene.input.MouseEvent) -> lambda$initialise$0
celtech.coreUI.components.material.MaterialComponent -> celtech.coreUI.components.material.MaterialComponent:
    celtech.roboxbase.printerControl.model.Printer printer -> printer
    int extruderNumber -> extruderNumber
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> filamentContainer
    javafx.scene.layout.AnchorPane anchorPane -> anchorPane
    javafx.scene.text.Text reelNumberMaterial -> reelNumberMaterial
    javafx.scene.shape.SVGPath reelSVGRobox -> reelSVGRobox
    javafx.scene.shape.SVGPath reelSVGGears -> reelSVGGears
    javafx.scene.Group reelSVGQuestion -> reelSVGQuestion
    javafx.scene.Group reelSVGCross -> reelSVGCross
    javafx.scene.shape.SVGPath svgLoaded -> svgLoaded
    javafx.scene.text.Text materialColour1 -> materialColour1
    javafx.scene.text.Text materialColour2 -> materialColour2
    javafx.scene.text.Text materialRemaining -> materialRemaining
    javafx.scene.text.TextFlow materialColourContainer -> materialColourContainer
    celtech.coreUI.components.material.FilamentMenuButton filamentMenuButton -> filamentMenuButton
    celtech.roboxbase.configuration.Filament filamentInUse -> filamentInUse
    39:94:void <init>() -> <init>
    39:122:void <init>(celtech.roboxbase.printerControl.model.Printer,int) -> <init>
    126:126:boolean filamentLoaded() -> filamentLoaded
    131:136:void whenMaterialSelected(celtech.roboxbase.configuration.Filament) -> whenMaterialSelected
    140:148:void setUpFilamentLoadedListener() -> setUpFilamentLoadedListener
    152:219:void configureDisplay() -> configureDisplay
    223:242:void setReelType(celtech.coreUI.components.material.MaterialComponent$ReelType) -> setReelType
    248:272:void setMaterial(int,celtech.roboxbase.MaterialType,java.lang.String,javafx.scene.paint.Color,double,double,boolean) -> setMaterial
    279:317:void showDetails(java.lang.String,java.lang.String,java.lang.String,javafx.scene.paint.Color,boolean,boolean) -> showDetails
    321:323:void setReelColourString(java.lang.String) -> setReelColourString
    329:329:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    334:334:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    339:339:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    344:344:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    349:353:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    357:358:void resetFilament() -> resetFilament
    363:368:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    373:377:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    382:386:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    391:391:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    396:398:void filamentSelected(celtech.roboxbase.configuration.Filament) -> filamentSelected
    145:146:void lambda$setUpFilamentLoadedListener$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$setUpFilamentLoadedListener$0
celtech.coreUI.components.material.MaterialComponent$1 -> celtech.coreUI.components.material.MaterialComponent$1:
    int[] $SwitchMap$celtech$coreUI$components$material$MaterialComponent$ReelType -> $SwitchMap$celtech$coreUI$components$material$MaterialComponent$ReelType
    227:227:void <clinit>() -> <clinit>
celtech.coreUI.components.material.MaterialComponent$Mode -> celtech.coreUI.components.material.MaterialComponent$Mode:
    celtech.coreUI.components.material.MaterialComponent$Mode STATUS -> STATUS
    celtech.coreUI.components.material.MaterialComponent$Mode LAYOUT -> LAYOUT
    celtech.coreUI.components.material.MaterialComponent$Mode SETTINGS -> SETTINGS
    celtech.coreUI.components.material.MaterialComponent$Mode[] $VALUES -> $VALUES
    47:47:celtech.coreUI.components.material.MaterialComponent$Mode[] values() -> values
    47:47:celtech.coreUI.components.material.MaterialComponent$Mode valueOf(java.lang.String) -> valueOf
    47:47:void <init>(java.lang.String,int) -> <init>
    47:50:void <clinit>() -> <clinit>
celtech.coreUI.components.material.MaterialComponent$ReelType -> celtech.coreUI.components.material.MaterialComponent$ReelType:
    celtech.coreUI.components.material.MaterialComponent$ReelType ROBOX -> ROBOX
    celtech.coreUI.components.material.MaterialComponent$ReelType GEARS -> GEARS
    celtech.coreUI.components.material.MaterialComponent$ReelType SOLID_QUESTION -> SOLID_QUESTION
    celtech.coreUI.components.material.MaterialComponent$ReelType SOLID_CROSS -> SOLID_CROSS
    celtech.coreUI.components.material.MaterialComponent$ReelType[] $VALUES -> $VALUES
    41:41:celtech.coreUI.components.material.MaterialComponent$ReelType[] values() -> values
    41:41:celtech.coreUI.components.material.MaterialComponent$ReelType valueOf(java.lang.String) -> valueOf
    41:41:void <init>(java.lang.String,int) -> <init>
    41:44:void <clinit>() -> <clinit>
celtech.coreUI.components.material.SelectedFilamentDisplayNode -> celtech.coreUI.components.material.SelectedFilamentDisplayNode:
    int SWATCH_SQUARE_SIZE -> SWATCH_SQUARE_SIZE
    javafx.scene.shape.Rectangle rectangle -> rectangle
    javafx.scene.control.Label label -> label
    celtech.roboxbase.configuration.Filament filamentOnDisplay -> filamentOnDisplay
    23:33:void <init>() -> <init>
    37:55:void updateSelectedFilament(celtech.roboxbase.configuration.Filament) -> updateSelectedFilament
    59:59:celtech.roboxbase.configuration.Filament getSelectedFilament() -> getSelectedFilament
celtech.coreUI.components.material.SpecialItemSelectionListener -> celtech.coreUI.components.material.SpecialItemSelectionListener:
    void specialItemSelected(java.lang.String) -> specialItemSelected
celtech.coreUI.components.printerstatus.ComponentIsolationInterface -> celtech.coreUI.components.printerstatus.ComponentIsolationInterface:
    void interruptibilityUpdated(celtech.coreUI.components.printerstatus.PrinterComponent) -> interruptibilityUpdated
celtech.coreUI.components.printerstatus.PrinterComponent -> celtech.coreUI.components.printerstatus.PrinterComponent:
    boolean selected -> selected
    celtech.coreUI.components.printerstatus.PrinterComponent$Size currentSize -> currentSize
    double sizePixels -> sizePixels
    int fontSize -> fontSize
    boolean inInterruptibleState -> inInterruptibleState
    javafx.scene.text.Text name -> name
    javafx.scene.text.Text rootName -> rootName
    javafx.scene.layout.HBox rootNameBox -> rootNameBox
    javafx.scene.layout.Pane innerPane -> innerPane
    celtech.coreUI.components.printerstatus.WhiteProgressBarComponent progressBar -> progressBar
    celtech.coreUI.components.printerstatus.PrinterSVGComponent printerSVG -> printerSVG
    javafx.scene.image.ImageView printerImage -> printerImage
    double imageAspectRatio -> imageAspectRatio
    celtech.roboxbase.printerControl.model.Printer printer -> printer
    celtech.coreUI.components.printerstatus.ComponentIsolationInterface isolationInterface -> isolationInterface
    java.lang.String styleClassForText -> styleClassForText
    javafx.beans.value.ChangeListener nameListener -> nameListener
    javafx.beans.value.ChangeListener colorListener -> colorListener
    javafx.beans.value.ChangeListener progressListener -> progressListener
    44:179:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.coreUI.components.printerstatus.ComponentIsolationInterface) -> <init>
    183:184:void setStatus(celtech.coreUI.components.printerstatus.PrinterComponent$Status) -> setStatus
    188:190:void setName(java.lang.String) -> setName
    194:194:javafx.beans.property.StringProperty nameTextProperty() -> nameTextProperty
    202:293:void initialise() -> initialise
    297:298:void setProgress(double) -> setProgress
    302:307:void setColour(javafx.scene.paint.Color) -> setColour
    311:316:void setSelected(boolean) -> setSelected
    320:325:void setSize(celtech.coreUI.components.printerstatus.PrinterComponent$Size) -> setSize
    331:364:void updateStatus(celtech.roboxbase.printerControl.PrinterStatus,celtech.roboxbase.comms.remote.PauseStatus) -> updateStatus
    377:473:void redraw() -> redraw
    478:478:double computeMinHeight(double) -> computeMinHeight
    484:484:double computeMinWidth(double) -> computeMinWidth
    490:490:double computeMaxHeight(double) -> computeMaxHeight
    496:496:double computeMaxWidth(double) -> computeMaxWidth
    502:502:double computePrefHeight(double) -> computePrefHeight
    508:508:double computePrefWidth(double) -> computePrefWidth
    517:531:java.lang.String fitNameToWidth(java.lang.String) -> fitNameToWidth
    536:536:boolean isInterruptible() -> isInterruptible
    285:292:void lambda$initialise$6(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$initialise$6
    244:245:void lambda$initialise$5(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$initialise$5
    239:240:void lambda$initialise$4(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.remote.PauseStatus,celtech.roboxbase.comms.remote.PauseStatus) -> lambda$initialise$4
    233:234:void lambda$initialise$3(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrinterStatus,celtech.roboxbase.printerControl.PrinterStatus) -> lambda$initialise$3
    157:158:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$2
    153:154:void lambda$new$1(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color) -> lambda$new$1
    149:150:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$0
    41:41:celtech.roboxbase.printerControl.model.Printer access$000(celtech.coreUI.components.printerstatus.PrinterComponent) -> access$000
    41:41:celtech.coreUI.components.printerstatus.PrinterSVGComponent access$100(celtech.coreUI.components.printerstatus.PrinterComponent) -> access$100
celtech.coreUI.components.printerstatus.PrinterComponent$1 -> celtech.coreUI.components.printerstatus.PrinterComponent$1:
    celtech.coreUI.components.printerstatus.PrinterComponent this$0 -> this$0
    250:250:void <init>(celtech.coreUI.components.printerstatus.PrinterComponent) -> <init>
    254:255:void onChanged(javafx.collections.ListChangeListener$Change) -> onChanged
celtech.coreUI.components.printerstatus.PrinterComponent$2 -> celtech.coreUI.components.printerstatus.PrinterComponent$2:
    int[] $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus -> $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus
    int[] $SwitchMap$celtech$coreUI$components$printerstatus$PrinterComponent$Size -> $SwitchMap$celtech$coreUI$components$printerstatus$PrinterComponent$Size
    331:385:void <clinit>() -> <clinit>
celtech.coreUI.components.printerstatus.PrinterComponent$Size -> celtech.coreUI.components.printerstatus.PrinterComponent$Size:
    celtech.coreUI.components.printerstatus.PrinterComponent$Size SIZE_SMALL -> SIZE_SMALL
    celtech.coreUI.components.printerstatus.PrinterComponent$Size SIZE_MEDIUM -> SIZE_MEDIUM
    celtech.coreUI.components.printerstatus.PrinterComponent$Size SIZE_LARGE -> SIZE_LARGE
    int size -> size
    int spacing -> spacing
    celtech.coreUI.components.printerstatus.PrinterComponent$Size[] $VALUES -> $VALUES
    50:50:celtech.coreUI.components.printerstatus.PrinterComponent$Size[] values() -> values
    50:50:celtech.coreUI.components.printerstatus.PrinterComponent$Size valueOf(java.lang.String) -> valueOf
    61:64:void <init>(java.lang.String,int,int,int) -> <init>
    68:68:int getSize() -> getSize
    73:73:int getSpacing() -> getSpacing
    50:55:void <clinit>() -> <clinit>
celtech.coreUI.components.printerstatus.PrinterComponent$Status -> celtech.coreUI.components.printerstatus.PrinterComponent$Status:
    celtech.coreUI.components.printerstatus.PrinterComponent$Status NO_INDICATOR -> NO_INDICATOR
    celtech.coreUI.components.printerstatus.PrinterComponent$Status READY -> READY
    celtech.coreUI.components.printerstatus.PrinterComponent$Status PRINTING -> PRINTING
    celtech.coreUI.components.printerstatus.PrinterComponent$Status PAUSED -> PAUSED
    celtech.coreUI.components.printerstatus.PrinterComponent$Status NOTIFICATION -> NOTIFICATION
    java.lang.String i18nString -> i18nString
    celtech.coreUI.components.printerstatus.PrinterComponent$Status[] $VALUES -> $VALUES
    77:77:celtech.coreUI.components.printerstatus.PrinterComponent$Status[] values() -> values
    77:77:celtech.coreUI.components.printerstatus.PrinterComponent$Status valueOf(java.lang.String) -> valueOf
    89:91:void <init>(java.lang.String,int,java.lang.String) -> <init>
    99:105:java.lang.String getI18nString() -> getI18nString
    115:115:java.lang.String toString() -> toString
    77:84:void <clinit>() -> <clinit>
celtech.coreUI.components.printerstatus.PrinterGridComponent -> celtech.coreUI.components.printerstatus.PrinterGridComponent:
    javafx.collections.ObservableList connectedPrinters -> connectedPrinters
    java.util.Map printerComponentsByPrinter -> printerComponentsByPrinter
    celtech.coreUI.components.PrinterIDDialog printerIDDialog -> printerIDDialog
    36:60:void <init>() -> <init>
    68:83:void addPrinterComponentToGrid(celtech.coreUI.components.printerstatus.PrinterComponent) -> addPrinterComponentToGrid
    87:89:void removeAllPrintersFromGrid() -> removeAllPrintersFromGrid
    97:101:void removePrinter(celtech.roboxbase.printerControl.model.Printer) -> removePrinter
    105:121:void clearAndAddAllPrintersToGrid() -> clearAndAddAllPrintersToGrid
    129:135:celtech.coreUI.components.printerstatus.PrinterComponent createPrinterComponentForPrinter(celtech.roboxbase.printerControl.model.Printer) -> createPrinterComponentForPrinter
    147:155:void handlePrinterClicked(javafx.scene.input.MouseEvent,celtech.roboxbase.printerControl.model.Printer) -> handlePrinterClicked
    159:174:void selectPrinter(celtech.roboxbase.printerControl.model.Printer) -> selectPrinter
    181:208:void showEditPrinterDetails(celtech.roboxbase.printerControl.model.Printer) -> showEditPrinterDetails
    216:224:void selectOnePrinter() -> selectOnePrinter
    229:231:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    236:239:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    244:244:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    249:249:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    254:254:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    259:259:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    264:264:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    269:269:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    274:274:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    279:280:void interruptibilityUpdated(celtech.coreUI.components.printerstatus.PrinterComponent) -> interruptibilityUpdated
    284:305:void actOnComponentInterruptible() -> actOnComponentInterruptible
    132:133:void lambda$createPrinterComponentForPrinter$0(celtech.roboxbase.printerControl.model.Printer,javafx.scene.input.MouseEvent) -> lambda$createPrinterComponentForPrinter$0
celtech.coreUI.components.printerstatus.PrinterSVGComponent -> celtech.coreUI.components.printerstatus.PrinterSVGComponent:
    javafx.scene.layout.Pane printerIcon -> printerIcon
    javafx.scene.layout.Pane readyIcon -> readyIcon
    javafx.scene.layout.Pane printingIcon -> printingIcon
    javafx.scene.layout.Pane pausedIcon -> pausedIcon
    javafx.scene.layout.Pane notificationIcon -> notificationIcon
    javafx.scene.layout.Pane errorIcon -> errorIcon
    javafx.scene.layout.Pane rootIndicator -> rootIndicator
    38:42:void hideAllIcons() -> hideAllIcons
    45:60:void <init>() -> <init>
    64:83:void setStatus(celtech.coreUI.components.printerstatus.PrinterComponent$Status) -> setStatus
    87:88:void showErrorIndicator(boolean) -> showErrorIndicator
    92:95:void setSize(double) -> setSize
    99:100:void setIsRoot(boolean) -> setIsRoot
celtech.coreUI.components.printerstatus.PrinterSVGComponent$1 -> celtech.coreUI.components.printerstatus.PrinterSVGComponent$1:
    int[] $SwitchMap$celtech$coreUI$components$printerstatus$PrinterComponent$Status -> $SwitchMap$celtech$coreUI$components$printerstatus$PrinterComponent$Status
    66:66:void <clinit>() -> <clinit>
celtech.coreUI.components.printerstatus.WhiteProgressBarComponent -> celtech.coreUI.components.printerstatus.WhiteProgressBarComponent:
    javafx.scene.shape.Polygon solidBar -> solidBar
    javafx.scene.shape.Polygon clearBar -> clearBar
    double width -> width
    double height -> height
    double progress -> progress
    33:55:void <init>() -> <init>
    59:64:void setProgress(double) -> setProgress
    68:70:void setControlWidth(double) -> setControlWidth
    74:76:void setControlHeight(double) -> setControlHeight
    80:97:void redraw() -> redraw
celtech.coreUI.components.tips.ArrowTag -> celtech.coreUI.components.tips.ArrowTag:
    javafx.scene.control.Label title -> title
    javafx.scene.layout.VBox labelContainer -> labelContainer
    javafx.scene.control.Label label -> label
    javafx.scene.shape.SVGPath arrow -> arrow
    celtech.coreUI.components.tips.TaggablePane attachedTo -> attachedTo
    java.lang.String i18nTitle -> i18nTitle
    java.util.List conditionalTextElements -> conditionalTextElements
    javafx.beans.value.ChangeListener conditionChangeListener -> conditionChangeListener
    30:76:void <init>() -> <init>
    80:80:java.lang.String getLabelText() -> getLabelText
    85:86:void setLabelText(java.lang.String) -> setLabelText
    90:90:javafx.beans.property.StringProperty labelTextProperty() -> labelTextProperty
    95:95:java.lang.String getTitleText() -> getTitleText
    100:101:void setTitleText(java.lang.String) -> setTitleText
    105:105:javafx.beans.property.StringProperty titleTextProperty() -> titleTextProperty
    110:115:void bindPosition() -> bindPosition
    119:127:void repositionText() -> repositionText
    131:134:void addConditionalText(java.lang.String,javafx.beans.value.ObservableValue) -> addConditionalText
    138:144:void removeAllConditionalText() -> removeAllConditionalText
    148:150:void destroy() -> destroy
    154:179:void constructString() -> constructString
    183:186:void initialise(celtech.coreUI.components.tips.TaggablePane,java.lang.String) -> initialise
    190:209:void initialise(celtech.coreUI.components.tips.TaggablePane) -> initialise
    213:230:void calculateVisibility() -> calculateVisibility
    113:114:void lambda$bindPosition$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$bindPosition$0
    27:27:void access$000(celtech.coreUI.components.tips.ArrowTag) -> access$000
celtech.coreUI.components.tips.ArrowTag$1 -> celtech.coreUI.components.tips.ArrowTag$1:
    celtech.coreUI.components.tips.ArrowTag this$0 -> this$0
    45:45:void <init>(celtech.coreUI.components.tips.ArrowTag) -> <init>
    50:51:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    45:45:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.tips.ArrowTag$2 -> celtech.coreUI.components.tips.ArrowTag$2:
    celtech.coreUI.components.tips.ArrowTag this$0 -> this$0
    197:197:void <init>(celtech.coreUI.components.tips.ArrowTag) -> <init>
    202:203:void changed(javafx.beans.value.ObservableValue,javafx.geometry.Bounds,javafx.geometry.Bounds) -> changed
    197:197:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.components.tips.ConditionalText -> celtech.coreUI.components.tips.ConditionalText:
    javafx.beans.value.ObservableValue appearanceCondition -> appearanceCondition
    java.lang.String i18nText -> i18nText
    17:20:void <init>(java.lang.String,javafx.beans.value.ObservableValue) -> <init>
    24:24:javafx.beans.value.ObservableValue getAppearanceCondition() -> getAppearanceCondition
    29:30:void setAppearanceCondition(javafx.beans.binding.BooleanBinding) -> setAppearanceCondition
    34:34:java.lang.String getI18nText() -> getI18nText
    39:40:void setI18nText(java.lang.String) -> setI18nText
celtech.coreUI.components.tips.TaggablePane -> celtech.coreUI.components.tips.TaggablePane:
    javafx.beans.property.ObjectProperty tagOrientation -> tagOrientation
    celtech.coreUI.components.tips.ArrowTag tipArrow -> tipArrow
    14:18:void <init>() -> <init>
    javafx.geometry.Point2D getTagPosition() -> getTagPosition
    25:26:void setTagOrientation(celtech.coreUI.components.Orientation) -> setTagOrientation
    30:30:celtech.coreUI.components.Orientation getTagOrientation() -> getTagOrientation
    35:35:javafx.beans.property.ReadOnlyObjectProperty tagOrientationProperty() -> tagOrientationProperty
    41:46:void installTag() -> installTag
    50:55:void installTag(java.lang.String) -> installTag
    59:64:void uninstallTag() -> uninstallTag
    68:68:celtech.coreUI.components.tips.ArrowTag getTag() -> getTag
celtech.coreUI.controllers.ButtonController -> celtech.coreUI.controllers.ButtonController:
    javafx.scene.effect.Effect notAvailable -> notAvailable
    javafx.scene.effect.Effect availableOnly -> availableOnly
    javafx.scene.effect.DropShadow availableAndHover -> availableAndHover
    javafx.scene.effect.InnerShadow pressed -> pressed
    javafx.scene.effect.Lighting selectedOnly -> selectedOnly
    double dimmedOpacity -> dimmedOpacity
    24:71:void <init>() -> <init>
    81:83:void makeButtonNotAvailable(javafx.scene.Node) -> makeButtonNotAvailable
    93:95:void makeButtonAvailable(javafx.scene.Node) -> makeButtonAvailable
    105:107:void makeButtonSelected(javafx.scene.Node) -> makeButtonSelected
celtech.coreUI.controllers.InfoScreenIndicatorController -> celtech.coreUI.controllers.InfoScreenIndicatorController:
    javafx.scene.Group blueParts -> blueParts
    javafx.scene.paint.Color blueColour -> blueColour
    javafx.scene.paint.Color whiteColour -> whiteColour
    21:28:void <init>() -> <init>
    33:33:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    42:61:void setSelected(boolean) -> setSelected
celtech.coreUI.controllers.ModalDialogController -> celtech.coreUI.controllers.ModalDialogController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.control.Label dialogTitle -> dialogTitle
    javafx.scene.control.Label dialogMessage -> dialogMessage
    javafx.scene.layout.HBox buttonHolder -> buttonHolder
    javafx.scene.layout.VBox container -> container
    javafx.scene.layout.VBox defaultContent -> defaultContent
    javafx.event.EventHandler buttonHandler -> buttonHandler
    int buttonValue -> buttonValue
    javafx.stage.Stage myStage -> myStage
    javafx.scene.Node customContent -> customContent
    java.util.ArrayList buttons -> buttons
    33:69:void <init>() -> <init>
    79:80:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    88:89:void setDialogTitle(java.lang.String) -> setDialogTitle
    97:98:void setDialogMessage(java.lang.String) -> setDialogMessage
    107:107:int addButton(java.lang.String) -> addButton
    118:128:int addButton(java.lang.String,javafx.beans.property.ReadOnlyBooleanProperty) -> addButton
    137:137:int getButtonValue() -> getButtonValue
    146:147:void configure(javafx.stage.Stage) -> configure
    155:163:void setContent(javafx.scene.Node) -> setContent
    30:30:int access$002(celtech.coreUI.controllers.ModalDialogController,int) -> access$002
    30:30:java.util.ArrayList access$100(celtech.coreUI.controllers.ModalDialogController) -> access$100
    30:30:javafx.stage.Stage access$200(celtech.coreUI.controllers.ModalDialogController) -> access$200
celtech.coreUI.controllers.ModalDialogController$1 -> celtech.coreUI.controllers.ModalDialogController$1:
    celtech.coreUI.controllers.ModalDialogController this$0 -> this$0
    60:60:void <init>(celtech.coreUI.controllers.ModalDialogController) -> <init>
    64:66:void handle(javafx.event.ActionEvent) -> handle
    60:60:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.MyMiniFactoryLoaderController -> celtech.coreUI.controllers.MyMiniFactoryLoaderController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.web.WebEngine webEngine -> webEngine
    javafx.beans.property.StringProperty fileDownloadLocation -> fileDownloadLocation
    java.lang.String myMiniFactoryURLString -> myMiniFactoryURLString
    boolean forwardsPossible -> forwardsPossible
    celtech.coreUI.visualisation.ModelLoader modelLoader -> modelLoader
    javafx.scene.layout.VBox webContentContainer -> webContentContainer
    celtech.coreUI.components.buttons.GraphicButtonWithLabel addToProjectButton -> addToProjectButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel forwardButton -> forwardButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel backwardButton -> backwardButton
    boolean alreadyDownloading -> alreadyDownloading
    49:175:void <init>() -> <init>
    78:79:void cancelPressed(javafx.event.ActionEvent) -> cancelPressed
    84:86:void backwardPressed(javafx.event.ActionEvent) -> backwardPressed
    91:93:void forwardPressed(javafx.event.ActionEvent) -> forwardPressed
    98:102:void addToProjectPressed(javafx.event.ActionEvent) -> addToProjectPressed
    107:118:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    122:173:void loadWebData() -> loadWebData
    179:210:void downloadFile(java.lang.String) -> downloadFile
    214:216:void finishedWithEngines() -> finishedWithEngines
    224:252:boolean checkSiteIsReachable() -> checkSiteIsReachable
    204:205:void lambda$downloadFile$5(javafx.concurrent.WorkerStateEvent) -> lambda$downloadFile$5
    199:200:void lambda$downloadFile$4(javafx.concurrent.WorkerStateEvent) -> lambda$downloadFile$4
    188:195:void lambda$downloadFile$3(javafx.concurrent.WorkerStateEvent) -> lambda$downloadFile$3
    141:172:void lambda$loadWebData$2(javafx.beans.value.ObservableValue,javafx.concurrent.Worker$State,javafx.concurrent.Worker$State) -> lambda$loadWebData$2
    111:117:void lambda$initialize$1() -> lambda$initialize$1
    100:101:void lambda$addToProjectPressed$0() -> lambda$addToProjectPressed$0
    52:53:void <clinit>() -> <clinit>
celtech.coreUI.controllers.MyMiniFactoryLoaderController$1 -> celtech.coreUI.controllers.MyMiniFactoryLoaderController$1:
    int[] $SwitchMap$javafx$concurrent$Worker$State -> $SwitchMap$javafx$concurrent$Worker$State
    141:141:void <clinit>() -> <clinit>
celtech.coreUI.controllers.PrinterIDDialogController -> celtech.coreUI.controllers.PrinterIDDialogController:
    libertysystems.stenographer.Stenographer steno -> steno
    boolean okPressed -> okPressed
    javafx.scene.layout.VBox container -> container
    javafx.scene.control.Label dialogMessage -> dialogMessage
    javafx.scene.control.Label dialogTitle -> dialogTitle
    javafx.scene.control.Button okButton -> okButton
    celtech.coreUI.components.RestrictedTextField roboxNameField -> roboxNameField
    javafx.scene.control.ToggleGroup colourButtonGroup -> colourButtonGroup
    int buttonValue -> buttonValue
    javafx.stage.Stage myStage -> myStage
    java.util.ArrayList buttons -> buttons
    javafx.event.EventHandler textInputHandler -> textInputHandler
    celtech.roboxbase.printerControl.model.Printer printerToUse -> printerToUse
    celtech.roboxbase.PrinterColourMap colourMap -> colourMap
    34:89:void <init>() -> <init>
    62:64:void okButtonPressed(javafx.scene.input.MouseEvent) -> okButtonPressed
    71:78:void cancelButtonPressed(javafx.scene.input.MouseEvent) -> cancelButtonPressed
    101:133:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    141:142:void configure(javafx.stage.Stage) -> configure
    150:155:javafx.scene.paint.Color getChosenDisplayColour() -> getChosenDisplayColour
    165:165:java.lang.String getChosenPrinterName() -> getChosenPrinterName
    174:175:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> setPrinterToUse
    183:192:void setChosenColour(javafx.scene.paint.Color) -> setChosenColour
    200:201:void setChosenPrinterName(java.lang.String) -> setChosenPrinterName
    209:209:boolean okPressed() -> okPressed
    34:34:celtech.roboxbase.PrinterColourMap access$000(celtech.coreUI.controllers.PrinterIDDialogController) -> access$000
    34:34:celtech.roboxbase.printerControl.model.Printer access$100(celtech.coreUI.controllers.PrinterIDDialogController) -> access$100
    34:34:libertysystems.stenographer.Stenographer access$200(celtech.coreUI.controllers.PrinterIDDialogController) -> access$200
celtech.coreUI.controllers.PrinterIDDialogController$1 -> celtech.coreUI.controllers.PrinterIDDialogController$1:
    celtech.coreUI.controllers.PrinterIDDialogController this$0 -> this$0
    102:102:void <init>(celtech.coreUI.controllers.PrinterIDDialogController) -> <init>
    106:110:void handle(javafx.scene.input.KeyEvent) -> handle
    102:102:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.PrinterIDDialogController$2 -> celtech.coreUI.controllers.PrinterIDDialogController$2:
    celtech.coreUI.controllers.PrinterIDDialogController this$0 -> this$0
    116:116:void <init>(celtech.coreUI.controllers.PrinterIDDialogController) -> <init>
    121:131:void changed(javafx.beans.value.ObservableValue,javafx.scene.control.Toggle,javafx.scene.control.Toggle) -> changed
    116:116:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.PrinterStatusPageController -> celtech.coreUI.controllers.PrinterStatusPageController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.printerControl.model.Printer printerToUse -> printerToUse
    javafx.beans.value.ChangeListener printerColourChangeListener -> printerColourChangeListener
    javafx.beans.value.ChangeListener printerStatusChangeListener -> printerStatusChangeListener
    javafx.beans.value.ChangeListener pauseStatusChangeListener -> pauseStatusChangeListener
    java.lang.String transferringDataString -> transferringDataString
    celtech.roboxbase.PrinterColourMap colourMap -> colourMap
    java.text.NumberFormat threeDPformatter -> threeDPformatter
    java.text.NumberFormat fiveDPformatter -> fiveDPformatter
    javafx.scene.layout.AnchorPane container -> container
    javafx.scene.layout.StackPane statusPane -> statusPane
    javafx.scene.image.ImageView baseNoReels -> baseNoReels
    javafx.scene.image.ImageView baseReel2 -> baseReel2
    javafx.scene.image.ImageView baseReel1 -> baseReel1
    javafx.scene.image.ImageView reel1Background -> reel1Background
    javafx.scene.effect.ColorAdjust reel1BackgroundColourEffect -> reel1BackgroundColourEffect
    javafx.scene.image.ImageView reel2Background -> reel2Background
    javafx.scene.effect.ColorAdjust reel2BackgroundColourEffect -> reel2BackgroundColourEffect
    javafx.scene.image.ImageView baseReelBoth -> baseReelBoth
    javafx.scene.image.ImageView doorClosed -> doorClosed
    javafx.scene.image.ImageView doorOpen -> doorOpen
    javafx.scene.image.ImageView singleMaterialHead -> singleMaterialHead
    javafx.scene.image.ImageView ambientLight -> ambientLight
    javafx.scene.effect.ColorAdjust ambientColourEffect -> ambientColourEffect
    javafx.scene.image.ImageView dualMaterialHead -> dualMaterialHead
    javafx.scene.image.ImageView bed -> bed
    javafx.scene.Group temperatureWarning -> temperatureWarning
    javafx.scene.layout.VBox extruder1Controls -> extruder1Controls
    javafx.scene.layout.VBox extruder2Controls -> extruder2Controls
    javafx.scene.layout.HBox xAxisControls -> xAxisControls
    javafx.scene.layout.VBox yAxisControls -> yAxisControls
    javafx.scene.layout.VBox zAxisControls -> zAxisControls
    javafx.scene.layout.VBox disconnectedText -> disconnectedText
    celtech.coreUI.components.HyperlinkedLabel disconnectedLinkedText -> disconnectedLinkedText
    javafx.scene.Node[] advancedControls -> advancedControls
    celtech.roboxbase.printerControl.model.Printer lastSelectedPrinter -> lastSelectedPrinter
    javafx.scene.layout.VBox vBoxLeft -> vBoxLeft
    javafx.scene.layout.VBox vBoxRight -> vBoxRight
    javafx.scene.layout.VBox gcodePanel -> gcodePanel
    javafx.scene.layout.VBox diagnosticPanel -> diagnosticPanel
    javafx.scene.layout.VBox projectPanel -> projectPanel
    javafx.scene.layout.VBox printAdjustmentsPanel -> printAdjustmentsPanel
    javafx.scene.layout.VBox parentPanel -> parentPanel
    javafx.beans.property.BooleanProperty selectedPrinterIsPrinting -> selectedPrinterIsPrinting
    javafx.beans.property.BooleanProperty projectPanelShouldBeVisible -> projectPanelShouldBeVisible
    javafx.beans.property.BooleanProperty projectPanelVisibility -> projectPanelVisibility
    javafx.collections.MapChangeListener effectiveFilamentListener -> effectiveFilamentListener
    javafx.beans.value.ChangeListener filamentLoadedListener -> filamentLoadedListener
    53:161:void <init>() -> <init>
    169:179:void jogButton(javafx.event.ActionEvent) -> jogButton
    183:194:void displayScaleChanged(celtech.coreUI.DisplayManager$DisplayScalingMode) -> displayScaleChanged
    205:330:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    334:396:void setupBaseDisplay() -> setupBaseDisplay
    400:404:void setColorAdjustFromDesiredColour(javafx.scene.effect.ColorAdjust,javafx.scene.paint.Color) -> setColorAdjustFromDesiredColour
    408:420:void setupReel1Colour() -> setupReel1Colour
    424:436:void setupReel2Colour() -> setupReel2Colour
    440:448:double hueConverter(double) -> hueConverter
    453:462:void setupAmbientLight() -> setupAmbientLight
    466:487:void setupHead() -> setupHead
    491:540:void setAdvancedControlsVisibility() -> setAdvancedControlsVisibility
    548:568:void configure(javafx.scene.layout.VBox) -> configure
    572:606:void resizePrinterDisplay(javafx.scene.layout.VBox) -> resizePrinterDisplay
    610:630:void unbindFromSelectedPrinter() -> unbindFromSelectedPrinter
    638:671:javafx.scene.layout.VBox loadInsetPanel(java.lang.String,java.lang.String,javafx.beans.property.BooleanProperty,javafx.beans.value.ObservableValue,javafx.scene.layout.VBox,int) -> loadInsetPanel
    676:692:void panelVisibilityAction(boolean,javafx.scene.layout.VBox,javafx.scene.layout.VBox,int) -> panelVisibilityAction
    697:712:javafx.scene.layout.VBox wrapPanelInOuterPanel(javafx.scene.Node,java.lang.String,javafx.beans.property.BooleanProperty) -> wrapPanelInOuterPanel
    717:753:void loadInsetPanels() -> loadInsetPanels
    758:758:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    763:763:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    768:769:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    774:775:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    780:781:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    786:787:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    792:793:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    798:798:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    803:803:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    742:743:void lambda$loadInsetPanels$9(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$loadInsetPanels$9
    734:735:void lambda$loadInsetPanels$8(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$loadInsetPanels$8
    727:728:void lambda$loadInsetPanels$7(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$loadInsetPanels$7
    619:620:void lambda$unbindFromSelectedPrinter$6(celtech.roboxbase.printerControl.model.Extruder) -> lambda$unbindFromSelectedPrinter$6
    235:236:void lambda$initialize$5(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.remote.PauseStatus,celtech.roboxbase.comms.remote.PauseStatus) -> lambda$initialize$5
    230:231:void lambda$initialize$4(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrinterStatus,celtech.roboxbase.printerControl.PrinterStatus) -> lambda$initialize$4
    225:226:void lambda$initialize$3(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color) -> lambda$initialize$3
    210:211:void lambda$initialize$2(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$initialize$2
    163:164:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$1
    158:159:void lambda$new$0(javafx.collections.MapChangeListener$Change) -> lambda$new$0
    53:53:celtech.roboxbase.printerControl.model.Printer access$002(celtech.coreUI.controllers.PrinterStatusPageController,celtech.roboxbase.printerControl.model.Printer) -> access$002
    53:53:void access$100(celtech.coreUI.controllers.PrinterStatusPageController) -> access$100
    53:53:void access$200(celtech.coreUI.controllers.PrinterStatusPageController) -> access$200
    53:53:void access$300(celtech.coreUI.controllers.PrinterStatusPageController) -> access$300
    53:53:javafx.scene.Group access$400(celtech.coreUI.controllers.PrinterStatusPageController) -> access$400
    53:53:javafx.beans.value.ChangeListener access$500(celtech.coreUI.controllers.PrinterStatusPageController) -> access$500
    53:53:javafx.beans.value.ChangeListener access$600(celtech.coreUI.controllers.PrinterStatusPageController) -> access$600
    53:53:javafx.beans.value.ChangeListener access$700(celtech.coreUI.controllers.PrinterStatusPageController) -> access$700
    53:53:javafx.scene.image.ImageView access$800(celtech.coreUI.controllers.PrinterStatusPageController) -> access$800
    53:53:javafx.scene.image.ImageView access$900(celtech.coreUI.controllers.PrinterStatusPageController) -> access$900
    53:53:javafx.collections.MapChangeListener access$1000(celtech.coreUI.controllers.PrinterStatusPageController) -> access$1000
    53:53:celtech.roboxbase.printerControl.model.Printer access$1102(celtech.coreUI.controllers.PrinterStatusPageController,celtech.roboxbase.printerControl.model.Printer) -> access$1102
    53:53:javafx.beans.value.ChangeListener access$1200(celtech.coreUI.controllers.PrinterStatusPageController) -> access$1200
    53:53:void access$1300(celtech.coreUI.controllers.PrinterStatusPageController,celtech.coreUI.DisplayManager$DisplayScalingMode) -> access$1300
    53:53:javafx.scene.layout.VBox access$1400(celtech.coreUI.controllers.PrinterStatusPageController) -> access$1400
    53:53:void access$1500(celtech.coreUI.controllers.PrinterStatusPageController,javafx.scene.layout.VBox) -> access$1500
    53:53:void access$1600(celtech.coreUI.controllers.PrinterStatusPageController,boolean,javafx.scene.layout.VBox,javafx.scene.layout.VBox,int) -> access$1600
celtech.coreUI.controllers.PrinterStatusPageController$1 -> celtech.coreUI.controllers.PrinterStatusPageController$1:
    celtech.coreUI.controllers.PrinterStatusPageController this$0 -> this$0
    264:264:void <init>(celtech.coreUI.controllers.PrinterStatusPageController) -> <init>
    269:312:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> changed
    264:264:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
    307:308:void lambda$changed$0(celtech.roboxbase.printerControl.model.Extruder) -> lambda$changed$0
celtech.coreUI.controllers.PrinterStatusPageController$2 -> celtech.coreUI.controllers.PrinterStatusPageController$2:
    celtech.coreUI.controllers.PrinterStatusPageController this$0 -> this$0
    320:320:void <init>(celtech.coreUI.controllers.PrinterStatusPageController) -> <init>
    325:326:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.DisplayManager$DisplayScalingMode,celtech.coreUI.DisplayManager$DisplayScalingMode) -> changed
    320:320:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.PrinterStatusPageController$3 -> celtech.coreUI.controllers.PrinterStatusPageController$3:
    celtech.coreUI.controllers.PrinterStatusPageController this$0 -> this$0
    551:551:void <init>(celtech.coreUI.controllers.PrinterStatusPageController) -> <init>
    556:557:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    551:551:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.PrinterStatusPageController$4 -> celtech.coreUI.controllers.PrinterStatusPageController$4:
    celtech.coreUI.controllers.PrinterStatusPageController this$0 -> this$0
    560:560:void <init>(celtech.coreUI.controllers.PrinterStatusPageController) -> <init>
    565:566:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    560:560:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.PrinterStatusPageController$5 -> celtech.coreUI.controllers.PrinterStatusPageController$5:
    javafx.scene.layout.VBox val$panelToChangeHeightOf -> val$panelToChangeHeightOf
    javafx.scene.layout.VBox val$parentPanel -> val$parentPanel
    int val$position -> val$position
    celtech.coreUI.controllers.PrinterStatusPageController this$0 -> this$0
    656:656:void <init>(celtech.coreUI.controllers.PrinterStatusPageController,javafx.scene.layout.VBox,javafx.scene.layout.VBox,int) -> <init>
    660:661:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    656:656:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.PrinterStatusPageController$6 -> celtech.coreUI.controllers.PrinterStatusPageController$6:
    int[] $SwitchMap$celtech$coreUI$DisplayManager$DisplayScalingMode -> $SwitchMap$celtech$coreUI$DisplayManager$DisplayScalingMode
    int[] $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus -> $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus
    int[] $SwitchMap$celtech$roboxbase$comms$remote$PauseStatus -> $SwitchMap$celtech$roboxbase$comms$remote$PauseStatus
    183:510:void <clinit>() -> <clinit>
celtech.coreUI.controllers.ProgressDialogController -> celtech.coreUI.controllers.ProgressDialogController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.StackPane progressDialog -> progressDialog
    javafx.scene.control.ProgressBar progressBar -> progressBar
    javafx.scene.control.Label progressTitle -> progressTitle
    javafx.scene.control.Label progressMessage -> progressMessage
    javafx.scene.control.Label progressPercent -> progressPercent
    javafx.scene.control.Button progressCancel -> progressCancel
    celtech.roboxbase.services.ControllableService serviceBeingMonitored -> serviceBeingMonitored
    javafx.beans.value.ChangeListener registeredListener -> registeredListener
    javafx.stage.Stage stage -> stage
    28:49:void <init>() -> <init>
    60:61:void cancelOperation(javafx.scene.input.MouseEvent) -> cancelOperation
    70:122:void configure(celtech.roboxbase.services.ControllableService,javafx.stage.Stage) -> configure
    129:141:void rebind() -> rebind
    152:157:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
celtech.coreUI.controllers.ProgressDialogController$1 -> celtech.coreUI.controllers.ProgressDialogController$1:
    javafx.stage.Stage val$stage -> val$stage
    celtech.coreUI.controllers.ProgressDialogController this$0 -> this$0
    89:89:void <init>(celtech.coreUI.controllers.ProgressDialogController,javafx.stage.Stage) -> <init>
    93:102:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    89:89:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.ProgressDialogController$2 -> celtech.coreUI.controllers.ProgressDialogController$2:
    javafx.stage.Stage val$stage -> val$stage
    celtech.coreUI.controllers.ProgressDialogController this$0 -> this$0
    108:108:void <init>(celtech.coreUI.controllers.ProgressDialogController,javafx.stage.Stage) -> <init>
    112:118:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    108:108:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.ProjectAwareController -> celtech.coreUI.controllers.ProjectAwareController:
    void setProject(celtech.appManager.Project) -> setProject
    void shutdownController() -> shutdownController
celtech.coreUI.controllers.SlidablePanel -> celtech.coreUI.controllers.SlidablePanel:
    void slideIn() -> slideIn
celtech.coreUI.controllers.SlideOutHandleController -> celtech.coreUI.controllers.SlideOutHandleController:
    javafx.scene.layout.VBox handleContainer -> handleContainer
    javafx.scene.control.Button handle -> handle
    javafx.scene.layout.HBox paneToSlide -> paneToSlide
    double handleWidth -> handleWidth
    javafx.animation.Animation hideSidebar -> hideSidebar
    javafx.animation.Animation showSidebar -> showSidebar
    boolean slidIn -> slidIn
    boolean sliding -> sliding
    double panelWidth -> panelWidth
    int delayTime -> delayTime
    37:38:void toggleSlide(javafx.event.ActionEvent) -> toggleSlide
    40:99:void <init>() -> <init>
    103:111:void setup() -> setup
    118:126:void toggleSlide() -> toggleSlide
    133:136:void slideIn() -> slideIn
    144:147:void slideMenuPanel(double) -> slideMenuPanel
    155:162:boolean startSlidingOut() -> startSlidingOut
    172:181:boolean startSlidingIn() -> startSlidingIn
    191:191:boolean isSlidIn() -> isSlidIn
    197:197:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    25:25:int access$000(celtech.coreUI.controllers.SlideOutHandleController) -> access$000
    25:25:boolean access$102(celtech.coreUI.controllers.SlideOutHandleController,boolean) -> access$102
celtech.coreUI.controllers.SlideOutHandleController$1 -> celtech.coreUI.controllers.SlideOutHandleController$1:
    celtech.coreUI.controllers.SlideOutHandleController this$0 -> this$0
    56:59:void <init>(celtech.coreUI.controllers.SlideOutHandleController) -> <init>
    64:65:void interpolate(double) -> interpolate
celtech.coreUI.controllers.SlideOutHandleController$2 -> celtech.coreUI.controllers.SlideOutHandleController$2:
    celtech.coreUI.controllers.SlideOutHandleController this$0 -> this$0
    69:69:void <init>(celtech.coreUI.controllers.SlideOutHandleController) -> <init>
    73:74:void handle(javafx.event.ActionEvent) -> handle
    69:69:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.SlideOutHandleController$3 -> celtech.coreUI.controllers.SlideOutHandleController$3:
    celtech.coreUI.controllers.SlideOutHandleController this$0 -> this$0
    79:82:void <init>(celtech.coreUI.controllers.SlideOutHandleController) -> <init>
    87:88:void interpolate(double) -> interpolate
celtech.coreUI.controllers.SlideOutHandleController$4 -> celtech.coreUI.controllers.SlideOutHandleController$4:
    celtech.coreUI.controllers.SlideOutHandleController this$0 -> this$0
    92:92:void <init>(celtech.coreUI.controllers.SlideOutHandleController) -> <init>
    96:97:void handle(javafx.event.ActionEvent) -> handle
    92:92:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.SlidingElementController -> celtech.coreUI.controllers.SlidingElementController:
    javafx.animation.Animation hideSidebar -> hideSidebar
    javafx.animation.Animation showSidebar -> showSidebar
    boolean hidden -> hidden
    double minimumToShow -> minimumToShow
    double maximumToShow -> maximumToShow
    boolean slidIn -> slidIn
    celtech.coreUI.components.SlidingComponentDirection directionToSlide -> directionToSlide
    double panelWidth -> panelWidth
    double panelHeight -> panelHeight
    double panelLayoutMinX -> panelLayoutMinX
    double panelLayoutMinY -> panelLayoutMinY
    javafx.scene.shape.Rectangle clippingRectangle -> clippingRectangle
    javafx.scene.layout.Pane paneToSlide -> paneToSlide
    22:71:void <init>() -> <init>
    80:82:void configurePanel(javafx.scene.layout.Pane,celtech.coreUI.components.SlidingComponentDirection) -> configurePanel
    89:96:void toggleSlide() -> toggleSlide
    103:105:void slideIn() -> slideIn
    112:114:void slideOut() -> slideOut
    122:182:void slideMenuPanel(double) -> slideMenuPanel
    190:190:boolean isHidden() -> isHidden
    199:200:boolean isSliding() -> isSliding
    209:216:boolean startSlidingOut() -> startSlidingOut
    226:233:boolean startSlidingIn() -> startSlidingIn
    243:243:boolean isSlidIn() -> isSlidIn
    255:259:void setDimensions(double,double,double,double) -> setDimensions
celtech.coreUI.controllers.SlidingElementController$1 -> celtech.coreUI.controllers.SlidingElementController$1:
    celtech.coreUI.controllers.SlidingElementController this$0 -> this$0
    42:47:void <init>(celtech.coreUI.controllers.SlidingElementController) -> <init>
    52:53:void interpolate(double) -> interpolate
celtech.coreUI.controllers.SlidingElementController$2 -> celtech.coreUI.controllers.SlidingElementController$2:
    celtech.coreUI.controllers.SlidingElementController this$0 -> this$0
    58:63:void <init>(celtech.coreUI.controllers.SlidingElementController) -> <init>
    68:69:void interpolate(double) -> interpolate
celtech.coreUI.controllers.StatusInsetController -> celtech.coreUI.controllers.StatusInsetController:
celtech.coreUI.controllers.panels.AboutPanelController -> celtech.coreUI.controllers.panels.AboutPanelController:
    javafx.scene.input.Clipboard clipboard -> clipboard
    javafx.scene.input.ClipboardContent content -> content
    javafx.scene.control.Label roboxSerialNumber -> roboxSerialNumber
    javafx.scene.control.Label headSerialNumber -> headSerialNumber
    javafx.scene.control.Label version -> version
    javafx.scene.control.Label infoLabel -> infoLabel
    javafx.scene.text.Text bdLabel -> bdLabel
    javafx.scene.text.Text bdNames -> bdNames
    javafx.scene.text.Text hwengLabel -> hwengLabel
    javafx.scene.text.Text hwengNames -> hwengNames
    javafx.scene.text.Text swengLabel -> swengLabel
    javafx.scene.text.Text swengNames -> swengNames
    javafx.scene.text.Text amTitleText1 -> amTitleText1
    javafx.scene.text.Text amTitleText2 -> amTitleText2
    javafx.scene.text.Text amTitleText3 -> amTitleText3
    javafx.scene.layout.VBox logoBox -> logoBox
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    31:79:void <init>() -> <init>
    84:85:void viewREADME(javafx.event.ActionEvent) -> viewREADME
    90:91:void okPressed(javafx.event.ActionEvent) -> okPressed
    96:98:void copyPrinterSerialNumber(javafx.event.ActionEvent) -> copyPrinterSerialNumber
    103:105:void copyHeadSerialNumber(javafx.event.ActionEvent) -> copyHeadSerialNumber
    110:111:void systemInformationPressed(javafx.event.ActionEvent) -> systemInformationPressed
    116:171:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    176:193:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    198:200:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    205:206:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    211:212:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    217:217:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    222:222:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    227:227:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    232:232:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    237:237:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    31:31:javafx.scene.control.Label access$000(celtech.coreUI.controllers.panels.AboutPanelController) -> access$000
    31:31:javafx.scene.text.Text access$100(celtech.coreUI.controllers.panels.AboutPanelController) -> access$100
    31:31:javafx.scene.text.Text access$200(celtech.coreUI.controllers.panels.AboutPanelController) -> access$200
    31:31:javafx.scene.text.Text access$300(celtech.coreUI.controllers.panels.AboutPanelController) -> access$300
    31:31:javafx.scene.text.Text access$400(celtech.coreUI.controllers.panels.AboutPanelController) -> access$400
    31:31:javafx.scene.text.Text access$500(celtech.coreUI.controllers.panels.AboutPanelController) -> access$500
    31:31:javafx.scene.text.Text access$600(celtech.coreUI.controllers.panels.AboutPanelController) -> access$600
    31:31:javafx.scene.text.Text access$700(celtech.coreUI.controllers.panels.AboutPanelController) -> access$700
    31:31:javafx.scene.text.Text access$800(celtech.coreUI.controllers.panels.AboutPanelController) -> access$800
    31:31:javafx.scene.text.Text access$900(celtech.coreUI.controllers.panels.AboutPanelController) -> access$900
    31:31:javafx.scene.layout.VBox access$1000(celtech.coreUI.controllers.panels.AboutPanelController) -> access$1000
    31:31:celtech.roboxbase.printerControl.model.Printer access$1100(celtech.coreUI.controllers.panels.AboutPanelController) -> access$1100
    31:31:javafx.scene.control.Label access$1200(celtech.coreUI.controllers.panels.AboutPanelController) -> access$1200
celtech.coreUI.controllers.panels.AboutPanelController$1 -> celtech.coreUI.controllers.panels.AboutPanelController$1:
    celtech.coreUI.controllers.panels.AboutPanelController this$0 -> this$0
    120:120:void <init>(celtech.coreUI.controllers.panels.AboutPanelController) -> <init>
    124:156:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.DisplayManager$DisplayScalingMode,celtech.coreUI.DisplayManager$DisplayScalingMode) -> changed
    120:120:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.AboutPanelController$2 -> celtech.coreUI.controllers.panels.AboutPanelController$2:
    celtech.coreUI.controllers.panels.AboutPanelController this$0 -> this$0
    160:160:void <init>(celtech.coreUI.controllers.panels.AboutPanelController) -> <init>
    164:169:void changed(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> changed
    160:160:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.AboutPanelController$3 -> celtech.coreUI.controllers.panels.AboutPanelController$3:
    int[] $SwitchMap$celtech$coreUI$DisplayManager$DisplayScalingMode -> $SwitchMap$celtech$coreUI$DisplayManager$DisplayScalingMode
    124:124:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ButtonBox -> celtech.coreUI.controllers.panels.ButtonBox:
    27:35:void <init>(javafx.beans.property.ReadOnlyObjectProperty) -> <init>
    42:63:void setupButtonsForInnerPanel(celtech.coreUI.controllers.panels.MenuInnerPanel) -> setupButtonsForInnerPanel
    56:57:void lambda$setupButtonsForInnerPanel$1(celtech.coreUI.controllers.panels.MenuInnerPanel$OperationButton,javafx.event.ActionEvent) -> lambda$setupButtonsForInnerPanel$1
    32:33:void lambda$new$0(javafx.beans.value.ObservableValue,celtech.coreUI.controllers.panels.MenuInnerPanel,celtech.coreUI.controllers.panels.MenuInnerPanel) -> lambda$new$0
celtech.coreUI.controllers.panels.CalibrationInsetPanelController -> celtech.coreUI.controllers.panels.CalibrationInsetPanelController:
    celtech.coreUI.controllers.panels.CalibrationMenuConfiguration calibrationMenuConfiguration -> calibrationMenuConfiguration
    celtech.coreUI.controllers.panels.CalibrationMode calibrationMode -> calibrationMode
    celtech.coreUI.controllers.panels.CalibrationXAndYGUI calibrationXAndYGUI -> calibrationXAndYGUI
    celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI calibrationNozzleHeightGUI -> calibrationNozzleHeightGUI
    celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI calibrationNozzleOpeningGUI -> calibrationNozzleOpeningGUI
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager stateManager -> stateManager
    celtech.coreUI.SpinnerControl spinnerControl -> spinnerControl
    celtech.appManager.ApplicationStatus applicationStatus -> applicationStatus
    java.util.ResourceBundle resources -> resources
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.components.VerticalMenu calibrationMenu -> calibrationMenu
    javafx.scene.layout.StackPane calibrateBottomMenu -> calibrateBottomMenu
    javafx.scene.layout.Pane calibrationBottomArea -> calibrationBottomArea
    javafx.scene.layout.Pane altButtonContainer -> altButtonContainer
    javafx.scene.text.Text stepNumber -> stepNumber
    javafx.scene.control.Button buttonA -> buttonA
    javafx.scene.control.Button buttonB -> buttonB
    celtech.coreUI.components.buttons.GraphicButtonWithLabel nextButton -> nextButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel retryPrintButton -> retryPrintButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel backToStatus -> backToStatus
    celtech.coreUI.components.buttons.GraphicButtonWithLabel startCalibrationButton -> startCalibrationButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel cancelCalibrationButton -> cancelCalibrationButton
    javafx.scene.control.Label calibrationStatus -> calibrationStatus
    javafx.scene.layout.VBox informationCentre -> informationCentre
    javafx.scene.layout.BorderPane topBorderPane -> topBorderPane
    javafx.scene.layout.VBox topPane -> topPane
    javafx.scene.layout.VBox diagramContainer -> diagramContainer
    javafx.scene.layout.HBox topMenuStrip -> topMenuStrip
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.scene.layout.Pane diagramNode -> diagramNode
    celtech.coreUI.controllers.panels.DiagramController diagramController -> diagramController
    java.util.Map nodeToBoundsCache -> nodeToBoundsCache
    boolean backToStatusInhibitWhenAtTop -> backToStatusInhibitWhenAtTop
    javafx.scene.shape.Line lineToAnimate -> lineToAnimate
    double originalAnimatedLineLength -> originalAnimatedLineLength
    javafx.animation.Transition animatedFilamentTransition -> animatedFilamentTransition
    celtech.coreUI.components.Notifications.ConditionalNotificationBar oneExtruderNoFilamentSelectedNotificationBar -> oneExtruderNoFilamentSelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar oneExtruderNoFilamentNotificationBar -> oneExtruderNoFilamentNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament1SelectedNotificationBar -> twoExtrudersNoFilament1SelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament1NotificationBar -> twoExtrudersNoFilament1NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament2SelectedNotificationBar -> twoExtrudersNoFilament2SelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament2NotificationBar -> twoExtrudersNoFilament2NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantCalibrateHeadIsDetachedNotificationBar -> cantCalibrateHeadIsDetachedNotificationBar
    80:84:void resizeTopBorderPane() -> resizeTopBorderPane
    88:90:void resetMenuAndGoToChoiceMode() -> resetMenuAndGoToChoiceMode
    187:188:void buttonAAction(javafx.event.ActionEvent) -> buttonAAction
    193:194:void buttonBAction(javafx.event.ActionEvent) -> buttonBAction
    199:200:void nextButtonAction(javafx.event.ActionEvent) -> nextButtonAction
    205:215:void backToStatusAction(javafx.event.ActionEvent) -> backToStatusAction
    220:221:void startCalibration(javafx.event.ActionEvent) -> startCalibration
    228:233:void cancelCalibration(javafx.event.ActionEvent) -> cancelCalibration
    238:239:void retryCalibration(javafx.event.ActionEvent) -> retryCalibration
    243:257:void hideAllInputControlsExceptStepNumber() -> hideAllInputControlsExceptStepNumber
    74:262:void <init>() -> <init>
    74:269:void <init>(boolean,boolean,boolean) -> <init>
    274:299:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    303:327:void addDiagramMoveScaleListeners() -> addDiagramMoveScaleListeners
    331:362:void resizeDiagram() -> resizeDiagram
    372:396:javafx.scene.Node getDiagramNode(java.net.URL) -> getDiagramNode
    402:408:javafx.geometry.Bounds getBoundsOfNotYetDisplayedNode(javafx.scene.layout.Pane) -> getBoundsOfNotYetDisplayedNode
    413:425:void showDiagram(java.net.URL) -> showDiagram
    429:434:void switchToPrinter(celtech.roboxbase.printerControl.model.Printer) -> switchToPrinter
    438:439:void bindPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindPrinter
    443:501:void configureStartButtonForMode(celtech.coreUI.controllers.panels.CalibrationMode,celtech.roboxbase.printerControl.model.Printer) -> configureStartButtonForMode
    505:558:void setCalibrationMode(celtech.coreUI.controllers.panels.CalibrationMode) -> setCalibrationMode
    562:574:void setupChoice() -> setupChoice
    578:582:void showSpinner() -> showSpinner
    586:590:void hideSpinner() -> hideSpinner
    594:599:void hideCommonBordersAndBackButton() -> hideCommonBordersAndBackButton
    604:604:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    609:614:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    619:623:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    628:632:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    637:637:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    642:642:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    647:647:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    652:652:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    657:657:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    324:325:void lambda$addDiagramMoveScaleListeners$3(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$3
    318:319:void lambda$addDiagramMoveScaleListeners$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$2
    312:313:void lambda$addDiagramMoveScaleListeners$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$1
    306:307:void lambda$addDiagramMoveScaleListeners$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$0
    63:63:double access$000(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> access$000
    63:63:javafx.scene.shape.Line access$100(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> access$100
celtech.coreUI.controllers.panels.CalibrationInsetPanelController$1 -> celtech.coreUI.controllers.panels.CalibrationInsetPanelController$1:
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController this$0 -> this$0
    163:166:void <init>(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> <init>
    171:172:void interpolate(double) -> interpolate
celtech.coreUI.controllers.panels.CalibrationInsetPanelController$2 -> celtech.coreUI.controllers.panels.CalibrationInsetPanelController$2:
    int[] $SwitchMap$celtech$coreUI$controllers$panels$CalibrationMode -> $SwitchMap$celtech$coreUI$controllers$panels$CalibrationMode
    485:485:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility -> celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility:
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility TEMP -> TEMP
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility PRINT -> PRINT
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility NONE -> NONE
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility[] $VALUES -> $VALUES
    92:92:celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility[] values() -> values
    92:92:celtech.coreUI.controllers.panels.CalibrationInsetPanelController$ProgressVisibility valueOf(java.lang.String) -> valueOf
    92:92:void <init>(java.lang.String,int) -> <init>
    92:95:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.CalibrationMenuConfiguration -> celtech.coreUI.controllers.panels.CalibrationMenuConfiguration:
    javafx.beans.property.BooleanProperty nozzleOpeningCalibrationEnabled -> nozzleOpeningCalibrationEnabled
    javafx.beans.property.BooleanProperty nozzleHeightCalibrationEnabled -> nozzleHeightCalibrationEnabled
    javafx.beans.property.BooleanProperty xyAlignmentCalibrationEnabled -> xyAlignmentCalibrationEnabled
    boolean displayOpening -> displayOpening
    boolean displayHeight -> displayHeight
    boolean displayAlignment -> displayAlignment
    celtech.roboxbase.printerControl.model.Printer currentlySelectedPrinter -> currentlySelectedPrinter
    javafx.beans.value.ChangeListener selectedPrinterListener -> selectedPrinterListener
    22:93:void <init>(boolean,boolean,boolean) -> <init>
    45:91:void configureCalibrationMenu(celtech.coreUI.components.VerticalMenu,celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> configureCalibrationMenu
    95:105:void lambda$new$3(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$new$3
    83:85:void lambda$configureCalibrationMenu$2(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> lambda$configureCalibrationMenu$2
    72:74:void lambda$configureCalibrationMenu$1(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> lambda$configureCalibrationMenu$1
    61:63:void lambda$configureCalibrationMenu$0(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> lambda$configureCalibrationMenu$0
celtech.coreUI.controllers.panels.CalibrationMode -> celtech.coreUI.controllers.panels.CalibrationMode:
    celtech.coreUI.controllers.panels.CalibrationMode CHOICE -> CHOICE
    celtech.coreUI.controllers.panels.CalibrationMode NOZZLE_OPENING -> NOZZLE_OPENING
    celtech.coreUI.controllers.panels.CalibrationMode NOZZLE_HEIGHT -> NOZZLE_HEIGHT
    celtech.coreUI.controllers.panels.CalibrationMode NOZZLE_OFFSETS -> NOZZLE_OFFSETS
    celtech.coreUI.controllers.panels.CalibrationMode X_AND_Y_OFFSET -> X_AND_Y_OFFSET
    celtech.coreUI.controllers.panels.CalibrationMode[] $VALUES -> $VALUES
    10:10:celtech.coreUI.controllers.panels.CalibrationMode[] values() -> values
    10:10:celtech.coreUI.controllers.panels.CalibrationMode valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    10:12:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI -> celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController controller -> controller
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager stateManager -> stateManager
    java.util.Map namesToButtons -> namesToButtons
    28:50:void <init>(celtech.coreUI.controllers.panels.CalibrationInsetPanelController,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager) -> <init>
    54:66:void showAppropriateButtons(celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState) -> showAppropriateButtons
    70:127:void setState(celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState) -> setState
    131:137:void populateNamesToButtons(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> populateNamesToButtons
celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI$1 -> celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI$1:
    celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI this$0 -> this$0
    42:42:void <init>(celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI) -> <init>
    46:47:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI$2 -> celtech.coreUI.controllers.panels.CalibrationNozzleHeightGUI$2:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$NozzleHeightCalibrationState -> $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$NozzleHeightCalibrationState
    82:82:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI -> celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController controller -> controller
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager stateManager -> stateManager
    java.util.Map namesToButtons -> namesToButtons
    28:51:void <init>(celtech.coreUI.controllers.panels.CalibrationInsetPanelController,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager) -> <init>
    55:67:void showAppropriateButtons(celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState) -> showAppropriateButtons
    71:145:void setState(celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState) -> setState
    149:155:void populateNamesToButtons(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> populateNamesToButtons
celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI$1 -> celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI$1:
    celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI this$0 -> this$0
    42:42:void <init>(celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI) -> <init>
    47:48:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI$2 -> celtech.coreUI.controllers.panels.CalibrationNozzleOpeningGUI$2:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$NozzleOpeningCalibrationState -> $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$NozzleOpeningCalibrationState
    83:83:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.CalibrationXAndYGUI -> celtech.coreUI.controllers.panels.CalibrationXAndYGUI:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.controllers.panels.CalibrationInsetPanelController controller -> controller
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager stateManager -> stateManager
    java.util.Map namesToButtons -> namesToButtons
    28:51:void <init>(celtech.coreUI.controllers.panels.CalibrationInsetPanelController,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager) -> <init>
    55:67:void showAppropriateButtons(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState) -> showAppropriateButtons
    71:118:void setState(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState) -> setState
    122:128:void populateNamesToButtons(celtech.coreUI.controllers.panels.CalibrationInsetPanelController) -> populateNamesToButtons
celtech.coreUI.controllers.panels.CalibrationXAndYGUI$1 -> celtech.coreUI.controllers.panels.CalibrationXAndYGUI$1:
    celtech.coreUI.controllers.panels.CalibrationXAndYGUI this$0 -> this$0
    42:42:void <init>(celtech.coreUI.controllers.panels.CalibrationXAndYGUI) -> <init>
    47:48:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.CalibrationXAndYGUI$2 -> celtech.coreUI.controllers.panels.CalibrationXAndYGUI$2:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$CalibrationXAndYState -> $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$calibration$CalibrationXAndYState
    83:83:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ChartManager -> celtech.coreUI.controllers.panels.ChartManager:
    javafx.scene.chart.LineChart chart -> chart
    javafx.scene.chart.XYChart$Series ambientData -> ambientData
    javafx.scene.chart.XYChart$Series bedData -> bedData
    javafx.scene.chart.XYChart$Series ambientTargetTemperatureSeries -> ambientTargetTemperatureSeries
    javafx.scene.chart.XYChart$Series bedTargetTemperatureSeries -> bedTargetTemperatureSeries
    javafx.scene.chart.XYChart$Data ambientTargetPoint -> ambientTargetPoint
    javafx.scene.chart.XYChart$Data bedTargetPoint -> bedTargetPoint
    javafx.beans.property.ReadOnlyIntegerProperty bedTargetTemperatureProperty -> bedTargetTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty bedFirstLayerTargetTemperatureProperty -> bedFirstLayerTargetTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty ambientTargetTemperatureProperty -> ambientTargetTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty bedTemperatureProperty -> bedTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty ambientTemperatureProperty -> ambientTemperatureProperty
    javafx.beans.property.ReadOnlyObjectProperty bedHeaterModeProperty -> bedHeaterModeProperty
    javafx.scene.control.Label legendBed -> legendBed
    javafx.scene.control.Label legendAmbient -> legendAmbient
    java.util.List nozzleChartDataSets -> nozzleChartDataSets
    int nozzleTargetTempFirstIndex -> nozzleTargetTempFirstIndex
    int ambientIndexOffset -> ambientIndexOffset
    int bedIndexOffset -> bedIndexOffset
    int firstNozzleIndexOffset -> firstNozzleIndexOffset
    java.lang.String ambientBugColour -> ambientBugColour
    java.lang.String bedBugColour -> bedBugColour
    java.util.List nozzleBugColour -> nozzleBugColour
    java.lang.String ambientLineColour -> ambientLineColour
    java.lang.String bedLineColour -> bedLineColour
    java.util.List nozzleLineColour -> nozzleLineColour
    java.lang.String rhTriangleBugCSS -> rhTriangleBugCSS
    java.lang.String rhTriangleBugUpperOnlyCSS -> rhTriangleBugUpperOnlyCSS
    java.lang.String rhTriangleBugLowerOnlyCSS -> rhTriangleBugLowerOnlyCSS
    java.lang.String graphLineCSS -> graphLineCSS
    java.lang.String graphLineFatCSS -> graphLineFatCSS
    java.lang.String graphLineThinCSS -> graphLineThinCSS
    int dashedLineCounter -> dashedLineCounter
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.beans.value.ChangeListener ambientTargetTemperatureListener -> ambientTargetTemperatureListener
    javafx.beans.value.ChangeListener bedTargetTemperatureListener -> bedTargetTemperatureListener
    javafx.beans.value.ChangeListener bedFirstLayerTargetTemperatureListener -> bedFirstLayerTargetTemperatureListener
    javafx.beans.value.ChangeListener bedHeaterModeListener -> bedHeaterModeListener
    javafx.beans.InvalidationListener bedTemperatureListener -> bedTemperatureListener
    javafx.beans.InvalidationListener ambientTemperatureListener -> ambientTemperatureListener
    37:436:void <init>(javafx.scene.chart.LineChart) -> <init>
    113:128:void bindPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindPrinter
    132:135:void unbindPrinter() -> unbindPrinter
    139:141:void setAmbientData(javafx.scene.chart.XYChart$Series) -> setAmbientData
    145:147:void setBedData(javafx.scene.chart.XYChart$Series) -> setBedData
    154:228:void updateChartDataSources() -> updateChartDataSources
    232:250:void setupBug(int,javafx.scene.chart.XYChart$Series,java.lang.String,celtech.coreUI.controllers.panels.ChartManager$BugType) -> setupBug
    255:283:void setupChartLine(int,javafx.scene.chart.XYChart$Series,java.lang.String,boolean) -> setupChartLine
    287:289:void clearBedData() -> clearBedData
    293:295:void clearAmbientData() -> clearAmbientData
    305:312:void setTargetAmbientTemperatureProperty(javafx.beans.property.ReadOnlyIntegerProperty) -> setTargetAmbientTemperatureProperty
    322:330:void setTargetBedTemperatureProperty(javafx.beans.property.ReadOnlyIntegerProperty) -> setTargetBedTemperatureProperty
    340:348:void setTargetBedFirstLayerTemperatureProperty(javafx.beans.property.ReadOnlyIntegerProperty) -> setTargetBedFirstLayerTemperatureProperty
    357:364:void setBedHeaterModeProperty(javafx.beans.property.ReadOnlyObjectProperty) -> setBedHeaterModeProperty
    368:378:void updateBedTargetPoint() -> updateBedTargetPoint
    382:385:void setLegendLabels(javafx.scene.control.Label,javafx.scene.control.Label) -> setLegendLabels
    389:392:void clearLegendLabels() -> clearLegendLabels
    396:418:void updateLegend() -> updateLegend
    427:434:void setBedTemperatureProperty(javafx.beans.property.ReadOnlyIntegerProperty) -> setBedTemperatureProperty
    443:450:void setAmbientTemperatureProperty(javafx.beans.property.ReadOnlyIntegerProperty) -> setAmbientTemperatureProperty
    458:467:void addNozzle(int,javafx.scene.chart.XYChart$Series,javafx.beans.property.ReadOnlyObjectProperty,javafx.beans.property.ReadOnlyIntegerProperty,javafx.beans.property.ReadOnlyIntegerProperty,javafx.beans.property.ReadOnlyIntegerProperty) -> addNozzle
    471:475:void removeNozzle(int) -> removeNozzle
    479:487:void removeAllNozzles() -> removeAllNozzles
    481:482:void lambda$removeAllNozzles$8(celtech.coreUI.controllers.panels.NozzleChartData) -> lambda$removeAllNozzles$8
    438:439:void lambda$new$7(javafx.beans.Observable) -> lambda$new$7
    422:423:void lambda$new$6(javafx.beans.Observable) -> lambda$new$6
    352:353:void lambda$new$5(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.HeaterMode,celtech.roboxbase.printerControl.model.HeaterMode) -> lambda$new$5
    334:335:void lambda$new$4(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$4
    316:317:void lambda$new$3(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$3
    299:300:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$2
    261:262:void lambda$setupChartLine$1(javafx.scene.Node) -> lambda$setupChartLine$1
    237:249:void lambda$setupBug$0(celtech.coreUI.controllers.panels.ChartManager$BugType,java.lang.String,javafx.scene.Node) -> lambda$setupBug$0
celtech.coreUI.controllers.panels.ChartManager$1 -> celtech.coreUI.controllers.panels.ChartManager$1:
    int[] $SwitchMap$celtech$coreUI$controllers$panels$ChartManager$BugType -> $SwitchMap$celtech$coreUI$controllers$panels$ChartManager$BugType
    237:237:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ChartManager$BugType -> celtech.coreUI.controllers.panels.ChartManager$BugType:
    celtech.coreUI.controllers.panels.ChartManager$BugType ALL -> ALL
    celtech.coreUI.controllers.panels.ChartManager$BugType UPPER -> UPPER
    celtech.coreUI.controllers.panels.ChartManager$BugType LOWER -> LOWER
    celtech.coreUI.controllers.panels.ChartManager$BugType[] $VALUES -> $VALUES
    91:91:celtech.coreUI.controllers.panels.ChartManager$BugType[] values() -> values
    91:91:celtech.coreUI.controllers.panels.ChartManager$BugType valueOf(java.lang.String) -> valueOf
    91:91:void <init>(java.lang.String,int) -> <init>
    91:94:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.DiagramController -> celtech.coreUI.controllers.panels.DiagramController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager stateTransitionManager -> stateTransitionManager
    javafx.scene.control.TextField xOffsetA -> xOffsetA
    javafx.scene.control.TextField yOffsetA -> yOffsetA
    javafx.scene.control.ComboBox cmbYOffset -> cmbYOffset
    javafx.scene.control.ComboBox cmbXOffset -> cmbXOffset
    javafx.scene.control.TextField calibrationTextField -> calibrationTextField
    javafx.scene.control.TextField fineNozzleLbl -> fineNozzleLbl
    javafx.scene.control.TextField fillNozzleLbl -> fillNozzleLbl
    javafx.scene.control.TextField BPosition -> BPosition
    javafx.scene.layout.HBox xOffsetComboContainer -> xOffsetComboContainer
    javafx.scene.layout.VBox yOffsetComboContainer -> yOffsetComboContainer
    javafx.scene.layout.HBox yOffsetContainerB -> yOffsetContainerB
    javafx.scene.layout.HBox yOffsetContainerC -> yOffsetContainerC
    javafx.scene.layout.HBox xOffsetContainerB -> xOffsetContainerB
    javafx.scene.layout.HBox xOffsetContainerC -> xOffsetContainerC
    javafx.scene.layout.HBox perfectAlignmentContainer -> perfectAlignmentContainer
    javafx.scene.layout.HBox incorrectAlignmentContainer -> incorrectAlignmentContainer
    javafx.scene.control.Button buttonA -> buttonA
    javafx.beans.value.ChangeListener zcoListener -> zcoListener
    javafx.beans.value.ChangeListener bPositionListener -> bPositionListener
    32:158:void <init>() -> <init>
    93:115:void setStateTransitionManager(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager) -> setStateTransitionManager
    120:121:void buttonAAction(javafx.event.ActionEvent) -> buttonAAction
    126:127:void buttonBAction(javafx.event.ActionEvent) -> buttonBAction
    132:133:void upButtonAction(javafx.event.ActionEvent) -> upButtonAction
    138:139:void downButtonAction(javafx.event.ActionEvent) -> downButtonAction
    168:175:void setupZCoListener(javafx.beans.property.ReadOnlyDoubleProperty) -> setupZCoListener
    179:186:void setupBPositionListener(javafx.beans.property.ReadOnlyFloatProperty) -> setupBPositionListener
    191:192:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    196:247:void setupOffsetCombos() -> setupOffsetCombos
    251:290:void setScale(double,javafx.scene.Node) -> setScale
    234:239:void lambda$setupOffsetCombos$3(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> lambda$setupOffsetCombos$3
    224:229:void lambda$setupOffsetCombos$2(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> lambda$setupOffsetCombos$2
    160:164:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$1
    143:156:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
celtech.coreUI.controllers.panels.DiagramHandler -> celtech.coreUI.controllers.panels.DiagramHandler:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.geometry.Bounds diagramBounds -> diagramBounds
    javafx.scene.layout.Pane diagramNode -> diagramNode
    javafx.scene.layout.VBox diagramContainer -> diagramContainer
    java.util.ResourceBundle resources -> resources
    28:40:void <init>(javafx.scene.layout.VBox,java.util.ResourceBundle) -> <init>
    45:57:void addDiagramMoveScaleListeners() -> addDiagramMoveScaleListeners
    61:67:javafx.geometry.Bounds getBoundsOfNotYetDisplayedNode(javafx.scene.layout.Pane) -> getBoundsOfNotYetDisplayedNode
    72:86:void loadDiagram() -> loadDiagram
    90:114:void resizeDiagram() -> resizeDiagram
    118:121:void initialise() -> initialise
    54:55:void lambda$addDiagramMoveScaleListeners$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$1
    48:49:void lambda$addDiagramMoveScaleListeners$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$addDiagramMoveScaleListeners$0
celtech.coreUI.controllers.panels.ExtrasMenuPanelController -> celtech.coreUI.controllers.panels.ExtrasMenuPanelController:
    13:15:void <init>() -> <init>
    25:58:void setupInnerPanels() -> setupInnerPanels
celtech.coreUI.controllers.panels.FXMLUtilities -> celtech.coreUI.controllers.panels.FXMLUtilities:
    17:17:void <init>() -> <init>
    27:57:void addColonsToLabels(javafx.scene.Node) -> addColonsToLabels
    61:65:void addColonToLabel(javafx.scene.control.Label) -> addColonToLabel
    69:73:void addColonToText(javafx.scene.text.Text) -> addColonToText
celtech.coreUI.controllers.panels.FilamentLibraryPanelController -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.css.PseudoClass ERROR -> ERROR
    javafx.beans.property.ObjectProperty state -> state
    javafx.beans.property.BooleanProperty isDirty -> isDirty
    javafx.beans.property.BooleanProperty isEditable -> isEditable
    javafx.beans.property.BooleanProperty canSave -> canSave
    javafx.beans.property.BooleanProperty canSaveAs -> canSaveAs
    javafx.beans.property.BooleanProperty canDelete -> canDelete
    javafx.beans.property.BooleanProperty canWriteToReel1 -> canWriteToReel1
    javafx.beans.property.BooleanProperty canWriteToReel2 -> canWriteToReel2
    javafx.beans.property.BooleanProperty isValid -> isValid
    javafx.beans.property.BooleanProperty isNameValid -> isNameValid
    javafx.beans.property.BooleanProperty isNozzleTempValid -> isNozzleTempValid
    java.lang.String currentFilamentID -> currentFilamentID
    javafx.beans.property.ObjectProperty currentPrinter -> currentPrinter
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> filamentContainer
    celtech.roboxbase.printerControl.model.PrinterListChangesListener listener -> listener
    celtech.roboxbase.configuration.Filament currentFilament -> currentFilament
    celtech.roboxbase.configuration.Filament currentFilamentAsEdited -> currentFilamentAsEdited
    javafx.beans.property.StringProperty loadedFilamentID0 -> loadedFilamentID0
    javafx.beans.property.StringProperty loadedFilamentID1 -> loadedFilamentID1
    boolean suspendDirtyTriggers -> suspendDirtyTriggers
    java.lang.String reel1MenuItemTitle -> reel1MenuItemTitle
    java.lang.String reel2MenuItemTitle -> reel2MenuItemTitle
    celtech.coreUI.components.material.FilamentMenuButton filamentMenuButton -> filamentMenuButton
    celtech.coreUI.components.RestrictedNumberField bedTemperature -> bedTemperature
    celtech.coreUI.components.RestrictedNumberField firstLayerBedTemperature -> firstLayerBedTemperature
    celtech.coreUI.components.RestrictedNumberField nozzleTemperature -> nozzleTemperature
    celtech.coreUI.components.RestrictedNumberField ambientTemperature -> ambientTemperature
    javafx.scene.control.ColorPicker colour -> colour
    celtech.coreUI.components.RestrictedNumberField firstLayerNozzleTemperature -> firstLayerNozzleTemperature
    javafx.scene.control.ComboBox material -> material
    celtech.coreUI.components.RestrictedNumberField filamentDiameter -> filamentDiameter
    celtech.coreUI.components.RestrictedNumberField costGBPPerKG -> costGBPPerKG
    celtech.coreUI.components.RestrictedNumberField remainingOnReelM -> remainingOnReelM
    celtech.coreUI.components.RestrictedNumberField feedRateMultiplier -> feedRateMultiplier
    celtech.coreUI.components.RestrictedTextField name -> name
    javafx.scene.control.TextField filamentID -> filamentID
    celtech.coreUI.components.RestrictedNumberField filamentMultiplier -> filamentMultiplier
    javafx.scene.control.TextArea helpText -> helpText
    javafx.scene.layout.GridPane filamentsGridPane -> filamentsGridPane
    java.lang.String REMAINING_ON_REEL_UNCHANGED -> REMAINING_ON_REEL_UNCHANGED
    javafx.collections.ListChangeListener reelEEPROMChangeListener -> reelEEPROMChangeListener
    javafx.beans.value.ChangeListener dirtyStringListener -> dirtyStringListener
    javafx.beans.value.ChangeListener dirtyBooleanListener -> dirtyBooleanListener
    javafx.beans.value.ChangeListener dirtyMaterialTypeListener -> dirtyMaterialTypeListener
    boolean $assertionsDisabled -> $assertionsDisabled
    49:432:void <init>() -> <init>
    167:210:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    214:249:void setupPrinterChangesListener() -> setupPrinterChangesListener
    253:258:void updateSaveBindings() -> updateSaveBindings
    266:303:void updateWriteToReelBindings() -> updateWriteToReelBindings
    307:330:void updatedLoadedFilamentIDs() -> updatedLoadedFilamentIDs
    334:350:void clearWidgets() -> clearWidgets
    355:386:void setupWidgetChangeListeners() -> setupWidgetChangeListeners
    390:404:void setupWidgetEditableBindings() -> setupWidgetEditableBindings
    447:459:void selectFilament(celtech.roboxbase.configuration.Filament) -> selectFilament
    463:481:void updateWidgets(celtech.roboxbase.configuration.Filament) -> updateWidgets
    488:501:void updateFilamentFromWidgets(celtech.roboxbase.configuration.Filament) -> updateFilamentFromWidgets
    506:524:boolean validateMaterialName(java.lang.String) -> validateMaterialName
    529:529:float getRemainingFilament(int) -> getRemainingFilament
    534:537:void whenSavePressed() -> whenSavePressed
    541:547:void whenNewPressed() -> whenNewPressed
    551:560:void whenSaveAsPressed() -> whenSaveAsPressed
    564:569:void whenDeletePressed() -> whenDeletePressed
    575:602:void whenWriteToReel1Pressed() -> whenWriteToReel1Pressed
    608:634:void whenWriteToReel2Pressed() -> whenWriteToReel2Pressed
    638:638:javafx.beans.property.ReadOnlyBooleanProperty getCanSave() -> getCanSave
    643:643:javafx.beans.property.ReadOnlyBooleanProperty getCanDelete() -> getCanDelete
    649:649:java.lang.String getMenuTitle() -> getMenuTitle
    655:828:java.util.List getOperationButtons() -> getOperationButtons
    833:853:void showReelsAtTopOfCombo() -> showReelsAtTopOfCombo
    858:859:void filamentSelected(celtech.roboxbase.configuration.Filament) -> filamentSelected
    864:876:void specialItemSelected(java.lang.String) -> specialItemSelected
    435:443:void lambda$new$6(javafx.beans.value.ObservableValue,celtech.roboxbase.MaterialType,celtech.roboxbase.MaterialType) -> lambda$new$6
    422:430:void lambda$new$5(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$5
    409:417:void lambda$new$4(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$4
    373:374:void lambda$setupWidgetChangeListeners$3(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color) -> lambda$setupWidgetChangeListeners$3
    358:367:void lambda$setupWidgetChangeListeners$2(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$setupWidgetChangeListeners$2
    183:194:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$1
    161:162:void lambda$new$0(javafx.collections.ListChangeListener$Change) -> lambda$new$0
    49:49:javafx.beans.property.ObjectProperty access$000(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$000
    49:49:void access$100(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$100
    49:49:void access$200(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$200
    49:49:javafx.beans.property.BooleanProperty access$300(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$300
    49:49:javafx.beans.property.BooleanProperty access$400(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$400
    49:49:javafx.beans.property.BooleanProperty access$500(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$500
    49:49:javafx.beans.property.BooleanProperty access$600(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$600
    49:49:javafx.beans.property.BooleanProperty access$700(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> access$700
    49:49:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$1 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$1:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    215:215:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    220:225:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    230:235:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    240:245:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$2 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$2:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    658:658:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    662:662:java.lang.String getTextId() -> getTextId
    668:668:java.lang.String getFXMLName() -> getFXMLName
    674:674:java.lang.String getTooltipTextId() -> getTooltipTextId
    680:681:void whenClicked() -> whenClicked
    686:686:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    658:658:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$3 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$3:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    692:692:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    696:696:java.lang.String getTextId() -> getTextId
    702:702:java.lang.String getFXMLName() -> getFXMLName
    708:708:java.lang.String getTooltipTextId() -> getTooltipTextId
    714:715:void whenClicked() -> whenClicked
    720:720:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    692:692:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$4 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$4:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    726:726:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    730:730:java.lang.String getTextId() -> getTextId
    736:736:java.lang.String getFXMLName() -> getFXMLName
    742:742:java.lang.String getTooltipTextId() -> getTooltipTextId
    748:749:void whenClicked() -> whenClicked
    754:754:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    726:726:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$5 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$5:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    760:760:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    764:764:java.lang.String getTextId() -> getTextId
    770:770:java.lang.String getFXMLName() -> getFXMLName
    776:776:java.lang.String getTooltipTextId() -> getTooltipTextId
    782:783:void whenClicked() -> whenClicked
    788:788:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    760:760:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$6 -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$6:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController this$0 -> this$0
    794:794:void <init>(celtech.coreUI.controllers.panels.FilamentLibraryPanelController) -> <init>
    798:798:java.lang.String getTextId() -> getTextId
    804:804:java.lang.String getFXMLName() -> getFXMLName
    810:810:java.lang.String getTooltipTextId() -> getTooltipTextId
    816:817:void whenClicked() -> whenClicked
    822:822:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    794:794:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State -> celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State:
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State NEW -> NEW
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State CUSTOM -> CUSTOM
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State ROBOX -> ROBOX
    celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State[] $VALUES -> $VALUES
    57:57:celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State[] values() -> values
    57:57:celtech.coreUI.controllers.panels.FilamentLibraryPanelController$State valueOf(java.lang.String) -> valueOf
    57:57:void <init>(java.lang.String,int) -> <init>
    57:71:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.GCodePanelController -> celtech.coreUI.controllers.panels.GCodePanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.collections.ListChangeListener gcodeTranscriptListener -> gcodeTranscriptListener
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.scene.layout.VBox gcodeEditParent -> gcodeEditParent
    celtech.coreUI.components.RestrictedTextField gcodeEntryField -> gcodeEntryField
    javafx.scene.control.ListView gcodeTranscript -> gcodeTranscript
    javafx.scene.control.Button sendGCodeButton -> sendGCodeButton
    javafx.scene.layout.HBox gcodePanel -> gcodePanel
    boolean suppressReactionToGCodeEntryChange -> suppressReactionToGCodeEntryChange
    35:117:void <init>() -> <init>
    61:62:void sendGCodeM(javafx.scene.input.MouseEvent) -> sendGCodeM
    67:68:void sendGCodeA(javafx.event.ActionEvent) -> sendGCodeA
    72:109:void fireGCodeAtPrinter() -> fireGCodeAtPrinter
    113:115:void selectLastItemInTranscript() -> selectLastItemInTranscript
    122:204:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    187:191:void lambda$initialize$3(javafx.scene.input.KeyEvent) -> lambda$initialize$3
    174:183:void lambda$initialize$2(javafx.scene.input.KeyEvent) -> lambda$initialize$2
    153:168:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$1
    129:136:void lambda$initialize$0(javafx.collections.ListChangeListener$Change) -> lambda$initialize$0
    35:35:boolean access$000(celtech.coreUI.controllers.panels.GCodePanelController) -> access$000
    35:35:javafx.scene.control.ListView access$100(celtech.coreUI.controllers.panels.GCodePanelController) -> access$100
    35:35:celtech.coreUI.components.RestrictedTextField access$200(celtech.coreUI.controllers.panels.GCodePanelController) -> access$200
    35:35:void access$300(celtech.coreUI.controllers.panels.GCodePanelController) -> access$300
celtech.coreUI.controllers.panels.GCodePanelController$1 -> celtech.coreUI.controllers.panels.GCodePanelController$1:
    celtech.coreUI.controllers.panels.GCodePanelController this$0 -> this$0
    139:139:void <init>(celtech.coreUI.controllers.panels.GCodePanelController) -> <init>
    143:147:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> changed
    139:139:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.GCodePanelController$2 -> celtech.coreUI.controllers.panels.GCodePanelController$2:
    celtech.coreUI.controllers.panels.GCodePanelController this$0 -> this$0
    194:194:void <init>(celtech.coreUI.controllers.panels.GCodePanelController) -> <init>
    198:202:void handle(javafx.scene.input.MouseEvent) -> handle
    194:194:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.panels.GetTimeWeightCost -> celtech.coreUI.controllers.panels.GetTimeWeightCost:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.appManager.ModelContainerProject project -> project
    javafx.scene.control.Label lblTime -> lblTime
    javafx.scene.control.Label lblWeight -> lblWeight
    javafx.scene.control.Label lblCost -> lblCost
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile settings -> settings
    java.lang.String temporaryDirectory -> temporaryDirectory
    java.io.File printJobDirectory -> printJobDirectory
    celtech.roboxbase.utils.tasks.Cancellable cancellable -> cancellable
    java.util.Random random -> random
    51:88:void <init>(celtech.appManager.ModelContainerProject,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,javafx.scene.control.Label,javafx.scene.control.Label,javafx.scene.control.Label,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    92:99:void showCancelled() -> showCancelled
    103:103:boolean isCancelled() -> isCancelled
    111:195:boolean runSlicerAndPostProcessor() -> runSlicerAndPostProcessor
    203:248:void updateFieldsForStatistics(celtech.roboxbase.postprocessor.PrintJobStatistics,celtech.roboxbase.printerControl.model.Printer) -> updateFieldsForStatistics
    255:295:boolean doSlicing(celtech.roboxbase.utils.models.PrintableMeshes,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> doSlicing
    303:306:java.lang.String formatDuration(double) -> formatDuration
    314:314:java.lang.String formatWeight(double) -> formatWeight
    322:325:java.lang.String formatCost(double) -> formatCost
    191:192:void lambda$runSlicerAndPostProcessor$3(celtech.roboxbase.postprocessor.PrintJobStatistics,celtech.roboxbase.printerControl.model.Printer) -> lambda$runSlicerAndPostProcessor$3
    137:140:void lambda$runSlicerAndPostProcessor$2(celtech.roboxbase.utils.threed.CentreCalculations,celtech.modelcontrol.ProjectifiableThing) -> lambda$runSlicerAndPostProcessor$2
    95:98:void lambda$showCancelled$1(java.lang.String) -> lambda$showCancelled$1
    86:87:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
celtech.coreUI.controllers.panels.LayoutSlideOutPanelController -> celtech.coreUI.controllers.panels.LayoutSlideOutPanelController:
    celtech.appManager.ModelContainerProject currentProject -> currentProject
    javafx.scene.control.Label lastModifiedDate -> lastModifiedDate
    javafx.scene.control.ListView printHistory -> printHistory
    javafx.collections.ListChangeListener printJobChangeListener -> printJobChangeListener
    22:33:void <init>() -> <init>
    44:44:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    52:57:void bindLoadedModels(celtech.appManager.ModelContainerProject) -> bindLoadedModels
celtech.coreUI.controllers.panels.LayoutSlideOutPanelController$1 -> celtech.coreUI.controllers.panels.LayoutSlideOutPanelController$1:
    celtech.coreUI.controllers.panels.LayoutSlideOutPanelController this$0 -> this$0
    34:34:void <init>(celtech.coreUI.controllers.panels.LayoutSlideOutPanelController) -> <init>
    38:38:void onChanged(javafx.collections.ListChangeListener$Change) -> onChanged
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printerSettings -> printerSettings
    celtech.appManager.ApplicationStatus applicationStatus -> applicationStatus
    celtech.coreUI.DisplayManager displayManager -> displayManager
    javafx.stage.FileChooser modelFileChooser -> modelFileChooser
    celtech.roboxbase.utils.PrinterUtils printerUtils -> printerUtils
    celtech.roboxbase.PrinterColourMap colourMap -> colourMap
    javafx.beans.property.IntegerProperty currentNozzle -> currentNozzle
    javafx.beans.property.BooleanProperty canPrintProject -> canPrintProject
    celtech.coreUI.components.buttons.GraphicButtonWithLabel undoButton -> undoButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel redoButton -> redoButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel backwardFromSettingsButton -> backwardFromSettingsButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel backwardFromLayoutButton -> backwardFromLayoutButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel calibrateButton -> calibrateButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel forwardButtonSettings -> forwardButtonSettings
    celtech.coreUI.components.buttons.GraphicButtonWithLabel forwardButtonLayout -> forwardButtonLayout
    celtech.coreUI.components.buttons.GraphicButtonWithLabel unlockDoorButton -> unlockDoorButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel ejectFilamentButton -> ejectFilamentButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel fineNozzleButton -> fineNozzleButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel fillNozzleButton -> fillNozzleButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel openNozzleButton -> openNozzleButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel closeNozzleButton -> closeNozzleButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel homeButton -> homeButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel removeHeadButton -> removeHeadButton
    celtech.coreUI.components.buttons.GraphicToggleButtonWithLabel headFanButton -> headFanButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel headLightsButton -> headLightsButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel ambientLightsButton -> ambientLightsButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel printButton -> printButton
    javafx.scene.layout.FlowPane layoutButtonHBox -> layoutButtonHBox
    javafx.scene.layout.FlowPane statusButtonHBox -> statusButtonHBox
    celtech.coreUI.components.buttons.GraphicButtonWithLabel addModelButton -> addModelButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel deleteModelButton -> deleteModelButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel duplicateModelButton -> duplicateModelButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel distributeModelsButton -> distributeModelsButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel addCloudModelButton -> addCloudModelButton
    celtech.coreUI.components.buttons.GraphicToggleButtonWithLabel snapToGroundButton -> snapToGroundButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel groupButton -> groupButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel ungroupButton -> ungroupButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel purgeButton -> purgeButton
    celtech.appManager.Project selectedProject -> selectedProject
    celtech.appManager.undo.UndoableProject undoableSelectedProject -> undoableSelectedProject
    javafx.beans.property.ObjectProperty layoutSubmode -> layoutSubmode
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> projectSelection
    celtech.coreUI.visualisation.ModelLoader modelLoader -> modelLoader
    celtech.coreUI.components.Notifications.ConditionalNotificationBar oneExtruderNoFilamentSelectedNotificationBar -> oneExtruderNoFilamentSelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar oneExtruderNoFilamentNotificationBar -> oneExtruderNoFilamentNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament0SelectedNotificationBar -> twoExtrudersNoFilament0SelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament0NotificationBar -> twoExtrudersNoFilament0NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament1SelectedNotificationBar -> twoExtrudersNoFilament1SelectedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar twoExtrudersNoFilament1NotificationBar -> twoExtrudersNoFilament1NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar doorOpenConditionalNotificationBar -> doorOpenConditionalNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar invalidMeshInProjectNotificationBar -> invalidMeshInProjectNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar chooseACustomProfileNotificationBar -> chooseACustomProfileNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar printHeadPowerOffNotificationBar -> printHeadPowerOffNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar noHeadNotificationBar -> noHeadNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar noModelsNotificationBar -> noModelsNotificationBar
    javafx.beans.property.BooleanProperty modelsOffBed -> modelsOffBed
    javafx.beans.property.BooleanProperty modelsOffBedWithRaft -> modelsOffBedWithRaft
    javafx.beans.property.BooleanProperty modelOffBedWithSpiral -> modelOffBedWithSpiral
    celtech.coreUI.components.Notifications.ConditionalNotificationBar modelsOffBedNotificationBar -> modelsOffBedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar modelsOffBedWithRaftNotificationBar -> modelsOffBedWithRaftNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar modelOffBedWithSpiralNotificationBar -> modelOffBedWithSpiralNotificationBar
    celtech.coreUI.controllers.panels.TimeCostThreadManager timeCostThreadManager -> timeCostThreadManager
    javafx.collections.MapChangeListener effectiveFilamentListener -> effectiveFilamentListener
    javafx.beans.value.ChangeListener outOfBoundsModelListener -> outOfBoundsModelListener
    boolean headLEDOn -> headLEDOn
    celtech.coreUI.AmbientLEDState ambientLEDState -> ambientLEDState
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.beans.property.BooleanProperty printerAvailable -> printerAvailable
    javafx.beans.value.ChangeListener headFanStatusListener -> headFanStatusListener
    javafx.beans.value.ChangeListener printerSettingsListener -> printerSettingsListener
    javafx.beans.value.ChangeListener layoutSubmodeListener -> layoutSubmodeListener
    celtech.appManager.Project$ProjectChangesListener projectChangesListener -> projectChangesListener
    88:1171:void <init>() -> <init>
    241:263:void group(javafx.event.ActionEvent) -> group
    268:278:void ungroup(javafx.event.ActionEvent) -> ungroup
    283:284:void startCut(javafx.event.ActionEvent) -> startCut
    289:300:void forwardPressed(javafx.event.ActionEvent) -> forwardPressed
    305:408:void printPressed(javafx.event.ActionEvent) -> printPressed
    413:424:void backwardPressed(javafx.event.ActionEvent) -> backwardPressed
    429:430:void calibrate(javafx.event.ActionEvent) -> calibrate
    435:436:void purge(javafx.event.ActionEvent) -> purge
    442:443:void register(javafx.event.ActionEvent) -> register
    448:474:void addModelContext(javafx.scene.input.ContextMenuEvent) -> addModelContext
    480:491:void addModel(javafx.event.ActionEvent) -> addModel
    498:525:java.util.List selectFiles() -> selectFiles
    531:542:void undo(javafx.event.ActionEvent) -> undo
    547:558:void redo(javafx.event.ActionEvent) -> redo
    563:564:void addCloudModel(javafx.event.ActionEvent) -> addCloudModel
    569:570:void deleteModel(javafx.event.ActionEvent) -> deleteModel
    575:576:void copyModel(javafx.event.ActionEvent) -> copyModel
    581:582:void autoLayoutModels(javafx.event.ActionEvent) -> autoLayoutModels
    587:588:void snapToGround(javafx.event.ActionEvent) -> snapToGround
    595:600:void unlockDoor(javafx.event.ActionEvent) -> unlockDoor
    606:667:void ejectFilament(javafx.event.ActionEvent) -> ejectFilament
    673:678:void ejectFilament(int) -> ejectFilament
    685:691:void selectNozzle0(javafx.event.ActionEvent) -> selectNozzle0
    698:704:void selectNozzle1(javafx.event.ActionEvent) -> selectNozzle1
    711:716:void openNozzle(javafx.event.ActionEvent) -> openNozzle
    723:728:void closeNozzle(javafx.event.ActionEvent) -> closeNozzle
    735:740:void homeAll(javafx.event.ActionEvent) -> homeAll
    747:758:void toggleHeadFan(javafx.event.ActionEvent) -> toggleHeadFan
    767:780:void toggleHeadLights(javafx.event.ActionEvent) -> toggleHeadLights
    790:810:void toggleAmbientLights(javafx.event.ActionEvent) -> toggleAmbientLights
    817:825:void removeHead(javafx.event.ActionEvent) -> removeHead
    829:839:void removeHeadFinished(celtech.roboxbase.utils.tasks.TaskResponse) -> removeHeadFinished
    858:919:void initialize() -> initialize
    924:977:void setupButtonVisibility() -> setupButtonVisibility
    996:1000:void createPrinterSettingsListener(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> createPrinterSettingsListener
    1004:1063:void updatePrintButtonConditionalText(celtech.roboxbase.printerControl.model.Printer,celtech.appManager.Project) -> updatePrintButtonConditionalText
    1070:1145:void createStatusPrinterListener() -> createStatusPrinterListener
    1149:1161:void clearConditionalNotificationBarConditions() -> clearConditionalNotificationBarConditions
    1213:1218:void unbindProject(celtech.appManager.Project) -> unbindProject
    1223:1239:void bindProject(celtech.appManager.Project) -> bindProject
    1243:1298:void dealWithOutOfBoundsModels() -> dealWithOutOfBoundsModels
    1304:1311:void whenProjectOrSettingsPrinterChange() -> whenProjectOrSettingsPrinterChange
    1320:1337:void whenProjectChanges(celtech.appManager.Project) -> whenProjectChanges
    1345:1397:void updateCanPrintProjectBindings(celtech.roboxbase.printerControl.model.Printer,celtech.appManager.Project) -> updateCanPrintProjectBindings
    1405:1466:void bindSelectedModels(celtech.appManager.Project) -> bindSelectedModels
    1471:1471:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    1476:1476:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    1481:1485:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    1489:1497:void bindNozzleControls(celtech.roboxbase.printerControl.model.Printer) -> bindNozzleControls
    1502:1510:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    1515:1519:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    1524:1528:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    1533:1537:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    1542:1546:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    1551:1555:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    1458:1463:void lambda$bindSelectedModels$17(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> lambda$bindSelectedModels$17
    1165:1169:void lambda$new$16(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> lambda$new$16
    1074:1144:void lambda$createStatusPrinterListener$15(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$createStatusPrinterListener$15
    981:989:void lambda$new$14(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$new$14
    905:915:void lambda$initialize$13(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$13
    899:900:void lambda$initialize$12(javafx.beans.value.ObservableValue,celtech.appManager.Project,celtech.appManager.Project) -> lambda$initialize$12
    849:850:void lambda$new$11(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$11
    819:820:void lambda$removeHead$10(celtech.roboxbase.utils.tasks.TaskResponse) -> lambda$removeHead$10
    647:649:void lambda$ejectFilament$9(javafx.event.ActionEvent) -> lambda$ejectFilament$9
    643:644:void lambda$ejectFilament$8(javafx.event.ActionEvent) -> lambda$ejectFilament$8
    639:640:void lambda$ejectFilament$7(javafx.event.ActionEvent) -> lambda$ejectFilament$7
    482:490:void lambda$addModel$6() -> lambda$addModel$6
    462:463:void lambda$addModelContext$5(javafx.event.ActionEvent) -> lambda$addModelContext$5
    458:459:void lambda$addModelContext$4(javafx.event.ActionEvent) -> lambda$addModelContext$4
    333:336:void lambda$printPressed$3(celtech.roboxbase.utils.threed.CentreCalculations,celtech.modelcontrol.ProjectifiableThing) -> lambda$printPressed$3
    252:252:boolean lambda$group$2(celtech.modelcontrol.ModelContainer) -> lambda$group$2
    247:247:boolean lambda$group$1(celtech.modelcontrol.ProjectifiableThing) -> lambda$group$1
    226:227:void lambda$new$0(javafx.collections.MapChangeListener$Change) -> lambda$new$0
    88:88:celtech.coreUI.controllers.panels.TimeCostThreadManager access$000(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> access$000
    88:88:javafx.scene.layout.FlowPane access$100(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> access$100
    88:88:javafx.scene.layout.FlowPane access$200(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> access$200
    88:88:void access$300(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> access$300
    88:88:void access$400(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> access$400
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$1 -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$1:
    celtech.coreUI.controllers.panels.LayoutStatusMenuStripController this$0 -> this$0
    230:230:void <init>(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> <init>
    234:235:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    230:230:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$2 -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$2:
    celtech.coreUI.controllers.panels.LayoutStatusMenuStripController this$0 -> this$0
    940:940:void <init>(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> <init>
    945:946:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    940:940:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$3 -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$3:
    celtech.coreUI.controllers.panels.LayoutStatusMenuStripController this$0 -> this$0
    951:951:void <init>(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> <init>
    956:957:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    951:951:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$4 -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$4:
    celtech.coreUI.controllers.panels.LayoutStatusMenuStripController this$0 -> this$0
    1172:1172:void <init>(celtech.coreUI.controllers.panels.LayoutStatusMenuStripController) -> <init>
    1177:1178:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    1183:1184:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    1189:1190:void whenAutoLaidOut() -> whenAutoLaidOut
    1195:1196:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    1201:1202:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    1207:1208:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$5 -> celtech.coreUI.controllers.panels.LayoutStatusMenuStripController$5:
    int[] $SwitchMap$celtech$appManager$ApplicationMode -> $SwitchMap$celtech$appManager$ApplicationMode
    int[] $SwitchMap$celtech$coreUI$AmbientLEDState -> $SwitchMap$celtech$coreUI$AmbientLEDState
    289:792:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.LibraryMenuPanelController -> celtech.coreUI.controllers.panels.LibraryMenuPanelController:
    15:17:void <init>() -> <init>
    22:30:void setupInnerPanels() -> setupInnerPanels
    34:37:void showAndSelectPrintProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> showAndSelectPrintProfile
celtech.coreUI.controllers.panels.LoadModelInsetPanelController -> celtech.coreUI.controllers.panels.LoadModelInsetPanelController:
    javafx.stage.FileChooser modelFileChooser -> modelFileChooser
    celtech.coreUI.DisplayManager displayManager -> displayManager
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.visualisation.ModelLoader modelLoader -> modelLoader
    javafx.scene.layout.VBox container -> container
    javafx.scene.layout.VBox webContentContainer -> webContentContainer
    celtech.coreUI.components.InsetPanelMenu menu -> menu
    50:57:void <init>() -> <init>
    71:72:void cancelPressed(javafx.event.ActionEvent) -> cancelPressed
    77:109:void addToProjectPressed(javafx.event.ActionEvent) -> addToProjectPressed
    114:168:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    235:265:void writeStreamToFile(java.io.InputStream,java.lang.String) -> writeStreamToFile
    136:167:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> lambda$initialize$1
    79:108:void lambda$addToProjectPressed$0() -> lambda$addToProjectPressed$0
    50:50:libertysystems.stenographer.Stenographer access$000() -> access$000
    50:50:void access$100(celtech.coreUI.controllers.panels.LoadModelInsetPanelController,java.io.InputStream,java.lang.String) -> access$100
    50:50:celtech.coreUI.visualisation.ModelLoader access$200(celtech.coreUI.controllers.panels.LoadModelInsetPanelController) -> access$200
    55:56:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.LoadModelInsetPanelController$1 -> celtech.coreUI.controllers.panels.LoadModelInsetPanelController$1:
    javafx.scene.web.WebEngine val$webEngine -> val$webEngine
    celtech.coreUI.controllers.panels.LoadModelInsetPanelController this$0 -> this$0
    147:147:void <init>(celtech.coreUI.controllers.panels.LoadModelInsetPanelController,javafx.scene.web.WebEngine) -> <init>
    152:161:void changed(javafx.beans.value.ObservableValue,javafx.concurrent.Worker$State,javafx.concurrent.Worker$State) -> changed
    147:147:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.LoadModelInsetPanelController$2 -> celtech.coreUI.controllers.panels.LoadModelInsetPanelController$2:
    int[] $SwitchMap$javafx$concurrent$Worker$State -> $SwitchMap$javafx$concurrent$Worker$State
    152:152:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.LoadModelInsetPanelController$WebCallback -> celtech.coreUI.controllers.panels.LoadModelInsetPanelController$WebCallback:
    celtech.coreUI.controllers.panels.LoadModelInsetPanelController this$0 -> this$0
    170:170:void <init>(celtech.coreUI.controllers.panels.LoadModelInsetPanelController) -> <init>
    175:230:void downloadFile(java.lang.String) -> downloadFile
celtech.coreUI.controllers.panels.MaintenanceInsetPanelController -> celtech.coreUI.controllers.panels.MaintenanceInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.printerControl.model.Printer connectedPrinter -> connectedPrinter
    celtech.coreUI.components.ProgressDialog firmwareUpdateProgress -> firmwareUpdateProgress
    javafx.stage.FileChooser firmwareFileChooser -> firmwareFileChooser
    celtech.coreUI.components.ProgressDialog gcodeUpdateProgress -> gcodeUpdateProgress
    javafx.stage.FileChooser gcodeFileChooser -> gcodeFileChooser
    celtech.roboxbase.services.printing.TransferGCodeToPrinterService gcodePrintService -> gcodePrintService
    javafx.beans.property.BooleanProperty printingDisabled -> printingDisabled
    javafx.beans.property.BooleanProperty noHead -> noHead
    javafx.beans.property.BooleanProperty dualHead -> dualHead
    javafx.beans.property.BooleanProperty singleHead -> singleHead
    javafx.beans.property.BooleanProperty noFilamentE -> noFilamentE
    javafx.beans.property.BooleanProperty noFilamentD -> noFilamentD
    javafx.beans.property.BooleanProperty noFilamentEOrD -> noFilamentEOrD
    javafx.scene.layout.VBox container -> container
    javafx.scene.control.Button YTestButton -> YTestButton
    javafx.scene.control.Button PurgeMaterialButton -> PurgeMaterialButton
    javafx.scene.control.Button loadFirmwareButton -> loadFirmwareButton
    javafx.scene.control.Button T1CleanButton -> T1CleanButton
    javafx.scene.control.Button EjectStuckMaterialButton1 -> EjectStuckMaterialButton1
    javafx.scene.control.Button EjectStuckMaterialButton2 -> EjectStuckMaterialButton2
    javafx.scene.control.Button SpeedTestButton -> SpeedTestButton
    javafx.scene.control.Button XTestButton -> XTestButton
    javafx.scene.control.Button T0CleanButton -> T0CleanButton
    javafx.scene.control.Label currentFirmwareField -> currentFirmwareField
    javafx.scene.control.Button LevelGantryButton -> LevelGantryButton
    javafx.scene.control.Button sendGCodeSDButton -> sendGCodeSDButton
    javafx.scene.control.Button ZTestButton -> ZTestButton
    40:59:void <init>() -> <init>
    106:116:void ejectStuckMaterial1(javafx.event.ActionEvent) -> ejectStuckMaterial1
    121:131:void ejectStuckMaterial2(javafx.event.ActionEvent) -> ejectStuckMaterial2
    138:143:void levelGantry(javafx.event.ActionEvent) -> levelGantry
    150:155:void testX(javafx.event.ActionEvent) -> testX
    162:167:void testY(javafx.event.ActionEvent) -> testY
    174:179:void testZ(javafx.event.ActionEvent) -> testZ
    186:191:void cleanNozzleT0(javafx.event.ActionEvent) -> cleanNozzleT0
    198:203:void cleanNozzleT1(javafx.event.ActionEvent) -> cleanNozzleT1
    210:215:void speedTest(javafx.event.ActionEvent) -> speedTest
    220:231:void loadFirmware(javafx.event.ActionEvent) -> loadFirmware
    236:254:void sendGCodeSD(javafx.event.ActionEvent) -> sendGCodeSD
    259:260:void purge(javafx.event.ActionEvent) -> purge
    273:421:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    426:426:java.lang.String getMenuTitle() -> getMenuTitle
    432:432:java.util.List getOperationButtons() -> getOperationButtons
    363:416:void lambda$initialize$0(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$0
    40:40:celtech.coreUI.components.ProgressDialog access$002(celtech.coreUI.controllers.panels.MaintenanceInsetPanelController,celtech.coreUI.components.ProgressDialog) -> access$002
    40:40:celtech.roboxbase.services.printing.TransferGCodeToPrinterService access$100(celtech.coreUI.controllers.panels.MaintenanceInsetPanelController) -> access$100
    40:40:libertysystems.stenographer.Stenographer access$200() -> access$200
    43:43:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$1 -> celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$1:
    celtech.coreUI.controllers.panels.MaintenanceInsetPanelController this$0 -> this$0
    274:274:void <init>(celtech.coreUI.controllers.panels.MaintenanceInsetPanelController) -> <init>
    278:279:void run() -> run
celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$2 -> celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$2:
    celtech.coreUI.controllers.panels.MaintenanceInsetPanelController this$0 -> this$0
    320:320:void <init>(celtech.coreUI.controllers.panels.MaintenanceInsetPanelController) -> <init>
    324:340:void handle(javafx.concurrent.WorkerStateEvent) -> handle
    320:320:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$3 -> celtech.coreUI.controllers.panels.MaintenanceInsetPanelController$3:
    celtech.coreUI.controllers.panels.MaintenanceInsetPanelController this$0 -> this$0
    344:344:void <init>(celtech.coreUI.controllers.panels.MaintenanceInsetPanelController) -> <init>
    348:351:void handle(javafx.concurrent.WorkerStateEvent) -> handle
    344:344:void handle(javafx.event.Event) -> handle
celtech.coreUI.controllers.panels.MenuInnerPanel -> celtech.coreUI.controllers.panels.MenuInnerPanel:
    java.lang.String getMenuTitle() -> getMenuTitle
    java.util.List getOperationButtons() -> getOperationButtons
celtech.coreUI.controllers.panels.MenuInnerPanel$OperationButton -> celtech.coreUI.controllers.panels.MenuInnerPanel$OperationButton:
    java.lang.String getTextId() -> getTextId
    java.lang.String getFXMLName() -> getFXMLName
    java.lang.String getTooltipTextId() -> getTooltipTextId
    void whenClicked() -> whenClicked
    javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.MenuPanelController -> celtech.coreUI.controllers.panels.MenuPanelController:
    java.util.List innerPanelDetails -> innerPanelDetails
    libertysystems.stenographer.Stenographer steno -> steno
    java.util.ResourceBundle resources -> resources
    celtech.coreUI.components.VerticalMenu panelMenu -> panelMenu
    javafx.scene.layout.VBox insetNodeContainer -> insetNodeContainer
    javafx.scene.layout.HBox buttonBoxContainer -> buttonBoxContainer
    celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails profileDetails -> profileDetails
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController profileDetailsController -> profileDetailsController
    java.lang.String paneli18Name -> paneli18Name
    javafx.beans.property.ObjectProperty innerPanelProperty -> innerPanelProperty
    23:59:void <init>() -> <init>
    65:94:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    void setupInnerPanels() -> setupInnerPanels
    112:125:celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails loadInnerPanel(java.lang.String,celtech.coreUI.controllers.panels.MenuInnerPanel) -> loadInnerPanel
    133:142:void buildExtras() -> buildExtras
    149:152:void openInnerPanel(celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails) -> openInnerPanel
    157:158:void okPressed(javafx.event.ActionEvent) -> okPressed
    139:140:void lambda$buildExtras$0(celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails) -> lambda$buildExtras$0
celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails -> celtech.coreUI.controllers.panels.MenuPanelController$InnerPanelDetails:
    javafx.scene.Node node -> node
    celtech.coreUI.controllers.panels.MenuInnerPanel innerPanel -> innerPanel
    celtech.coreUI.controllers.panels.MenuPanelController this$0 -> this$0
    33:36:void <init>(celtech.coreUI.controllers.panels.MenuPanelController,javafx.scene.Node,celtech.coreUI.controllers.panels.MenuInnerPanel) -> <init>
celtech.coreUI.controllers.panels.ModelEditInsetPanelController -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.VBox modelEditInsetRoot -> modelEditInsetRoot
    javafx.scene.control.Label modelName -> modelName
    javafx.scene.control.ToggleButton setMaterial0Button -> setMaterial0Button
    javafx.scene.control.ToggleButton setMaterial1Button -> setMaterial1Button
    javafx.scene.control.ToggleGroup materialButtons -> materialButtons
    celtech.coreUI.components.RestrictedNumberField widthTextField -> widthTextField
    celtech.coreUI.components.RestrictedNumberField depthTextField -> depthTextField
    celtech.coreUI.components.RestrictedNumberField xAxisTextField -> xAxisTextField
    javafx.scene.control.Label scaleXCaption -> scaleXCaption
    javafx.scene.control.Label scaleYCaption -> scaleYCaption
    javafx.scene.control.Label scaleZCaption -> scaleZCaption
    javafx.scene.control.Label widthCaption -> widthCaption
    javafx.scene.control.Label heightCaption -> heightCaption
    javafx.scene.control.Label depthCaption -> depthCaption
    celtech.coreUI.components.RestrictedNumberField scaleTextWidthField -> scaleTextWidthField
    celtech.coreUI.components.RestrictedNumberField scaleTextHeightField -> scaleTextHeightField
    celtech.coreUI.components.RestrictedNumberField scaleTextDepthField -> scaleTextDepthField
    celtech.coreUI.components.RestrictedNumberField heightTextField -> heightTextField
    celtech.coreUI.components.RestrictedNumberField yAxisTextField -> yAxisTextField
    celtech.coreUI.components.RestrictedNumberField rotationXTextField -> rotationXTextField
    celtech.coreUI.components.RestrictedNumberField rotationYTextField -> rotationYTextField
    celtech.coreUI.components.RestrictedNumberField rotationZTextField -> rotationZTextField
    javafx.scene.control.ToggleButton preserveAspectRatio -> preserveAspectRatio
    jfxtras.styles.jmetro8.ToggleSwitch useProportionalScaleSwitch -> useProportionalScaleSwitch
    javafx.scene.layout.VBox movePanel -> movePanel
    javafx.scene.layout.VBox scalePanel -> scalePanel
    javafx.scene.layout.VBox rotatePanel -> rotatePanel
    javafx.scene.control.ToggleButton moveButton -> moveButton
    javafx.scene.control.ToggleButton scaleButton -> scaleButton
    javafx.scene.control.ToggleButton rotateButton -> rotateButton
    javafx.scene.control.ToggleGroup tabButtons -> tabButtons
    javafx.scene.shape.SVGPath linkIcon -> linkIcon
    javafx.scene.Group unlinkIcon -> unlinkIcon
    celtech.appManager.Project currentProject -> currentProject
    celtech.appManager.undo.UndoableProject undoableProject -> undoableProject
    javafx.beans.value.ChangeListener modelScaleXChangeListener -> modelScaleXChangeListener
    javafx.beans.value.ChangeListener modelScaleYChangeListener -> modelScaleYChangeListener
    javafx.beans.value.ChangeListener modelScaleZChangeListener -> modelScaleZChangeListener
    javafx.beans.value.ChangeListener modelLeanChangeListener -> modelLeanChangeListener
    javafx.beans.value.ChangeListener modelTwistChangeListener -> modelTwistChangeListener
    javafx.beans.value.ChangeListener modelTurnChangeListener -> modelTurnChangeListener
    javafx.beans.value.ChangeListener widthListener -> widthListener
    javafx.beans.value.ChangeListener heightListener -> heightListener
    javafx.beans.value.ChangeListener depthListener -> depthListener
    javafx.beans.value.ChangeListener xAxisListener -> xAxisListener
    javafx.beans.value.ChangeListener yAxisListener -> yAxisListener
    java.lang.String scaleFormat -> scaleFormat
    java.lang.String rotationFormat -> rotationFormat
    double lastScaleRatio -> lastScaleRatio
    double lastScaleWidth -> lastScaleWidth
    double lastScaleHeight -> lastScaleHeight
    double lastScaleDepth -> lastScaleDepth
    double lastRotationX -> lastRotationX
    double lastRotationY -> lastRotationY
    double lastRotationZ -> lastRotationZ
    double lastWidth -> lastWidth
    double lastHeight -> lastHeight
    double lastDepth -> lastDepth
    double lastX -> lastX
    double lastY -> lastY
    javafx.beans.property.IntegerProperty numSelectedModels -> numSelectedModels
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> projectSelection
    celtech.coreUI.ProjectGUIRules projectGUIRules -> projectGUIRules
    javafx.beans.property.ObjectProperty layoutSubmode -> layoutSubmode
    javafx.beans.value.ChangeListener layoutSubmodeListener -> layoutSubmodeListener
    double MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    boolean $assertionsDisabled -> $assertionsDisabled
    62:1166:void <init>() -> <init>
    214:261:void flipMaterials(javafx.event.ActionEvent) -> flipMaterials
    274:286:void updateProportionalLabels(boolean) -> updateProportionalLabels
    291:369:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    373:487:void updateDisplay() -> updateDisplay
    491:556:void whenProjectChanged(celtech.appManager.Project) -> whenProjectChanged
    564:577:void doGroup(javafx.event.ActionEvent) -> doGroup
    582:598:void doSelectSameMaterial(javafx.event.ActionEvent) -> doSelectSameMaterial
    607:607:void doCut(javafx.event.ActionEvent) -> doCut
    612:642:void setMaterial0(javafx.event.ActionEvent) -> setMaterial0
    647:676:void setMaterial1(javafx.event.ActionEvent) -> setMaterial1
    682:684:void doDropToBed(javafx.event.ActionEvent) -> doDropToBed
    690:691:void setProject(celtech.appManager.Project) -> setProject
    700:711:void repopulate(celtech.coreUI.visualisation.ProjectSelection$PrimarySelectedModelDetails) -> repopulate
    715:720:void setUpNumSelectedModelsListener() -> setUpNumSelectedModelsListener
    724:739:void initialiseTextFieldValues() -> initialiseTextFieldValues
    743:747:void setupProjectSelectedListener() -> setupProjectSelectedListener
    752:815:void setUpModelGeometryListeners() -> setUpModelGeometryListeners
    819:821:void populateYAxisField(java.lang.Number) -> populateYAxisField
    825:827:void populateXAxisField(java.lang.Number) -> populateXAxisField
    831:833:void populateDepthField(java.lang.Number) -> populateDepthField
    837:839:void populateHeightField(java.lang.Number) -> populateHeightField
    843:845:void populateWidthField(java.lang.Number) -> populateWidthField
    849:852:void populateRotationXField(java.lang.Number) -> populateRotationXField
    856:859:void populateRotationZField(java.lang.Number) -> populateRotationZField
    863:866:void populateRotationYField(java.lang.Number) -> populateRotationYField
    874:875:boolean inMultiSelectWithFixedAR() -> inMultiSelectWithFixedAR
    880:880:boolean inMultiSelect() -> inMultiSelect
    888:888:boolean inFixedAR() -> inFixedAR
    893:905:void showScaleForXYZ(double) -> showScaleForXYZ
    909:917:void populateScaleXField(java.lang.Number) -> populateScaleXField
    921:929:void populateScaleYField(java.lang.Number) -> populateScaleYField
    933:941:void populateScaleZField(java.lang.Number) -> populateScaleZField
    945:1033:void setUpNumberFieldListeners() -> setUpNumberFieldListeners
    1037:1047:void updateRotationX() -> updateRotationX
    1051:1061:void updateRotationY() -> updateRotationY
    1065:1075:void updateRotationZ() -> updateRotationZ
    1079:1088:void updateZ() -> updateZ
    1092:1101:void updateX() -> updateX
    1105:1128:void updateDepth() -> updateDepth
    1132:1164:void updateHeight() -> updateHeight
    1170:1170:double limitDimension(double) -> limitDimension
    1183:1208:double limitScaleFactor(double,celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension) -> limitScaleFactor
    1214:1243:void updateWidth() -> updateWidth
    1247:1249:celtech.modelcontrol.ProjectifiableThing getSingleSelection() -> getSingleSelection
    1254:1284:void updateScaleDepth() -> updateScaleDepth
    1288:1329:void updateScaleHeight() -> updateScaleHeight
    1333:1374:void updateScaleWidth() -> updateScaleWidth
    1383:1391:void setFieldsEditable() -> setFieldsEditable
    1395:1412:void whenNumSelectedModelsChanged() -> whenNumSelectedModelsChanged
    1417:1417:void shutdownController() -> shutdownController
    813:814:void lambda$setUpModelGeometryListeners$17(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$17
    808:809:void lambda$setUpModelGeometryListeners$16(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$16
    803:804:void lambda$setUpModelGeometryListeners$15(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$15
    798:799:void lambda$setUpModelGeometryListeners$14(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$14
    793:794:void lambda$setUpModelGeometryListeners$13(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$13
    788:789:void lambda$setUpModelGeometryListeners$12(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$12
    783:784:void lambda$setUpModelGeometryListeners$11(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$11
    778:779:void lambda$setUpModelGeometryListeners$10(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$10
    770:774:void lambda$setUpModelGeometryListeners$9(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$9
    762:766:void lambda$setUpModelGeometryListeners$8(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$8
    754:758:void lambda$setUpModelGeometryListeners$7(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpModelGeometryListeners$7
    745:746:void lambda$setupProjectSelectedListener$6(javafx.beans.value.ObservableValue,celtech.appManager.Project,celtech.appManager.Project) -> lambda$setupProjectSelectedListener$6
    718:719:void lambda$setUpNumSelectedModelsListener$5(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setUpNumSelectedModelsListener$5
    591:596:void lambda$doSelectSameMaterial$4(int,celtech.modelcontrol.ModelContainer) -> lambda$doSelectSameMaterial$4
    569:569:boolean lambda$doGroup$3(celtech.modelcontrol.ModelContainer) -> lambda$doGroup$3
    565:565:boolean lambda$doGroup$2(celtech.modelcontrol.ModelContainer) -> lambda$doGroup$2
    311:319:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> lambda$initialize$1
    305:306:void lambda$initialize$0(javafx.beans.value.ObservableValue,celtech.appManager.Project,celtech.appManager.Project) -> lambda$initialize$0
    62:62:javafx.scene.layout.VBox access$000(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$000
    62:62:void access$100(celtech.coreUI.controllers.panels.ModelEditInsetPanelController,boolean) -> access$100
    62:62:javafx.scene.control.ToggleButton access$200(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$200
    62:62:javafx.scene.layout.VBox access$300(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$300
    62:62:javafx.scene.layout.VBox access$400(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$400
    62:62:javafx.scene.layout.VBox access$500(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$500
    62:62:javafx.scene.control.ToggleButton access$600(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$600
    62:62:javafx.scene.control.ToggleButton access$700(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$700
    62:62:void access$800(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$800
    62:62:void access$900(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$900
    62:62:void access$1000(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1000
    62:62:void access$1100(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1100
    62:62:void access$1200(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1200
    62:62:void access$1300(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1300
    62:62:void access$1400(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1400
    62:62:void access$1500(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1500
    62:62:void access$1600(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1600
    62:62:void access$1700(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1700
    62:62:void access$1800(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> access$1800
    62:62:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$1 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$1:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    264:264:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    268:269:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> changed
    264:264:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$10 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$10:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    994:994:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    998:999:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    994:994:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$11 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$11:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    1002:1002:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    1006:1007:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    1002:1002:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$12 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$12:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    1010:1010:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    1014:1015:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    1010:1010:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$13 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$13:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    1018:1018:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    1022:1023:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    1018:1018:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$14 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$14:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    1026:1026:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    1030:1031:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    1026:1026:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$2 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$2:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    325:325:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    329:330:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    325:325:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$3 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$3:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    334:334:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    338:363:void changed(javafx.beans.value.ObservableValue,javafx.scene.control.Toggle,javafx.scene.control.Toggle) -> changed
    334:334:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$4 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$4:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    946:946:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    950:951:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    946:946:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$5 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$5:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    954:954:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    958:959:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    954:954:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$6 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$6:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    962:962:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    966:967:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    962:962:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$7 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$7:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    970:970:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    974:975:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    970:970:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$8 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$8:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    978:978:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    982:983:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    978:978:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$9 -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$9:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController this$0 -> this$0
    986:986:void <init>(celtech.coreUI.controllers.panels.ModelEditInsetPanelController) -> <init>
    990:991:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    986:986:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension:
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension WIDTH -> WIDTH
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension HEIGHT -> HEIGHT
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension DEPTH -> DEPTH
    celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension[] $VALUES -> $VALUES
    1173:1173:celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension[] values() -> values
    1173:1173:celtech.coreUI.controllers.panels.ModelEditInsetPanelController$ApplicableDimension valueOf(java.lang.String) -> valueOf
    1173:1173:void <init>(java.lang.String,int) -> <init>
    1173:1178:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ModelEditInsetPanelController$NoArgsVoidFunc -> celtech.coreUI.controllers.panels.ModelEditInsetPanelController$NoArgsVoidFunc:
    void run() -> run
celtech.coreUI.controllers.panels.NozzleChartData -> celtech.coreUI.controllers.panels.NozzleChartData:
    javafx.scene.chart.XYChart$Series nozzleTemperatureData -> nozzleTemperatureData
    javafx.scene.chart.XYChart$Series nozzleTargetTemperatureSeries -> nozzleTargetTemperatureSeries
    javafx.scene.chart.XYChart$Data nozzleTargetPoint -> nozzleTargetPoint
    javafx.beans.property.ReadOnlyIntegerProperty nozzleTargetTemperatureProperty -> nozzleTargetTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty nozzleFirstLayerTargetTemperatureProperty -> nozzleFirstLayerTargetTemperatureProperty
    javafx.beans.property.ReadOnlyIntegerProperty nozzleTemperatureProperty -> nozzleTemperatureProperty
    javafx.beans.property.ReadOnlyObjectProperty nozzleHeaterModeProperty -> nozzleHeaterModeProperty
    java.lang.String degreesC -> degreesC
    javafx.beans.value.ChangeListener nozzleHeaterModeListener -> nozzleHeaterModeListener
    javafx.beans.value.ChangeListener nozzleTargetTemperatureListener -> nozzleTargetTemperatureListener
    javafx.beans.value.ChangeListener nozzleFirstLayerTargetTemperatureListener -> nozzleFirstLayerTargetTemperatureListener
    21:71:void <init>(int,javafx.scene.chart.XYChart$Series,javafx.beans.property.ReadOnlyObjectProperty,javafx.beans.property.ReadOnlyIntegerProperty,javafx.beans.property.ReadOnlyIntegerProperty,javafx.beans.property.ReadOnlyIntegerProperty) -> <init>
    75:90:void destroy() -> destroy
    94:112:void updateNozzleTargetPoint() -> updateNozzleTargetPoint
    116:116:javafx.scene.chart.XYChart$Series getTargetTemperatureSeries() -> getTargetTemperatureSeries
    121:121:javafx.scene.chart.XYChart$Series getNozzleTemperatureSeries() -> getNozzleTemperatureSeries
    43:44:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$2
    38:39:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$1
    33:34:void lambda$new$0(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.HeaterMode,celtech.roboxbase.printerControl.model.HeaterMode) -> lambda$new$0
celtech.coreUI.controllers.panels.PreferencesInnerPanelController -> celtech.coreUI.controllers.panels.PreferencesInnerPanelController:
    int ROW_HEIGHT -> ROW_HEIGHT
    javafx.scene.layout.GridPane preferencesGridPane -> preferencesGridPane
    java.lang.String menuTitle -> menuTitle
    java.util.List preferences -> preferences
    49:52:void <init>(java.lang.String,java.util.List) -> <init>
    57:58:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    62:71:void displayPreferences(java.util.List) -> displayPreferences
    75:92:void addPreferenceToContainer(celtech.coreUI.controllers.panels.PreferencesInnerPanelController$Preference,int) -> addPreferenceToContainer
    96:98:javafx.scene.control.Label getPreferenceDescriptionLabel(celtech.coreUI.controllers.panels.PreferencesInnerPanelController$Preference) -> getPreferenceDescriptionLabel
    103:105:javafx.scene.control.Control getPreferenceEditorControl(celtech.coreUI.controllers.panels.PreferencesInnerPanelController$Preference) -> getPreferenceEditorControl
    111:111:java.lang.String getMenuTitle() -> getMenuTitle
    117:118:java.util.List getOperationButtons() -> getOperationButtons
celtech.coreUI.controllers.panels.PreferencesInnerPanelController$Preference -> celtech.coreUI.controllers.panels.PreferencesInnerPanelController$Preference:
    void updateValueFromControl() -> updateValueFromControl
    void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    javafx.scene.control.Control getControl() -> getControl
    java.lang.String getDescription() -> getDescription
    void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
celtech.coreUI.controllers.panels.PrinterStatusSidePanelController -> celtech.coreUI.controllers.panels.PrinterStatusSidePanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.appManager.ApplicationStatus applicationStatus -> applicationStatus
    javafx.scene.layout.VBox materialContainer -> materialContainer
    javafx.scene.layout.HBox temperatureChartXLabels -> temperatureChartXLabels
    javafx.scene.layout.GridPane legendContainer -> legendContainer
    javafx.scene.chart.LineChart temperatureChart -> temperatureChart
    javafx.scene.chart.NumberAxis temperatureAxis -> temperatureAxis
    javafx.scene.chart.NumberAxis timeAxis -> timeAxis
    javafx.scene.control.Label legendMaterial1 -> legendMaterial1
    javafx.scene.control.Label legendMaterial2 -> legendMaterial2
    javafx.scene.control.Label legendBed -> legendBed
    javafx.scene.control.Label legendAmbient -> legendAmbient
    celtech.coreUI.components.printerstatus.PrinterGridComponent printerGridComponent -> printerGridComponent
    javafx.scene.layout.VBox headPanel -> headPanel
    javafx.scene.control.Label headTitleBold -> headTitleBold
    javafx.scene.control.Label headTitleLight -> headTitleLight
    javafx.scene.control.Label headDescription -> headDescription
    javafx.scene.control.Label headNozzles -> headNozzles
    javafx.scene.control.Label headFeeds -> headFeeds
    javafx.scene.layout.VBox headDataBox -> headDataBox
    javafx.scene.layout.VBox noheadDataBox -> noheadDataBox
    javafx.scene.Group noHead -> noHead
    javafx.scene.Group singleMaterialLiteHead -> singleMaterialLiteHead
    javafx.scene.Group singleMaterialHead -> singleMaterialHead
    javafx.scene.Group dualMaterialHead -> dualMaterialHead
    javafx.scene.layout.VBox graphContainer -> graphContainer
    javafx.scene.layout.VBox graphAlternativeGrid -> graphAlternativeGrid
    javafx.scene.control.Label graphAlternativeMaterial1Temp -> graphAlternativeMaterial1Temp
    javafx.scene.control.Label graphAlternativeMaterial2Temp -> graphAlternativeMaterial2Temp
    javafx.scene.control.Label graphAlternativeBedTemp -> graphAlternativeBedTemp
    javafx.scene.control.Label graphAlternativeAmbientTemp -> graphAlternativeAmbientTemp
    javafx.scene.control.Label graphAlternativeMaterial1Legend -> graphAlternativeMaterial1Legend
    javafx.scene.control.Label graphAlternativeMaterial2Legend -> graphAlternativeMaterial2Legend
    javafx.scene.control.Label graphAlternativeBedLegend -> graphAlternativeBedLegend
    javafx.scene.control.Label graphAlternativeAmbientLegend -> graphAlternativeAmbientLegend
    javafx.scene.layout.VBox uberContainer -> uberContainer
    celtech.roboxbase.printerControl.model.Printer previousSelectedPrinter -> previousSelectedPrinter
    int MAX_DATA_POINTS -> MAX_DATA_POINTS
    javafx.scene.chart.XYChart$Series currentAmbientTemperatureHistory -> currentAmbientTemperatureHistory
    celtech.coreUI.controllers.panels.ChartManager chartManager -> chartManager
    javafx.collections.ListChangeListener graphDataPointChangeListener -> graphDataPointChangeListener
    42:161:void <init>() -> <init>
    188:230:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    234:248:void initialiseTemperatureChart() -> initialiseTemperatureChart
    258:278:void whenPrinterSelected(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterSelected
    282:291:void bindDetails(celtech.roboxbase.printerControl.model.Printer) -> bindDetails
    295:307:void bindPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindPrinter
    311:329:void refreshMaterialContainer(celtech.roboxbase.printerControl.model.Printer) -> refreshMaterialContainer
    333:334:void unbindMaterialContainer() -> unbindMaterialContainer
    338:354:void unbindPrinter(celtech.roboxbase.printerControl.model.Printer) -> unbindPrinter
    358:368:void showNoHead() -> showNoHead
    372:383:void unbindHeadProperties(celtech.roboxbase.printerControl.model.Head) -> unbindHeadProperties
    387:491:void bindHeadProperties(celtech.roboxbase.printerControl.model.Head) -> bindHeadProperties
    495:501:void controlDetailsVisibility() -> controlDetailsVisibility
    506:506:void configure(javafx.fxml.Initializable) -> configure
    511:513:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    518:520:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    525:530:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    535:539:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    544:544:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    549:549:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    554:554:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    559:563:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    568:572:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    193:194:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$1
    164:177:void lambda$new$0(javafx.collections.ListChangeListener$Change) -> lambda$new$0
    42:42:javafx.scene.layout.VBox access$000(celtech.coreUI.controllers.panels.PrinterStatusSidePanelController) -> access$000
    42:42:javafx.scene.layout.VBox access$100(celtech.coreUI.controllers.panels.PrinterStatusSidePanelController) -> access$100
celtech.coreUI.controllers.panels.PrinterStatusSidePanelController$1 -> celtech.coreUI.controllers.panels.PrinterStatusSidePanelController$1:
    celtech.coreUI.controllers.panels.PrinterStatusSidePanelController this$0 -> this$0
    210:210:void <init>(celtech.coreUI.controllers.panels.PrinterStatusSidePanelController) -> <init>
    215:228:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    210:210:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.PrinterStatusSlideOutPanelController -> celtech.coreUI.controllers.panels.PrinterStatusSlideOutPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.controllers.SlideOutHandleController SlideOutHandleController -> SlideOutHandleController
    16:20:void <init>() -> <init>
    28:28:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    33:34:void slideIn() -> slideIn
celtech.coreUI.controllers.panels.ProfileLibraryPanelController -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController:
    javafx.css.PseudoClass ERROR -> ERROR
    javafx.beans.property.ObjectProperty state -> state
    javafx.beans.property.BooleanProperty isDirty -> isDirty
    javafx.beans.property.BooleanProperty isEditable -> isEditable
    javafx.beans.property.BooleanProperty canSave -> canSave
    javafx.beans.property.BooleanProperty canSaveAs -> canSaveAs
    javafx.beans.property.BooleanProperty canDelete -> canDelete
    javafx.beans.property.BooleanProperty isNameValid -> isNameValid
    java.lang.String currentProfileName -> currentProfileName
    javafx.beans.property.StringProperty currentHeadType -> currentHeadType
    javafx.beans.property.IntegerProperty numNozzleHeaters -> numNozzleHeaters
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.VBox container -> container
    javafx.scene.control.ComboBox cmbHeadType -> cmbHeadType
    javafx.scene.control.ComboBox cmbPrintProfile -> cmbPrintProfile
    celtech.coreUI.components.RestrictedNumberField fillDensity -> fillDensity
    javafx.scene.layout.GridPane supportGrid -> supportGrid
    celtech.coreUI.components.RestrictedNumberField perimeterExtrusionWidth -> perimeterExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField enableFanIfLayerTimeBelow -> enableFanIfLayerTimeBelow
    celtech.coreUI.components.RestrictedNumberField supportOverhangThreshold -> supportOverhangThreshold
    javafx.scene.control.ComboBox supportNozzleChoice -> supportNozzleChoice
    celtech.coreUI.components.RestrictedNumberField firstLayerSpeed -> firstLayerSpeed
    celtech.coreUI.components.RestrictedNumberField perimeterSpeed -> perimeterSpeed
    javafx.scene.layout.GridPane coolingGrid -> coolingGrid
    javafx.scene.layout.GridPane speedGrid -> speedGrid
    celtech.coreUI.components.RestrictedTextField profileNameField -> profileNameField
    javafx.scene.control.ComboBox supportInterfaceNozzleChoice -> supportInterfaceNozzleChoice
    celtech.coreUI.components.RestrictedNumberField supportMaterialSpeed -> supportMaterialSpeed
    celtech.coreUI.components.RestrictedNumberField minFanSpeed -> minFanSpeed
    celtech.coreUI.components.RestrictedNumberField solidLayersBottom -> solidLayersBottom
    celtech.coreUI.components.RestrictedNumberField solidLayersTop -> solidLayersTop
    javafx.scene.control.ComboBox perimeterNozzleChoice -> perimeterNozzleChoice
    celtech.coreUI.components.RestrictedNumberField smallPerimeterSpeed -> smallPerimeterSpeed
    celtech.coreUI.components.RestrictedNumberField disableFanForFirstNLayers -> disableFanForFirstNLayers
    javafx.scene.control.Slider topSolidInfillExtrusionWidthSlider -> topSolidInfillExtrusionWidthSlider
    javafx.scene.control.ComboBox supportPattern -> supportPattern
    javafx.scene.control.Slider supportExtrusionWidthSlider -> supportExtrusionWidthSlider
    celtech.coreUI.components.RestrictedNumberField bridgesSpeed -> bridgesSpeed
    celtech.coreUI.components.RestrictedNumberField layerHeight -> layerHeight
    javafx.scene.layout.GridPane extrusionGrid -> extrusionGrid
    javafx.scene.layout.GridPane extrusionControls -> extrusionControls
    javafx.scene.layout.GridPane nozzleControls -> nozzleControls
    celtech.coreUI.components.RestrictedNumberField supportPatternAngle -> supportPatternAngle
    celtech.coreUI.components.RestrictedNumberField infillExtrusionWidth -> infillExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField slowFanIfLayerTimeBelow -> slowFanIfLayerTimeBelow
    javafx.scene.control.Slider firstLayerExtrusionWidthSlider -> firstLayerExtrusionWidthSlider
    javafx.scene.control.CheckBox enableAutoCooling -> enableAutoCooling
    celtech.coreUI.components.RestrictedNumberField solidInfillSpeed -> solidInfillSpeed
    celtech.coreUI.components.RestrictedNumberField nozzlePartialOpen0 -> nozzlePartialOpen0
    celtech.coreUI.components.RestrictedNumberField nozzlePartialOpen1 -> nozzlePartialOpen1
    javafx.scene.control.ComboBox firstLayerNozzleChoice -> firstLayerNozzleChoice
    javafx.scene.control.Slider solidInfillExtrusionWidthSlider -> solidInfillExtrusionWidthSlider
    javafx.scene.control.ComboBox fillNozzleChoice -> fillNozzleChoice
    celtech.coreUI.components.RestrictedNumberField nozzleEjectionVolume0 -> nozzleEjectionVolume0
    celtech.coreUI.components.RestrictedNumberField nozzleEjectionVolume1 -> nozzleEjectionVolume1
    celtech.coreUI.components.RestrictedNumberField numberOfPerimeters -> numberOfPerimeters
    celtech.coreUI.components.RestrictedNumberField topSolidInfillSpeed -> topSolidInfillSpeed
    javafx.scene.control.Slider infillExtrusionWidthSlider -> infillExtrusionWidthSlider
    javafx.scene.control.Slider perimeterExtrusionWidthSlider -> perimeterExtrusionWidthSlider
    celtech.coreUI.components.RestrictedNumberField gapFillSpeed -> gapFillSpeed
    javafx.scene.control.ComboBox fillPatternChoice -> fillPatternChoice
    celtech.coreUI.components.RestrictedNumberField infillSpeed -> infillSpeed
    celtech.coreUI.components.RestrictedNumberField minPrintSpeed -> minPrintSpeed
    celtech.coreUI.components.RestrictedNumberField infillEveryN -> infillEveryN
    celtech.coreUI.components.RestrictedNumberField solidInfillExtrusionWidth -> solidInfillExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField firstLayerExtrusionWidth -> firstLayerExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField supportPatternSpacing -> supportPatternSpacing
    celtech.coreUI.components.RestrictedNumberField maxFanSpeed -> maxFanSpeed
    celtech.coreUI.components.RestrictedNumberField topSolidInfillExtrusionWidth -> topSolidInfillExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField bridgesFanSpeed -> bridgesFanSpeed
    celtech.coreUI.components.RestrictedNumberField interfaceSpeed -> interfaceSpeed
    celtech.coreUI.components.RestrictedNumberField supportExtrusionWidth -> supportExtrusionWidth
    celtech.coreUI.components.RestrictedNumberField externalPerimeterSpeed -> externalPerimeterSpeed
    javafx.scene.control.ComboBox slicerChooser -> slicerChooser
    celtech.coreUI.components.RestrictedNumberField raftBaseLinewidth -> raftBaseLinewidth
    celtech.coreUI.components.RestrictedNumberField raftAirGapLayer0 -> raftAirGapLayer0
    celtech.coreUI.components.RestrictedNumberField interfaceLayers -> interfaceLayers
    celtech.coreUI.components.RestrictedNumberField supportXYDistance -> supportXYDistance
    celtech.coreUI.components.RestrictedNumberField supportZDistance -> supportZDistance
    javafx.scene.control.TextArea helpText -> helpText
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile temporarySettingsFile -> temporarySettingsFile
    javafx.beans.property.BooleanProperty profileNameInvalid -> profileNameInvalid
    javafx.collections.ObservableList forceNozzleFirstLayerOptions -> forceNozzleFirstLayerOptions
    javafx.collections.ObservableList nozzleOptions -> nozzleOptions
    javafx.collections.ObservableList fillPatternOptions -> fillPatternOptions
    javafx.beans.value.ChangeListener dirtyStringListener -> dirtyStringListener
    javafx.beans.value.ChangeListener dirtyBooleanListener -> dirtyBooleanListener
    float minPoint8ExtrusionWidth -> minPoint8ExtrusionWidth
    float defaultPoint8ExtrusionWidth -> defaultPoint8ExtrusionWidth
    float maxPoint8ExtrusionWidth -> maxPoint8ExtrusionWidth
    float minPoint3ExtrusionWidth -> minPoint3ExtrusionWidth
    float defaultPoint3ExtrusionWidth -> defaultPoint3ExtrusionWidth
    float maxPoint3ExtrusionWidth -> maxPoint3ExtrusionWidth
    float minDualHeadExtrusionWidth -> minDualHeadExtrusionWidth
    float maxDualHeadExtrusionWidth -> maxDualHeadExtrusionWidth
    float defaultDualHeadExtrusionWidth -> defaultDualHeadExtrusionWidth
    celtech.roboxbase.configuration.fileRepresentation.SlicerMappings slicerMappings -> slicerMappings
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.beans.value.ChangeListener headChangeListener -> headChangeListener
    boolean $assertionsDisabled -> $assertionsDisabled
    58:352:void <init>() -> <init>
    360:418:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    422:430:void headHasChanged(celtech.roboxbase.printerControl.model.Head) -> headHasChanged
    434:450:void bindToPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindToPrinter
    455:470:void setupHeadType() -> setupHeadType
    474:481:void bringValueWithinDualHeadTypeLimits(celtech.coreUI.components.RestrictedNumberField) -> bringValueWithinDualHeadTypeLimits
    485:521:void setSliderLimits(java.lang.String) -> setSliderLimits
    525:530:void setupWidgetsForHeadType() -> setupWidgetsForHeadType
    534:548:void setupPrintProfileCombo() -> setupPrintProfileCombo
    552:556:void selectFirstPrintProfile() -> selectFirstPrintProfile
    560:568:void setAndSelectPrintProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> setAndSelectPrintProfile
    572:590:void selectPrintProfile() -> selectPrintProfile
    596:607:void repopulateCmbPrintProfile() -> repopulateCmbPrintProfile
    611:625:void setupSlicerChooser() -> setupSlicerChooser
    629:635:void setupFirstLayerNozzleChoice() -> setupFirstLayerNozzleChoice
    639:665:void setFirstLayerExtrusionWidthLimits(java.lang.Number) -> setFirstLayerExtrusionWidthLimits
    669:677:void setupSupportNozzleChoice() -> setupSupportNozzleChoice
    681:707:void setSupportExtrusionWidthLimits(java.lang.Number) -> setSupportExtrusionWidthLimits
    711:717:void setupFillNozzleChoice() -> setupFillNozzleChoice
    721:786:void setInfillExtrusionWidthLimits(java.lang.Number) -> setInfillExtrusionWidthLimits
    790:796:void setupPerimeterNozzleChoice() -> setupPerimeterNozzleChoice
    800:826:void setPerimeterExtrusionWidthLimits(java.lang.Number) -> setPerimeterExtrusionWidthLimits
    830:838:void setupWidgetEditableBindings() -> setupWidgetEditableBindings
    842:1070:void setupWidgetChangeListeners() -> setupWidgetChangeListeners
    1074:1165:void updateWidgetsFromSettingsFile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> updateWidgetsFromSettingsFile
    1174:1279:void updateFieldsForSelectedSlicer(celtech.roboxbase.configuration.SlicerType) -> updateFieldsForSelectedSlicer
    1283:1383:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile getPrintProfile() -> getPrintProfile
    1388:1408:boolean validateProfileName() -> validateProfileName
    1417:1422:boolean validateData() -> validateData
    1444:1456:void whenSavePressed() -> whenSavePressed
    1460:1464:void whenNewPressed() -> whenNewPressed
    1469:1479:void whenSaveAsPressed() -> whenSaveAsPressed
    1484:1490:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile makeNewSlicerParametersFile() -> makeNewSlicerParametersFile
    1495:1501:void whenDeletePressed() -> whenDeletePressed
    1506:1506:java.lang.String getMenuTitle() -> getMenuTitle
    1512:1615:java.util.List getOperationButtons() -> getOperationButtons
    1057:1058:void lambda$setupWidgetChangeListeners$13(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.slicer.SupportPattern,celtech.roboxbase.configuration.slicer.SupportPattern) -> lambda$setupWidgetChangeListeners$13
    1008:1009:void lambda$setupWidgetChangeListeners$12(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.slicer.FillPattern,celtech.roboxbase.configuration.slicer.FillPattern) -> lambda$setupWidgetChangeListeners$12
    862:863:void lambda$setupWidgetChangeListeners$11(javafx.beans.value.ObservableValue,celtech.configuration.CustomSlicerType,celtech.configuration.CustomSlicerType) -> lambda$setupWidgetChangeListeners$11
    845:854:void lambda$setupWidgetChangeListeners$10(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$setupWidgetChangeListeners$10
    794:795:void lambda$setupPerimeterNozzleChoice$9(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupPerimeterNozzleChoice$9
    715:716:void lambda$setupFillNozzleChoice$8(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupFillNozzleChoice$8
    675:676:void lambda$setupSupportNozzleChoice$7(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupSupportNozzleChoice$7
    633:634:void lambda$setupFirstLayerNozzleChoice$6(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupFirstLayerNozzleChoice$6
    599:599:boolean lambda$repopulateCmbPrintProfile$5(java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> lambda$repopulateCmbPrintProfile$5
    544:545:void lambda$setupPrintProfileCombo$4(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> lambda$setupPrintProfileCombo$4
    535:535:javafx.scene.control.ListCell lambda$setupPrintProfileCombo$3(javafx.scene.control.ListView) -> lambda$setupPrintProfileCombo$3
    462:467:void lambda$setupHeadType$2(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$setupHeadType$2
    324:325:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$1
    318:319:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$0
    55:55:void access$000(celtech.coreUI.controllers.panels.ProfileLibraryPanelController,celtech.roboxbase.printerControl.model.Head) -> access$000
    55:55:void access$100(celtech.coreUI.controllers.panels.ProfileLibraryPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$100
    55:55:void access$200(celtech.coreUI.controllers.panels.ProfileLibraryPanelController,celtech.roboxbase.configuration.SlicerType) -> access$200
    55:55:celtech.coreUI.components.RestrictedNumberField access$300(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$300
    55:55:javafx.scene.control.Slider access$400(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$400
    55:55:celtech.coreUI.components.RestrictedNumberField access$500(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$500
    55:55:javafx.scene.control.Slider access$600(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$600
    55:55:celtech.coreUI.components.RestrictedNumberField access$700(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$700
    55:55:javafx.scene.control.Slider access$800(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$800
    55:55:celtech.coreUI.components.RestrictedNumberField access$900(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$900
    55:55:javafx.scene.control.Slider access$1000(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1000
    55:55:celtech.coreUI.components.RestrictedNumberField access$1100(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1100
    55:55:javafx.scene.control.Slider access$1200(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1200
    55:55:celtech.coreUI.components.RestrictedNumberField access$1300(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1300
    55:55:javafx.scene.control.Slider access$1400(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1400
    55:55:javafx.beans.property.BooleanProperty access$1500(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1500
    55:55:javafx.beans.property.BooleanProperty access$1600(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1600
    55:55:javafx.beans.property.BooleanProperty access$1700(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> access$1700
    55:55:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$1 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$1:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    342:342:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    346:347:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Head,celtech.roboxbase.printerControl.model.Head) -> changed
    342:342:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$10 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$10:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    930:930:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    934:935:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    930:930:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$11 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$11:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    939:939:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    943:944:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    939:939:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$12 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$12:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    950:950:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    954:955:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    950:950:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$13 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$13:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    959:959:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    963:964:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    959:959:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$14 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$14:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    969:969:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    973:974:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    969:969:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$15 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$15:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    978:978:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    982:983:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    978:978:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$16 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$16:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    1514:1514:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    1518:1518:java.lang.String getTextId() -> getTextId
    1524:1524:java.lang.String getFXMLName() -> getFXMLName
    1530:1530:java.lang.String getTooltipTextId() -> getTooltipTextId
    1536:1537:void whenClicked() -> whenClicked
    1542:1542:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    1514:1514:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$17 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$17:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    1548:1548:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    1552:1552:java.lang.String getTextId() -> getTextId
    1558:1558:java.lang.String getFXMLName() -> getFXMLName
    1564:1564:java.lang.String getTooltipTextId() -> getTooltipTextId
    1570:1571:void whenClicked() -> whenClicked
    1576:1576:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    1548:1548:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$18 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$18:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    1582:1582:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    1586:1586:java.lang.String getTextId() -> getTextId
    1592:1592:java.lang.String getFXMLName() -> getFXMLName
    1598:1598:java.lang.String getTooltipTextId() -> getTooltipTextId
    1604:1605:void whenClicked() -> whenClicked
    1610:1610:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    1582:1582:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$2 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$2:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    361:361:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    366:367:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> changed
    361:361:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$3 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$3:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    614:614:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    619:623:void changed(javafx.beans.value.ObservableValue,celtech.configuration.CustomSlicerType,celtech.configuration.CustomSlicerType) -> changed
    614:614:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$4 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$4:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    867:867:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    871:872:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    867:867:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$5 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$5:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    876:876:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    880:881:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    876:876:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$6 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$6:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    889:889:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    893:894:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    889:889:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$7 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$7:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    898:898:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    902:903:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    898:898:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$8 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$8:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    911:911:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    915:916:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    911:911:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$9 -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$9:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    920:920:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    924:925:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    920:920:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$PrintProfileCell -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$PrintProfileCell:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController this$0 -> this$0
    1425:1425:void <init>(celtech.coreUI.controllers.panels.ProfileLibraryPanelController) -> <init>
    1431:1439:void updateItem(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,boolean) -> updateItem
    1425:1425:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State -> celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State:
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State NEW -> NEW
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State CUSTOM -> CUSTOM
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State ROBOX -> ROBOX
    celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State[] $VALUES -> $VALUES
    60:60:celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State[] values() -> values
    60:60:celtech.coreUI.controllers.panels.ProfileLibraryPanelController$State valueOf(java.lang.String) -> valueOf
    60:60:void <init>(java.lang.String,int) -> <init>
    60:74:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.PurgeInsetPanelController -> celtech.coreUI.controllers.panels.PurgeInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.appManager.ModelContainerProject project -> project
    celtech.roboxbase.printerControl.model.Printer printer -> printer
    celtech.roboxbase.configuration.Filament currentMaterial0 -> currentMaterial0
    celtech.roboxbase.configuration.Filament currentMaterial1 -> currentMaterial1
    celtech.appManager.ApplicationStatus applicationStatus -> applicationStatus
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPurgeDoorIsOpenNotificationBar -> cantPurgeDoorIsOpenNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintNoFilamentNotificationBar -> cantPrintNoFilamentNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintNoFilament0NotificationBar -> cantPrintNoFilament0NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintNoFilament1NotificationBar -> cantPrintNoFilament1NotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintFilamentNotSpecifiedNotificationBar -> cantPrintFilamentNotSpecifiedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintFilament0NotSpecifiedNotificationBar -> cantPrintFilament0NotSpecifiedNotificationBar
    celtech.coreUI.components.Notifications.ConditionalNotificationBar cantPrintFilament1NotSpecifiedNotificationBar -> cantPrintFilament1NotSpecifiedNotificationBar
    javafx.beans.binding.BooleanBinding purgeTwoNozzleHeaters -> purgeTwoNozzleHeaters
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager transitionManager -> transitionManager
    java.util.Map namesToButtons -> namesToButtons
    javafx.scene.layout.VBox container -> container
    javafx.scene.Group diagram -> diagram
    javafx.scene.layout.VBox diagramContainer -> diagramContainer
    celtech.coreUI.components.buttons.GraphicButtonWithLabel startPurgeButton -> startPurgeButton
    javafx.scene.text.Text purgeStatus -> purgeStatus
    javafx.scene.text.Text resettingPrinter -> resettingPrinter
    celtech.coreUI.components.buttons.GraphicButtonWithLabel cancelPurgeButton -> cancelPurgeButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel proceedButton -> proceedButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel okButton -> okButton
    celtech.coreUI.components.buttons.GraphicButtonWithLabel backToStatus -> backToStatus
    celtech.coreUI.components.buttons.GraphicButtonWithLabel repeatButton -> repeatButton
    javafx.scene.text.Text lastMaterialTemperature0 -> lastMaterialTemperature0
    javafx.scene.layout.GridPane purgeDetailsGrid -> purgeDetailsGrid
    celtech.coreUI.components.RestrictedNumberField purgeTemperature0 -> purgeTemperature0
    javafx.scene.text.Text currentMaterialTemperature0 -> currentMaterialTemperature0
    javafx.scene.text.Text textCurrentMaterial0 -> textCurrentMaterial0
    javafx.scene.layout.GridPane purgeDetailsGrid0 -> purgeDetailsGrid0
    javafx.scene.text.Text lastMaterialTemperature1 -> lastMaterialTemperature1
    celtech.coreUI.components.RestrictedNumberField purgeTemperature1 -> purgeTemperature1
    javafx.scene.text.Text currentMaterialTemperature1 -> currentMaterialTemperature1
    javafx.scene.text.Text textCurrentMaterial1 -> textCurrentMaterial1
    javafx.scene.layout.GridPane purgeDetailsGrid1 -> purgeDetailsGrid1
    javafx.scene.control.CheckBox purgeMaterial0 -> purgeMaterial0
    javafx.scene.control.CheckBox purgeMaterial1 -> purgeMaterial1
    javafx.scene.layout.HBox topMenuStrip -> topMenuStrip
    boolean backToStatusInhibitWhenAtTop -> backToStatusInhibitWhenAtTop
    javafx.beans.value.ChangeListener purgeTempEntryListener0 -> purgeTempEntryListener0
    javafx.beans.value.ChangeListener purgeTempEntryListener1 -> purgeTempEntryListener1
    javafx.collections.MapChangeListener effectiveFilamentListener -> effectiveFilamentListener
    62:450:void <init>() -> <init>
    167:168:void start(javafx.event.ActionEvent) -> start
    173:174:void proceed(javafx.event.ActionEvent) -> proceed
    179:180:void cancel(javafx.event.ActionEvent) -> cancel
    185:186:void repeat(javafx.event.ActionEvent) -> repeat
    191:192:void okPressed(javafx.event.ActionEvent) -> okPressed
    198:208:void closeWindow(javafx.event.ActionEvent) -> closeWindow
    232:308:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    312:317:void hideCommonBordersAndBackButton() -> hideCommonBordersAndBackButton
    321:350:void resizePurgeDisplay(double,double) -> resizePurgeDisplay
    354:359:void populateNamesToButtons() -> populateNamesToButtons
    366:377:void showAppropriateButtons(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState) -> showAppropriateButtons
    381:390:void hideAllButtons() -> hideAllButtons
    394:448:void setState(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState) -> setState
    462:488:void bindPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindPrinter
    497:515:void showCurrentMaterial0() -> showCurrentMaterial0
    524:540:void showCurrentMaterial1() -> showCurrentMaterial1
    544:544:boolean headHasTwoNozzleHeaters(celtech.roboxbase.printerControl.model.Printer) -> headHasTwoNozzleHeaters
    550:631:void installTagAndDisabledStatusForButton(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager,celtech.roboxbase.printerControl.model.Printer,celtech.coreUI.components.buttons.GraphicButtonWithLabel) -> installTagAndDisabledStatusForButton
    639:647:void purgeAndPrint(celtech.appManager.ModelContainerProject,celtech.roboxbase.printerControl.model.Printer) -> purgeAndPrint
    654:673:void setPurgeForRequiredNozzles(celtech.appManager.ModelContainerProject) -> setPurgeForRequiredNozzles
    677:684:void purge(celtech.roboxbase.printerControl.model.Printer) -> purge
    688:773:void startPurge() -> startPurge
    781:803:void selectMaterial0(celtech.roboxbase.configuration.Filament) -> selectMaterial0
    811:831:void selectMaterial1(celtech.roboxbase.configuration.Filament) -> selectMaterial1
    835:835:javafx.beans.property.ReadOnlyObjectProperty purgeStateProperty() -> purgeStateProperty
    715:722:void lambda$startPurge$4(javafx.event.ActionEvent) -> lambda$startPurge$4
    703:710:void lambda$startPurge$3(javafx.event.ActionEvent) -> lambda$startPurge$3
    452:454:void lambda$new$2(javafx.collections.MapChangeListener$Change) -> lambda$new$2
    226:227:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$1
    213:221:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
    62:62:celtech.roboxbase.printerControl.model.Printer access$000(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> access$000
    62:62:void access$100(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> access$100
    62:62:void access$200(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> access$200
    62:62:javafx.scene.layout.VBox access$300(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> access$300
    62:62:void access$400(celtech.coreUI.controllers.panels.PurgeInsetPanelController,double,double) -> access$400
celtech.coreUI.controllers.panels.PurgeInsetPanelController$1 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$1:
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    247:247:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> <init>
    252:257:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    262:267:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    272:277:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
celtech.coreUI.controllers.panels.PurgeInsetPanelController$2 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$2:
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    281:281:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> <init>
    285:286:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    281:281:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.PurgeInsetPanelController$3 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$3:
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    290:290:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> <init>
    294:295:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    290:290:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.PurgeInsetPanelController$4 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$4:
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    299:299:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> <init>
    303:304:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    299:299:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.PurgeInsetPanelController$5 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$5:
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager val$transitionManager -> val$transitionManager
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    581:584:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController,celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager) -> <init>
    589:589:boolean computeValue() -> computeValue
celtech.coreUI.controllers.panels.PurgeInsetPanelController$6 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$6:
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager val$transitionManager -> val$transitionManager
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    594:597:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController,celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager) -> <init>
    602:602:boolean computeValue() -> computeValue
celtech.coreUI.controllers.panels.PurgeInsetPanelController$7 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$7:
    celtech.coreUI.controllers.panels.PurgeInsetPanelController this$0 -> this$0
    749:749:void <init>(celtech.coreUI.controllers.panels.PurgeInsetPanelController) -> <init>
    753:754:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.PurgeInsetPanelController$8 -> celtech.coreUI.controllers.panels.PurgeInsetPanelController$8:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$purge$PurgeState -> $SwitchMap$celtech$roboxbase$printerControl$model$statetransitions$purge$PurgeState
    406:406:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.ReadmeInsetPanelController -> celtech.coreUI.controllers.panels.ReadmeInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.web.WebView textContainer -> textContainer
    35:38:void <init>() -> <init>
    46:47:void backToStatusAction(javafx.event.ActionEvent) -> backToStatusAction
    52:126:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    35:35:javafx.scene.web.WebView access$000(celtech.coreUI.controllers.panels.ReadmeInsetPanelController) -> access$000
    35:35:libertysystems.stenographer.Stenographer access$100(celtech.coreUI.controllers.panels.ReadmeInsetPanelController) -> access$100
celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1 -> celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1:
    java.lang.String val$normalisedURL -> val$normalisedURL
    celtech.coreUI.controllers.panels.ReadmeInsetPanelController this$0 -> this$0
    68:68:void <init>(celtech.coreUI.controllers.panels.ReadmeInsetPanelController,java.lang.String) -> <init>
    73:122:void changed(javafx.beans.value.ObservableValue,javafx.concurrent.Worker$State,javafx.concurrent.Worker$State) -> changed
    68:68:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1$1 -> celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1$1:
    celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1 this$1 -> this$1
    81:81:void <init>(celtech.coreUI.controllers.panels.ReadmeInsetPanelController$1) -> <init>
    85:118:void handleEvent(org.w3c.dom.events.Event) -> handleEvent
celtech.coreUI.controllers.panels.RegistrationInsetPanelController -> celtech.coreUI.controllers.panels.RegistrationInsetPanelController:
    17:17:void <init>() -> <init>
    22:23:void backwardPressed(javafx.event.ActionEvent) -> backwardPressed
    30:30:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
celtech.coreUI.controllers.panels.RootScannerPanelController -> celtech.coreUI.controllers.panels.RootScannerPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.comms.RemoteServerDetector remoteServerDetector -> remoteServerDetector
    java.lang.String pinForCurrentServer -> pinForCurrentServer
    javafx.scene.layout.HBox scannerHolder -> scannerHolder
    javafx.scene.control.TableView scannedRoots -> scannedRoots
    javafx.scene.layout.VBox webViewHolder -> webViewHolder
    javafx.scene.layout.VBox connectPage -> connectPage
    javafx.scene.layout.VBox wrongVersionBox -> wrongVersionBox
    javafx.scene.control.Button disconnectButton -> disconnectButton
    javafx.scene.control.TextField pinEntryField -> pinEntryField
    javafx.scene.control.Label incorrectPINLabel -> incorrectPINLabel
    javafx.scene.control.TableColumn nameColumn -> nameColumn
    javafx.scene.control.TableColumn ipAddressColumn -> ipAddressColumn
    javafx.scene.control.TableColumn versionColumn -> versionColumn
    javafx.scene.control.TableColumn statusColumn -> statusColumn
    javafx.scene.web.WebView rootWebView -> rootWebView
    javafx.collections.ObservableList currentServers -> currentServers
    javafx.beans.value.ChangeListener serverStatusListener -> serverStatusListener
    56:121:void <init>() -> <init>
    92:99:void connectToServer(javafx.event.ActionEvent) -> connectToServer
    104:110:void disconnectFromServer(javafx.event.ActionEvent) -> disconnectFromServer
    132:137:void openWebViewOnRoot(celtech.roboxbase.comms.DetectedServer) -> openWebViewOnRoot
    150:159:void hideEverything() -> hideEverything
    163:214:void processStatus(celtech.roboxbase.comms.DetectedServer$ServerStatus) -> processStatus
    225:431:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    437:437:java.lang.String getMenuTitle() -> getMenuTitle
    443:443:java.util.List getOperationButtons() -> getOperationButtons
    449:449:void deviceDetected(celtech.roboxbase.comms.DetectedDevice) -> deviceDetected
    455:455:void deviceNoLongerPresent(celtech.roboxbase.comms.DetectedDevice) -> deviceNoLongerPresent
    374:375:void lambda$initialize$3(celtech.roboxbase.comms.DetectedServer) -> lambda$initialize$3
    357:365:void lambda$initialize$2(java.util.List,celtech.roboxbase.comms.DetectedServer) -> lambda$initialize$2
    275:282:void lambda$initialize$1(javafx.beans.value.ObservableValue,javafx.concurrent.Worker$State,javafx.concurrent.Worker$State) -> lambda$initialize$1
    249:249:javafx.scene.control.TableCell lambda$initialize$0(javafx.scene.control.TableColumn) -> lambda$initialize$0
    56:56:void access$000(celtech.coreUI.controllers.panels.RootScannerPanelController,celtech.roboxbase.comms.DetectedServer$ServerStatus) -> access$000
    56:56:libertysystems.stenographer.Stenographer access$100() -> access$100
    56:56:javafx.collections.ObservableList access$200(celtech.coreUI.controllers.panels.RootScannerPanelController) -> access$200
    56:56:javafx.scene.control.TableView access$300(celtech.coreUI.controllers.panels.RootScannerPanelController) -> access$300
    56:56:javafx.beans.value.ChangeListener access$400(celtech.coreUI.controllers.panels.RootScannerPanelController) -> access$400
    56:56:void access$500(celtech.coreUI.controllers.panels.RootScannerPanelController) -> access$500
    56:56:celtech.roboxbase.comms.RemoteServerDetector access$600(celtech.coreUI.controllers.panels.RootScannerPanelController) -> access$600
    59:63:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.RootScannerPanelController$1 -> celtech.coreUI.controllers.panels.RootScannerPanelController$1:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    122:122:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    126:127:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.DetectedServer$ServerStatus,celtech.roboxbase.comms.DetectedServer$ServerStatus) -> changed
    122:122:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.RootScannerPanelController$2 -> celtech.coreUI.controllers.panels.RootScannerPanelController$2:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    285:285:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    289:301:void changed(javafx.beans.value.ObservableValue,org.w3c.dom.Document,org.w3c.dom.Document) -> changed
    285:285:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.RootScannerPanelController$3 -> celtech.coreUI.controllers.panels.RootScannerPanelController$3:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    313:313:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    317:324:void onChanged(javafx.collections.ListChangeListener$Change) -> onChanged
celtech.coreUI.controllers.panels.RootScannerPanelController$4 -> celtech.coreUI.controllers.panels.RootScannerPanelController$4:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    328:328:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    332:344:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.DetectedServer,celtech.roboxbase.comms.DetectedServer) -> changed
    328:328:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.RootScannerPanelController$5 -> celtech.coreUI.controllers.panels.RootScannerPanelController$5:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    378:378:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    382:424:java.lang.Void call() -> call
    378:378:java.lang.Object call() -> call
    390:417:void lambda$call$0(java.util.List) -> lambda$call$0
celtech.coreUI.controllers.panels.RootScannerPanelController$6 -> celtech.coreUI.controllers.panels.RootScannerPanelController$6:
    int[] $SwitchMap$celtech$roboxbase$comms$DetectedServer$ServerStatus -> $SwitchMap$celtech$roboxbase$comms$DetectedServer$ServerStatus
    163:163:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.RootScannerPanelController$JavaBridge -> celtech.coreUI.controllers.panels.RootScannerPanelController$JavaBridge:
    celtech.coreUI.controllers.panels.RootScannerPanelController this$0 -> this$0
    139:139:void <init>(celtech.coreUI.controllers.panels.RootScannerPanelController) -> <init>
    144:145:void log(java.lang.String) -> log
celtech.coreUI.controllers.panels.SettingsInsetPanelController -> celtech.coreUI.controllers.panels.SettingsInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.HBox settingsInsetRoot -> settingsInsetRoot
    javafx.scene.control.Slider brimSlider -> brimSlider
    javafx.scene.control.ComboBox customProfileChooser -> customProfileChooser
    javafx.scene.control.ComboBox supportComboBox -> supportComboBox
    javafx.scene.layout.HBox customProfileBox -> customProfileBox
    javafx.scene.control.Label createProfileLabel -> createProfileLabel
    javafx.scene.control.Button editPrintProfileButton -> editPrintProfileButton
    javafx.scene.layout.HBox raftHBox -> raftHBox
    javafx.scene.control.CheckBox raftButton -> raftButton
    javafx.scene.layout.HBox supportHBox -> supportHBox
    javafx.scene.control.CheckBox supportButton -> supportButton
    javafx.scene.layout.HBox supportGapHBox -> supportGapHBox
    javafx.scene.control.CheckBox supportGapButton -> supportGapButton
    javafx.scene.layout.HBox brimHBox -> brimHBox
    javafx.scene.layout.HBox raftSupportBrimChooserBox -> raftSupportBrimChooserBox
    javafx.scene.control.CheckBox spiralPrintCheckbox -> spiralPrintCheckbox
    javafx.scene.layout.HBox fillDensityHBox -> fillDensityHBox
    javafx.scene.layout.HBox spiralPrintHBox -> spiralPrintHBox
    celtech.coreUI.components.RestrictedNumberField fillDensityPercentEntry -> fillDensityPercentEntry
    javafx.scene.control.Slider fillDensitySlider -> fillDensitySlider
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    celtech.appManager.Project currentProject -> currentProject
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printerSettings -> printerSettings
    java.lang.String currentHeadType -> currentHeadType
    javafx.beans.property.ObjectProperty printQuality -> printQuality
    boolean populatingForProject -> populatingForProject
    javafx.beans.property.BooleanProperty inPLACompatibilityMode -> inPLACompatibilityMode
    celtech.coreUI.components.Notifications.ConditionalNotificationBar PLACompatibilityModeNotificationBar -> PLACompatibilityModeNotificationBar
    javafx.beans.value.ChangeListener selectedPrinterChangeListener -> selectedPrinterChangeListener
    javafx.beans.value.ChangeListener applicationModeChangeListener -> applicationModeChangeListener
    javafx.collections.ListChangeListener slicerParamChangeListener -> slicerParamChangeListener
    celtech.roboxbase.printerControl.model.PrinterListChangesListener printerListChangesListener -> printerListChangesListener
    javafx.collections.MapChangeListener filamentListener -> filamentListener
    java.beans.PropertyChangeListener customSettingsListener -> customSettingsListener
    66:316:void <init>() -> <init>
    224:314:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    327:364:void setupCustomProfileChooser() -> setupCustomProfileChooser
    368:378:void populateCustomProfileChooser() -> populateCustomProfileChooser
    382:392:void whenCustomProfileChanges(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> whenCustomProfileChanges
    396:481:void setupOverrides() -> setupOverrides
    486:487:void editPrintProfile(javafx.event.ActionEvent) -> editPrintProfile
    494:501:void clearSettingsIfNoCustomProfileAvailable() -> clearSettingsIfNoCustomProfileAvailable
    505:536:void whenPrinterChanged(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterChanged
    540:545:int getNumExtruders(celtech.roboxbase.printerControl.model.Printer) -> getNumExtruders
    550:571:void updateSupportCombo(celtech.roboxbase.printerControl.model.Printer) -> updateSupportCombo
    576:587:void setProject(celtech.appManager.Project) -> setProject
    591:659:void whenProjectChanged(celtech.appManager.Project) -> whenProjectChanged
    663:666:void dealWithPrintOptimisation() -> dealWithPrintOptimisation
    670:679:void dealWithSpiralness() -> dealWithSpiralness
    683:691:void dealWithSupportGap() -> dealWithSupportGap
    695:719:void dealWithIncompatibleMaterials() -> dealWithIncompatibleMaterials
    723:734:void selectCurrentCustomSettings() -> selectCurrentCustomSettings
    738:739:void enableCustomChooser(boolean) -> enableCustomChooser
    743:745:void showPleaseCreateProfile(boolean) -> showPleaseCreateProfile
    749:795:void printQualityWidgetsUpdate(celtech.roboxbase.services.slicer.PrintQualityEnumeration) -> printQualityWidgetsUpdate
    799:805:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile getCustomSettings() -> getCustomSettings
    812:813:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    818:819:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    824:824:void whenAutoLaidOut() -> whenAutoLaidOut
    829:829:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    834:835:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    840:840:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
    845:865:void shutdownController() -> shutdownController
    618:619:void lambda$whenProjectChanged$13(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$whenProjectChanged$13
    611:612:void lambda$whenProjectChanged$12(javafx.beans.value.ObservableValue,celtech.roboxbase.services.slicer.PrintQualityEnumeration,celtech.roboxbase.services.slicer.PrintQualityEnumeration) -> lambda$whenProjectChanged$12
    474:480:void lambda$setupOverrides$11(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$setupOverrides$11
    463:469:void lambda$setupOverrides$10(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupOverrides$10
    453:459:void lambda$setupOverrides$9(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$setupOverrides$9
    441:447:void lambda$setupOverrides$8(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$setupOverrides$8
    430:436:void lambda$setupOverrides$7(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$setupOverrides$7
    416:425:void lambda$setupOverrides$6(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$setupOverrides$6
    399:411:void lambda$setupOverrides$5(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType) -> lambda$setupOverrides$5
    369:370:boolean lambda$populateCustomProfileChooser$4(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> lambda$populateCustomProfileChooser$4
    362:363:void lambda$setupCustomProfileChooser$3(javafx.collections.ListChangeListener$Change) -> lambda$setupCustomProfileChooser$3
    340:357:void lambda$setupCustomProfileChooser$2(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> lambda$setupCustomProfileChooser$2
    328:328:javafx.scene.control.ListCell lambda$setupCustomProfileChooser$1(javafx.scene.control.ListView) -> lambda$setupCustomProfileChooser$1
    318:323:void lambda$new$0(java.beans.PropertyChangeEvent) -> lambda$new$0
    66:66:void access$000(celtech.coreUI.controllers.panels.SettingsInsetPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$000
    66:66:celtech.appManager.Project access$100(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$100
    66:66:libertysystems.stenographer.Stenographer access$200(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$200
    66:66:javafx.scene.layout.HBox access$300(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$300
    66:66:celtech.roboxbase.printerControl.model.Printer access$400(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$400
    66:66:void access$500(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$500
    66:66:void access$600(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$600
    66:66:void access$700(celtech.coreUI.controllers.panels.SettingsInsetPanelController,boolean) -> access$700
    66:66:void access$800(celtech.coreUI.controllers.panels.SettingsInsetPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$800
    66:66:celtech.coreUI.components.RestrictedNumberField access$900(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$900
    66:66:javafx.scene.control.Slider access$1000(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1000
    66:66:javafx.scene.control.CheckBox access$1100(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1100
    66:66:javafx.scene.control.CheckBox access$1200(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1200
    66:66:javafx.scene.control.CheckBox access$1300(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1300
    66:66:javafx.scene.control.Slider access$1400(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1400
    66:66:javafx.scene.layout.HBox access$1500(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1500
    66:66:javafx.scene.layout.HBox access$1600(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1600
    66:66:javafx.scene.layout.HBox access$1700(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1700
    66:66:javafx.scene.control.ComboBox access$1800(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1800
    66:66:javafx.scene.layout.HBox access$1900(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$1900
    66:66:javafx.scene.layout.HBox access$2000(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> access$2000
    66:66:boolean access$2102(celtech.coreUI.controllers.panels.SettingsInsetPanelController,boolean) -> access$2102
celtech.coreUI.controllers.panels.SettingsInsetPanelController$1 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$1:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    143:143:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    147:148:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> changed
    143:143:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SettingsInsetPanelController$10 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$10:
    int[] $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration -> $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration
    751:751:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.SettingsInsetPanelController$2 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$2:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    152:152:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    156:171:void changed(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> changed
    152:152:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SettingsInsetPanelController$3 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$3:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    175:175:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    180:183:void onChanged(javafx.collections.ListChangeListener$Change) -> onChanged
celtech.coreUI.controllers.panels.SettingsInsetPanelController$4 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$4:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    187:187:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    191:196:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    201:205:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
celtech.coreUI.controllers.panels.SettingsInsetPanelController$5 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$5:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    210:210:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    214:215:void onChanged(javafx.collections.MapChangeListener$Change) -> onChanged
celtech.coreUI.controllers.panels.SettingsInsetPanelController$6 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$6:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    255:255:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    259:260:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> changed
    255:255:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SettingsInsetPanelController$7 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$7:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    263:263:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    267:268:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    263:263:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SettingsInsetPanelController$8 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$8:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    272:272:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    276:292:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    272:272:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SettingsInsetPanelController$9 -> celtech.coreUI.controllers.panels.SettingsInsetPanelController$9:
    celtech.coreUI.controllers.panels.SettingsInsetPanelController this$0 -> this$0
    629:629:void <init>(celtech.coreUI.controllers.panels.SettingsInsetPanelController) -> <init>
    633:637:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType) -> changed
    629:629:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.SidePanelManager -> celtech.coreUI.controllers.panels.SidePanelManager:
    void configure(javafx.fxml.Initializable) -> configure
celtech.coreUI.controllers.panels.SpinnerController -> celtech.coreUI.controllers.panels.SpinnerController:
    javafx.scene.Node outerArcs -> outerArcs
    javafx.scene.Node innerArcs -> innerArcs
    17:17:void <init>() -> <init>
    30:30:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
celtech.coreUI.controllers.panels.TimeCostInsetPanelController -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.HBox timeCostInsetRoot -> timeCostInsetRoot
    javafx.scene.control.Label lblDraftTime -> lblDraftTime
    javafx.scene.control.Label lblNormalTime -> lblNormalTime
    javafx.scene.control.Label lblFineTime -> lblFineTime
    javafx.scene.control.Label lblCustomTime -> lblCustomTime
    javafx.scene.control.Label lblDraftWeight -> lblDraftWeight
    javafx.scene.control.Label lblNormalWeight -> lblNormalWeight
    javafx.scene.control.Label lblFineWeight -> lblFineWeight
    javafx.scene.control.Label lblCustomWeight -> lblCustomWeight
    javafx.scene.control.Label lblDraftCost -> lblDraftCost
    javafx.scene.control.Label lblNormalCost -> lblNormalCost
    javafx.scene.control.Label lblFineCost -> lblFineCost
    javafx.scene.control.Label lblCustomCost -> lblCustomCost
    javafx.scene.control.RadioButton rbDraft -> rbDraft
    javafx.scene.control.RadioButton rbNormal -> rbNormal
    javafx.scene.control.RadioButton rbFine -> rbFine
    javafx.scene.control.RadioButton rbCustom -> rbCustom
    javafx.scene.control.Label headType -> headType
    javafx.scene.control.ToggleGroup qualityToggleGroup -> qualityToggleGroup
    celtech.appManager.Project currentProject -> currentProject
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printerSettings -> printerSettings
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    java.lang.String currentHeadType -> currentHeadType
    celtech.coreUI.controllers.panels.TimeCostThreadManager timeCostThreadManager -> timeCostThreadManager
    javafx.collections.MapChangeListener effectiveFilamentListener -> effectiveFilamentListener
    celtech.roboxbase.printerControl.model.PrinterListChangesListener printerListChangesListener -> printerListChangesListener
    javafx.beans.value.ChangeListener selectedPrinterChangeListener -> selectedPrinterChangeListener
    javafx.beans.value.ChangeListener applicationModeChangeListener -> applicationModeChangeListener
    celtech.appManager.Project$ProjectChangesListener projectChangesListener -> projectChangesListener
    50:157:void <init>() -> <init>
    187:208:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    212:225:void updateHeadType(celtech.roboxbase.printerControl.model.Printer) -> updateHeadType
    229:244:void setupQualityRadioButtons() -> setupQualityRadioButtons
    248:249:void unbindProject(celtech.appManager.Project) -> unbindProject
    255:299:void bindProject(celtech.appManager.Project) -> bindProject
    304:306:void setProject(celtech.appManager.Project) -> setProject
    310:320:void whenProjectChanged(celtech.appManager.Project) -> whenProjectChanged
    326:344:void clearPrintJobDirectories() -> clearPrintJobDirectories
    354:471:void updateFields(celtech.appManager.Project) -> updateFields
    480:520:void updateFieldsForProfile(celtech.appManager.Project,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,javafx.scene.control.Label,javafx.scene.control.Label,javafx.scene.control.Label,celtech.roboxbase.utils.tasks.Cancellable) -> updateFieldsForProfile
    524:539:void updatePrintQuality(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> updatePrintQuality
    545:562:void shutdownController() -> shutdownController
    514:517:void lambda$updateFieldsForProfile$3(javafx.scene.control.Label,java.lang.String,javafx.scene.control.Label,javafx.scene.control.Label) -> lambda$updateFieldsForProfile$3
    489:492:void lambda$updateFieldsForProfile$2(javafx.scene.control.Label,java.lang.String,javafx.scene.control.Label,javafx.scene.control.Label) -> lambda$updateFieldsForProfile$2
    415:464:void lambda$updateFields$1(celtech.roboxbase.utils.tasks.Cancellable,celtech.appManager.Project) -> lambda$updateFields$1
    242:243:void lambda$setupQualityRadioButtons$0(javafx.beans.value.ObservableValue,javafx.scene.control.Toggle,javafx.scene.control.Toggle) -> lambda$setupQualityRadioButtons$0
    50:50:celtech.appManager.Project access$000(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> access$000
    50:50:void access$100(celtech.coreUI.controllers.panels.TimeCostInsetPanelController,celtech.appManager.Project) -> access$100
    50:50:celtech.roboxbase.printerControl.model.Printer access$200(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> access$200
    50:50:void access$300(celtech.coreUI.controllers.panels.TimeCostInsetPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$300
    50:50:javafx.collections.MapChangeListener access$400(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> access$400
    50:50:celtech.roboxbase.printerControl.model.Printer access$202(celtech.coreUI.controllers.panels.TimeCostInsetPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$202
    50:50:javafx.scene.layout.HBox access$500(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> access$500
    50:50:celtech.coreUI.controllers.panels.TimeCostThreadManager access$600(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> access$600
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$1 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$1:
    celtech.coreUI.controllers.panels.TimeCostInsetPanelController this$0 -> this$0
    104:104:void <init>(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> <init>
    109:110:void onChanged(javafx.collections.MapChangeListener$Change) -> onChanged
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$2 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$2:
    celtech.coreUI.controllers.panels.TimeCostInsetPanelController this$0 -> this$0
    114:114:void <init>(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> <init>
    118:122:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    127:131:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$3 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$3:
    celtech.coreUI.controllers.panels.TimeCostInsetPanelController this$0 -> this$0
    135:135:void <init>(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> <init>
    139:154:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> changed
    135:135:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$4 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$4:
    celtech.coreUI.controllers.panels.TimeCostInsetPanelController this$0 -> this$0
    158:158:void <init>(celtech.coreUI.controllers.panels.TimeCostInsetPanelController) -> <init>
    162:176:void changed(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> changed
    158:158:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$5 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$5:
    celtech.appManager.Project val$project -> val$project
    celtech.coreUI.controllers.panels.TimeCostInsetPanelController this$0 -> this$0
    258:258:void <init>(celtech.coreUI.controllers.panels.TimeCostInsetPanelController,celtech.appManager.Project) -> <init>
    263:264:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    269:270:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    275:275:void whenAutoLaidOut() -> whenAutoLaidOut
    280:281:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    286:287:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    292:293:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
celtech.coreUI.controllers.panels.TimeCostInsetPanelController$6 -> celtech.coreUI.controllers.panels.TimeCostInsetPanelController$6:
    int[] $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration -> $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration
    524:524:void <clinit>() -> <clinit>
celtech.coreUI.controllers.panels.TimeCostThreadManager -> celtech.coreUI.controllers.panels.TimeCostThreadManager:
    java.util.concurrent.ExecutorService executorService -> executorService
    java.util.concurrent.Future timeCostFuture -> timeCostFuture
    celtech.roboxbase.utils.tasks.Cancellable cancellable -> cancellable
    celtech.coreUI.controllers.panels.TimeCostThreadManager instance -> instance
    26:34:void <init>() -> <init>
    38:43:celtech.coreUI.controllers.panels.TimeCostThreadManager getInstance() -> getInstance
    49:55:void cancelRunningTimeCostTasks() -> cancelRunningTimeCostTasks
    59:69:void cancelRunningTimeCostTasksAndRun(java.lang.Runnable,celtech.roboxbase.utils.tasks.Cancellable) -> cancelRunningTimeCostTasksAndRun
    64:68:void lambda$cancelRunningTimeCostTasksAndRun$1(java.lang.Runnable) -> lambda$cancelRunningTimeCostTasksAndRun$1
    29:31:java.lang.Thread lambda$new$0(java.lang.Runnable) -> lambda$new$0
celtech.coreUI.controllers.panels.WelcomeInsetPanelController -> celtech.coreUI.controllers.panels.WelcomeInsetPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.web.WebView textContainer -> textContainer
    35:39:void <init>() -> <init>
    47:48:void backToStatusAction(javafx.event.ActionEvent) -> backToStatusAction
    53:127:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    35:35:javafx.scene.web.WebView access$000(celtech.coreUI.controllers.panels.WelcomeInsetPanelController) -> access$000
    35:35:libertysystems.stenographer.Stenographer access$100(celtech.coreUI.controllers.panels.WelcomeInsetPanelController) -> access$100
celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1 -> celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1:
    java.lang.String val$normalisedURL -> val$normalisedURL
    celtech.coreUI.controllers.panels.WelcomeInsetPanelController this$0 -> this$0
    69:69:void <init>(celtech.coreUI.controllers.panels.WelcomeInsetPanelController,java.lang.String) -> <init>
    74:123:void changed(javafx.beans.value.ObservableValue,javafx.concurrent.Worker$State,javafx.concurrent.Worker$State) -> changed
    69:69:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1$1 -> celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1$1:
    celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1 this$1 -> this$1
    82:82:void <init>(celtech.coreUI.controllers.panels.WelcomeInsetPanelController$1) -> <init>
    86:119:void handleEvent(org.w3c.dom.events.Event) -> handleEvent
celtech.coreUI.controllers.panels.userpreferences.CurrencySymbolListCell -> celtech.coreUI.controllers.panels.userpreferences.CurrencySymbolListCell:
    10:10:void <init>() -> <init>
    16:24:void updateItem(celtech.configuration.units.CurrencySymbol,boolean) -> updateItem
    28:30:void clearContent() -> clearContent
    34:35:void addContent(celtech.configuration.units.CurrencySymbol) -> addContent
    10:10:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.controllers.panels.userpreferences.CurrencySymbolPreference -> celtech.coreUI.controllers.panels.userpreferences.CurrencySymbolPreference:
    celtech.configuration.UserPreferences userPreferences -> userPreferences
    javafx.scene.control.ComboBox control -> control
    25:44:void <init>(celtech.configuration.UserPreferences) -> <init>
    49:50:void updateValueFromControl() -> updateValueFromControl
    55:56:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    61:61:javafx.scene.control.Control getControl() -> getControl
    67:67:java.lang.String getDescription() -> getDescription
    73:75:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    42:43:void lambda$new$1(javafx.beans.value.ObservableValue,celtech.configuration.units.CurrencySymbol,celtech.configuration.units.CurrencySymbol) -> lambda$new$1
    34:34:javafx.scene.control.ListCell lambda$new$0(javafx.scene.control.ListView) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.FloatingPointPreference -> celtech.coreUI.controllers.panels.userpreferences.FloatingPointPreference:
    celtech.coreUI.components.RestrictedNumberField control -> control
    javafx.beans.property.FloatProperty floatProperty -> floatProperty
    java.lang.String caption -> caption
    26:40:void <init>(javafx.beans.property.FloatProperty,int,int,boolean,java.lang.String) -> <init>
    45:49:void updateValueFromControl() -> updateValueFromControl
    54:55:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    60:60:javafx.scene.control.Control getControl() -> getControl
    66:66:java.lang.String getDescription() -> getDescription
    72:74:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    38:39:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.IntegerPreference -> celtech.coreUI.controllers.panels.userpreferences.IntegerPreference:
    celtech.coreUI.components.RestrictedNumberField control -> control
    javafx.beans.property.IntegerProperty integerProperty -> integerProperty
    java.lang.String caption -> caption
    23:37:void <init>(javafx.beans.property.IntegerProperty,java.lang.String) -> <init>
    42:46:void updateValueFromControl() -> updateValueFromControl
    51:52:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    57:57:javafx.scene.control.Control getControl() -> getControl
    63:63:java.lang.String getDescription() -> getDescription
    69:71:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    35:36:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.LanguagePreference -> celtech.coreUI.controllers.panels.userpreferences.LanguagePreference:
    javafx.scene.control.ComboBox control -> control
    celtech.configuration.UserPreferences userPreferences -> userPreferences
    java.lang.String SYSTEM_DEFAULT -> SYSTEM_DEFAULT
    30:61:void <init>(celtech.configuration.UserPreferences) -> <init>
    66:85:void updateValueFromControl() -> updateValueFromControl
    91:101:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    106:106:javafx.scene.control.Control getControl() -> getControl
    112:112:java.lang.String getDescription() -> getDescription
    117:145:void setupCellFactory(javafx.scene.control.ComboBox) -> setupCellFactory
    150:152:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    59:60:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> lambda$new$1
    43:51:int lambda$new$0(java.lang.Object,java.lang.Object) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1 -> celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1:
    celtech.coreUI.controllers.panels.userpreferences.LanguagePreference this$0 -> this$0
    118:118:void <init>(celtech.coreUI.controllers.panels.userpreferences.LanguagePreference) -> <init>
    122:122:javafx.scene.control.ListCell call(javafx.scene.control.ListView) -> call
    118:118:java.lang.Object call(java.lang.Object) -> call
celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1$1 -> celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1$1:
    celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1 this$1 -> this$1
    123:123:void <init>(celtech.coreUI.controllers.panels.userpreferences.LanguagePreference$1) -> <init>
    127:138:void updateItem(java.lang.Object,boolean) -> updateItem
celtech.coreUI.controllers.panels.userpreferences.LogLevelPreference -> celtech.coreUI.controllers.panels.userpreferences.LogLevelPreference:
    javafx.scene.control.ComboBox control -> control
    celtech.configuration.UserPreferences userPreferences -> userPreferences
    22:36:void <init>(celtech.configuration.UserPreferences) -> <init>
    41:42:void updateValueFromControl() -> updateValueFromControl
    47:48:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    53:53:javafx.scene.control.Control getControl() -> getControl
    59:59:java.lang.String getDescription() -> getDescription
    65:67:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    34:35:void lambda$new$0(javafx.beans.value.ObservableValue,libertysystems.stenographer.LogLevel,libertysystems.stenographer.LogLevel) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.PasswordPreference -> celtech.coreUI.controllers.panels.userpreferences.PasswordPreference:
    javafx.scene.control.TextField control -> control
    javafx.beans.property.StringProperty stringProperty -> stringProperty
    java.lang.String caption -> caption
    23:40:void <init>(javafx.beans.property.StringProperty,java.lang.String) -> <init>
    45:49:void updateValueFromControl() -> updateValueFromControl
    54:55:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    60:60:javafx.scene.control.Control getControl() -> getControl
    66:66:java.lang.String getDescription() -> getDescription
    72:74:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    38:39:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$1
    33:34:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.Preferences -> celtech.coreUI.controllers.panels.userpreferences.Preferences:
    19:19:void <init>() -> <init>
    25:39:java.util.List createPrintingPreferences(celtech.configuration.UserPreferences) -> createPrintingPreferences
    45:68:java.util.List createEnvironmentPreferences(celtech.configuration.UserPreferences) -> createEnvironmentPreferences
    74:107:java.util.List createAdvancedPreferences(celtech.configuration.UserPreferences) -> createAdvancedPreferences
    113:144:java.util.List createTimelapsePreferences(celtech.configuration.UserPreferences) -> createTimelapsePreferences
    150:165:java.util.List createRootPreferences(celtech.configuration.UserPreferences) -> createRootPreferences
celtech.coreUI.controllers.panels.userpreferences.Preferences$1 -> celtech.coreUI.controllers.panels.userpreferences.Preferences$1:
    celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference val$showDiagnosticsPref -> val$showDiagnosticsPref
    celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference val$showGCodePref -> val$showGCodePref
    celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference val$showAdjustmentsPref -> val$showAdjustmentsPref
    92:92:void <init>(celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference,celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference,celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference) -> <init>
    96:99:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    92:92:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.panels.userpreferences.SlicerTypePreference -> celtech.coreUI.controllers.panels.userpreferences.SlicerTypePreference:
    javafx.scene.control.ComboBox control -> control
    celtech.configuration.UserPreferences userPreferences -> userPreferences
    24:39:void <init>(celtech.configuration.UserPreferences) -> <init>
    44:46:void updateValueFromControl() -> updateValueFromControl
    51:57:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    62:62:javafx.scene.control.Control getControl() -> getControl
    68:68:java.lang.String getDescription() -> getDescription
    74:76:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    37:38:void lambda$new$0(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.SlicerType,celtech.roboxbase.configuration.SlicerType) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.StringPreference -> celtech.coreUI.controllers.panels.userpreferences.StringPreference:
    javafx.scene.control.TextField control -> control
    javafx.beans.property.StringProperty stringProperty -> stringProperty
    java.lang.String caption -> caption
    22:39:void <init>(javafx.beans.property.StringProperty,java.lang.String) -> <init>
    44:48:void updateValueFromControl() -> updateValueFromControl
    53:54:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    59:59:javafx.scene.control.Control getControl() -> getControl
    65:65:java.lang.String getDescription() -> getDescription
    71:73:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    37:38:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$1
    32:33:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$new$0
celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference -> celtech.coreUI.controllers.panels.userpreferences.TickBoxPreference:
    javafx.scene.control.CheckBox control -> control
    javafx.beans.property.BooleanProperty booleanProperty -> booleanProperty
    java.lang.String caption -> caption
    22:39:void <init>(javafx.beans.property.BooleanProperty,java.lang.String) -> <init>
    44:48:void updateValueFromControl() -> updateValueFromControl
    53:54:void populateControlWithCurrentValue() -> populateControlWithCurrentValue
    59:59:javafx.scene.control.Control getControl() -> getControl
    65:65:java.lang.String getDescription() -> getDescription
    71:73:void disableProperty(javafx.beans.value.ObservableValue) -> disableProperty
    77:77:javafx.beans.property.BooleanProperty getSelectedProperty() -> getSelectedProperty
    37:38:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$1
    32:33:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$0
celtech.coreUI.controllers.popups.PopupCommandReceiver -> celtech.coreUI.controllers.popups.PopupCommandReceiver:
    void triggerSaveAs(java.lang.Object) -> triggerSaveAs
    void triggerSave(java.lang.Object) -> triggerSave
celtech.coreUI.controllers.popups.PopupCommandTransmitter -> celtech.coreUI.controllers.popups.PopupCommandTransmitter:
    void provideReceiver(celtech.coreUI.controllers.popups.PopupCommandReceiver) -> provideReceiver
celtech.coreUI.controllers.popups.ResetHeadController -> celtech.coreUI.controllers.popups.ResetHeadController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.FlowPane headHolder -> headHolder
    javafx.scene.control.ScrollPane scroller -> scroller
    33:36:void <init>() -> <init>
    47:48:void cancel() -> cancel
    53:132:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    82:129:void lambda$initialize$1(celtech.roboxbase.configuration.fileRepresentation.HeadFile,javafx.event.ActionEvent) -> lambda$initialize$1
    55:55:int lambda$initialize$0(celtech.roboxbase.configuration.fileRepresentation.HeadFile,celtech.roboxbase.configuration.fileRepresentation.HeadFile) -> lambda$initialize$0
celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController -> celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController:
    celtech.roboxbase.printerControl.model.Printer connectedPrinter -> connectedPrinter
    javafx.scene.control.RadioButton rbXLimit -> rbXLimit
    javafx.scene.control.RadioButton rbYLimit -> rbYLimit
    javafx.scene.control.RadioButton rbZLimit -> rbZLimit
    javafx.scene.control.RadioButton rbZPositiveLimit -> rbZPositiveLimit
    javafx.scene.control.RadioButton rbDoor -> rbDoor
    javafx.scene.control.RadioButton rbReel -> rbReel
    javafx.scene.control.RadioButton rbLoaded0 -> rbLoaded0
    javafx.scene.control.RadioButton rbIndex0 -> rbIndex0
    javafx.scene.control.Label extruder0Label -> extruder0Label
    javafx.scene.control.Label extruder0LoadedLabel -> extruder0LoadedLabel
    javafx.scene.control.Label extruder0IndexLabel -> extruder0IndexLabel
    javafx.scene.control.Label extruder1Label -> extruder1Label
    javafx.scene.control.Label extruder1LoadedLabel -> extruder1LoadedLabel
    javafx.scene.control.Label extruder1IndexLabel -> extruder1IndexLabel
    javafx.scene.control.RadioButton rbLoaded1 -> rbLoaded1
    javafx.scene.control.RadioButton rbIndex1 -> rbIndex1
    21:24:void <init>() -> <init>
    83:112:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    116:149:void unbindFromPrinter(celtech.roboxbase.printerControl.model.Printer) -> unbindFromPrinter
    153:201:void bindToPrinter(celtech.roboxbase.printerControl.model.Printer) -> bindToPrinter
    21:21:celtech.roboxbase.printerControl.model.Printer access$000(celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController) -> access$000
    21:21:void access$100(celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$100
    21:21:void access$200(celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController,celtech.roboxbase.printerControl.model.Printer) -> access$200
celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController$1 -> celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController$1:
    celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController this$0 -> this$0
    84:84:void <init>(celtech.coreUI.controllers.utilityPanels.DiagnosticPanelController) -> <init>
    90:99:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> changed
    84:84:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.utilityPanels.HeadEEPROMController -> celtech.coreUI.controllers.utilityPanels.HeadEEPROMController:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.coreUI.components.RestrictedTextField nozzle2ZOverrun -> nozzle2ZOverrun
    celtech.coreUI.components.RestrictedTextField headThermistorTCal -> headThermistorTCal
    celtech.coreUI.components.RestrictedTextField headThermistorBeta -> headThermistorBeta
    celtech.coreUI.components.RestrictedTextField lastFilamentTemperature0 -> lastFilamentTemperature0
    celtech.coreUI.components.RestrictedTextField lastFilamentTemperature1 -> lastFilamentTemperature1
    celtech.coreUI.components.RestrictedTextField nozzle1ZOverrun -> nozzle1ZOverrun
    celtech.coreUI.components.RestrictedTextField headMaxTemperature -> headMaxTemperature
    celtech.coreUI.components.RestrictedTextField nozzle2XOffset -> nozzle2XOffset
    celtech.coreUI.components.RestrictedTextField nozzle1YOffset -> nozzle1YOffset
    celtech.coreUI.components.RestrictedTextField nozzle2YOffset -> nozzle2YOffset
    celtech.coreUI.components.RestrictedTextField nozzle1XOffset -> nozzle1XOffset
    celtech.coreUI.components.RestrictedTextField headHourCounter -> headHourCounter
    celtech.coreUI.components.RestrictedTextField nozzle2BOffset -> nozzle2BOffset
    javafx.scene.layout.HBox enterSerialNumberHBox -> enterSerialNumberHBox
    javafx.scene.image.ImageView serialValidImage -> serialValidImage
    javafx.scene.image.ImageView serialInvalidImage -> serialInvalidImage
    celtech.coreUI.components.RestrictedTextField headTypeCodeEntry -> headTypeCodeEntry
    celtech.coreUI.components.RestrictedTextField printerWeek -> printerWeek
    celtech.coreUI.components.RestrictedTextField printerYear -> printerYear
    celtech.coreUI.components.RestrictedTextField printerPONumber -> printerPONumber
    celtech.coreUI.components.RestrictedTextField printerSerialNumber -> printerSerialNumber
    celtech.coreUI.components.RestrictedTextField printerChecksum -> printerChecksum
    celtech.coreUI.components.RestrictedTextField headTypeCode -> headTypeCode
    celtech.coreUI.components.RestrictedTextField nozzle1BOffset -> nozzle1BOffset
    celtech.coreUI.components.RestrictedTextField headType -> headType
    javafx.scene.layout.GridPane headEEPROMOffsets -> headEEPROMOffsets
    javafx.scene.layout.VBox headFullContainer -> headFullContainer
    celtech.coreUI.components.ModalDialog eepromCommsError -> eepromCommsError
    javafx.beans.property.BooleanProperty offsetFieldsDirty -> offsetFieldsDirty
    javafx.beans.property.BooleanProperty canSave -> canSave
    celtech.roboxbase.printerControl.model.Printer selectedPrinter -> selectedPrinter
    javafx.beans.property.BooleanProperty canResetHeadProperty -> canResetHeadProperty
    org.controlsfx.validation.ValidationSupport serialNumberValidation -> serialNumberValidation
    javafx.beans.property.BooleanProperty serialValidProperty -> serialValidProperty
    javafx.beans.property.BooleanProperty ignoreSerialValidationProperty -> ignoreSerialValidationProperty
    javafx.beans.value.ChangeListener headEEPROMStateChangeListener -> headEEPROMStateChangeListener
    javafx.beans.value.ChangeListener headChangeListener -> headChangeListener
    48:559:void <init>() -> <init>
    150:151:void whenResetToDefaultsPressed() -> whenResetToDefaultsPressed
    159:167:float getFloatValueOrZero(celtech.coreUI.components.RestrictedTextField) -> getFloatValueOrZero
    174:240:void whenSavePressed() -> whenSavePressed
    246:251:void readPrinterID(javafx.event.ActionEvent) -> readPrinterID
    261:335:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    339:346:void validateHeadSerial() -> validateHeadSerial
    350:432:void updateFieldsFromAttachedHead(celtech.roboxbase.printerControl.model.Head) -> updateFieldsFromAttachedHead
    436:464:void updateFieldsForNoHead() -> updateFieldsForNoHead
    468:495:void setSelectedPrinter(celtech.roboxbase.printerControl.model.Printer) -> setSelectedPrinter
    500:502:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    507:508:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    513:520:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    525:532:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    537:537:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    542:542:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    547:547:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    552:552:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    557:557:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    575:604:void listenForHeadChanges(celtech.roboxbase.printerControl.model.Head) -> listenForHeadChanges
    608:623:void removeHeadChangeListeners(celtech.roboxbase.printerControl.model.Head) -> removeHeadChangeListeners
    628:628:java.lang.String getMenuTitle() -> getMenuTitle
    634:704:java.util.List getOperationButtons() -> getOperationButtons
    577:578:void lambda$listenForHeadChanges$3(celtech.roboxbase.printerControl.model.Head,javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> lambda$listenForHeadChanges$3
    313:318:void lambda$initialize$2(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$2
    296:298:void lambda$initialize$1(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$initialize$1
    267:268:void lambda$initialize$0(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> lambda$initialize$0
    48:48:javafx.scene.image.ImageView access$000(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> access$000
    48:48:javafx.scene.image.ImageView access$100(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> access$100
    48:48:javafx.beans.property.BooleanProperty access$200(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> access$200
    48:48:javafx.beans.property.BooleanProperty access$300(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> access$300
celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$1 -> celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$1:
    celtech.coreUI.controllers.utilityPanels.HeadEEPROMController this$0 -> this$0
    285:285:void <init>(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> <init>
    289:291:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    285:285:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$2 -> celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$2:
    celtech.coreUI.controllers.utilityPanels.HeadEEPROMController this$0 -> this$0
    560:560:void <init>(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> <init>
    564:568:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.comms.remote.EEPROMState,celtech.roboxbase.comms.remote.EEPROMState) -> changed
    560:560:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$3 -> celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$3:
    celtech.coreUI.controllers.utilityPanels.HeadEEPROMController this$0 -> this$0
    636:636:void <init>(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> <init>
    640:640:java.lang.String getTextId() -> getTextId
    646:646:java.lang.String getFXMLName() -> getFXMLName
    652:652:java.lang.String getTooltipTextId() -> getTooltipTextId
    658:659:void whenClicked() -> whenClicked
    664:664:javafx.beans.property.BooleanProperty whenEnabled() -> whenEnabled
    636:636:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$4 -> celtech.coreUI.controllers.utilityPanels.HeadEEPROMController$4:
    celtech.coreUI.controllers.utilityPanels.HeadEEPROMController this$0 -> this$0
    671:671:void <init>(celtech.coreUI.controllers.utilityPanels.HeadEEPROMController) -> <init>
    675:675:java.lang.String getTextId() -> getTextId
    681:681:java.lang.String getFXMLName() -> getFXMLName
    687:687:java.lang.String getTooltipTextId() -> getTooltipTextId
    693:694:void whenClicked() -> whenClicked
    699:699:javafx.beans.value.ObservableBooleanValue whenEnabled() -> whenEnabled
celtech.coreUI.controllers.utilityPanels.OuterPanelController -> celtech.coreUI.controllers.utilityPanels.OuterPanelController:
    javafx.scene.layout.VBox rootPane -> rootPane
    javafx.scene.control.Label title -> title
    javafx.scene.layout.Pane crossButton -> crossButton
    javafx.beans.property.BooleanProperty visibilityProperty -> visibilityProperty
    20:20:void <init>() -> <init>
    39:39:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    43:54:void setPreferredVisibility(javafx.beans.property.BooleanProperty) -> setPreferredVisibility
    58:60:void setInnerPanel(javafx.scene.Node) -> setInnerPanel
    64:65:void setTitle(java.lang.String) -> setTitle
    51:52:void lambda$setPreferredVisibility$0(javafx.scene.input.MouseEvent) -> lambda$setPreferredVisibility$0
celtech.coreUI.controllers.utilityPanels.ProjectPanelController -> celtech.coreUI.controllers.utilityPanels.ProjectPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.VBox projectPanel -> projectPanel
    javafx.scene.control.Label projectName -> projectName
    javafx.scene.control.Label profileName -> profileName
    javafx.scene.control.Label layerHeight -> layerHeight
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.beans.value.ChangeListener printJobChangeListener -> printJobChangeListener
    29:48:void <init>() -> <init>
    55:83:void updateDisplay(celtech.roboxbase.printerControl.PrintJob) -> updateDisplay
    91:111:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    93:108:void lambda$initialize$1(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$1
    50:51:void lambda$new$0(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrintJob,celtech.roboxbase.printerControl.PrintJob) -> lambda$new$0
celtech.coreUI.controllers.utilityPanels.TweakPanelController -> celtech.coreUI.controllers.utilityPanels.TweakPanelController:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.layout.VBox container -> container
    javafx.scene.control.Label printSpeed1Display -> printSpeed1Display
    javafx.scene.control.Label printSpeed2Display -> printSpeed2Display
    javafx.scene.layout.VBox printSpeed1Box -> printSpeed1Box
    javafx.scene.layout.VBox printSpeed2Box -> printSpeed2Box
    javafx.scene.control.Slider speedMultiplier1Slider -> speedMultiplier1Slider
    javafx.scene.control.Slider speedMultiplier2Slider -> speedMultiplier2Slider
    javafx.scene.layout.VBox material1VBox -> material1VBox
    javafx.scene.layout.VBox extrusionMultiplier1Box -> extrusionMultiplier1Box
    javafx.scene.control.Label extrusionMultiplier1Text -> extrusionMultiplier1Text
    javafx.scene.control.Label extrusionMultiplier1Display -> extrusionMultiplier1Display
    javafx.scene.control.Slider extrusionMultiplier1Slider -> extrusionMultiplier1Slider
    javafx.scene.layout.VBox material2VBox -> material2VBox
    javafx.scene.layout.VBox extrusionMultiplier2Box -> extrusionMultiplier2Box
    javafx.scene.control.Label extrusionMultiplier2Display -> extrusionMultiplier2Display
    javafx.scene.control.Slider extrusionMultiplier2Slider -> extrusionMultiplier2Slider
    javafx.scene.control.Label material1Text -> material1Text
    javafx.scene.control.Label material1Display -> material1Display
    javafx.scene.control.Slider material1TemperatureSlider -> material1TemperatureSlider
    javafx.scene.control.Label material2Display -> material2Display
    javafx.scene.control.Slider material2TemperatureSlider -> material2TemperatureSlider
    javafx.scene.control.Label bedDisplay -> bedDisplay
    javafx.scene.control.Slider bedTemperatureSlider -> bedTemperatureSlider
    celtech.roboxbase.printerControl.model.Printer currentPrinter -> currentPrinter
    javafx.beans.value.ChangeListener printQueueStatusListener -> printQueueStatusListener
    celtech.roboxbase.printerControl.PrintJob currentPrintJob -> currentPrintJob
    celtech.roboxbase.postprocessor.PrintJobStatistics currentPrintJobStatistics -> currentPrintJobStatistics
    boolean inhibitFeedrate1 -> inhibitFeedrate1
    javafx.beans.value.ChangeListener feedRate1ChangeListener -> feedRate1ChangeListener
    boolean inhibitFeedrate2 -> inhibitFeedrate2
    javafx.beans.value.ChangeListener feedRate2ChangeListener -> feedRate2ChangeListener
    javafx.beans.value.ChangeListener speedMultiplier1SliderListener -> speedMultiplier1SliderListener
    javafx.beans.value.ChangeListener speedMultiplier2SliderListener -> speedMultiplier2SliderListener
    boolean inhibitBed -> inhibitBed
    javafx.beans.value.ChangeListener bedTargetTemperatureChangeListener -> bedTargetTemperatureChangeListener
    javafx.beans.value.ChangeListener bedTempSliderListener -> bedTempSliderListener
    boolean inhibitExtrusion1 -> inhibitExtrusion1
    javafx.beans.value.ChangeListener extrusionMultiplier1ChangeListener -> extrusionMultiplier1ChangeListener
    javafx.beans.value.ChangeListener extrusionMultiplier1SliderListener -> extrusionMultiplier1SliderListener
    boolean inhibitExtrusion2 -> inhibitExtrusion2
    javafx.beans.value.ChangeListener extrusionMultiplier2ChangeListener -> extrusionMultiplier2ChangeListener
    javafx.beans.value.ChangeListener extrusionMultiplier2SliderListener -> extrusionMultiplier2SliderListener
    boolean inhibitMaterial1Temp -> inhibitMaterial1Temp
    javafx.beans.value.ChangeListener material1TargetTempChangeListener -> material1TargetTempChangeListener
    javafx.beans.value.ChangeListener lastFilamentTempChangeListener -> lastFilamentTempChangeListener
    javafx.beans.value.ChangeListener material1TempSliderListener -> material1TempSliderListener
    boolean inhibitMaterial2Temp -> inhibitMaterial2Temp
    javafx.beans.value.ChangeListener nozzleTargetTemp2ChangeListener -> nozzleTargetTemp2ChangeListener
    javafx.beans.value.ChangeListener material2TempSliderListener -> material2TempSliderListener
    javafx.beans.value.ChangeListener heaterModeListener -> heaterModeListener
    int tempSliderTolerance -> tempSliderTolerance
    32:634:void <init>() -> <init>
    329:350:void initialize(java.net.URL,java.util.ResourceBundle) -> initialize
    354:371:void bindToPrintEngineStatus(celtech.roboxbase.printerControl.model.Printer) -> bindToPrintEngineStatus
    375:382:boolean eUsedForThisPrintJob() -> eUsedForThisPrintJob
    387:394:boolean dUsedForThisPrintJob() -> dUsedForThisPrintJob
    399:477:void bind() -> bind
    481:509:void unbind() -> unbind
    513:566:void updateMaterialTemperatureDisplay() -> updateMaterialTemperatureDisplay
    570:600:void bindNozzleTemperatureDisplay() -> bindNozzleTemperatureDisplay
    604:632:void unbindMaterialTemperatureDisplay() -> unbindMaterialTemperatureDisplay
    638:661:void updateTemperatureSliderBounds() -> updateTemperatureSliderBounds
    666:666:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    671:671:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    676:679:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    684:686:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    691:691:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    696:696:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    701:701:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    706:706:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    711:711:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
    333:342:void lambda$initialize$16(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> lambda$initialize$16
    320:321:void lambda$new$15(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.HeaterMode,celtech.roboxbase.printerControl.model.HeaterMode) -> lambda$new$15
    308:315:void lambda$new$14(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$14
    299:303:void lambda$new$13(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$13
    280:293:void lambda$new$12(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$12
    274:275:void lambda$new$11(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$11
    265:269:void lambda$new$10(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$10
    246:259:void lambda$new$9(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$9
    237:241:void lambda$new$8(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$8
    218:231:void lambda$new$7(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$7
    209:213:void lambda$new$6(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$6
    196:203:void lambda$new$5(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$5
    187:191:void lambda$new$4(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$4
    168:181:void lambda$new$3(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$3
    150:163:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$2
    141:145:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$1
    131:135:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> lambda$new$0
    32:32:void access$000(celtech.coreUI.controllers.utilityPanels.TweakPanelController) -> access$000
    32:32:void access$100(celtech.coreUI.controllers.utilityPanels.TweakPanelController) -> access$100
celtech.coreUI.controllers.utilityPanels.TweakPanelController$1 -> celtech.coreUI.controllers.utilityPanels.TweakPanelController$1:
    celtech.coreUI.controllers.utilityPanels.TweakPanelController this$0 -> this$0
    109:109:void <init>(celtech.coreUI.controllers.utilityPanels.TweakPanelController) -> <init>
    113:121:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrintQueueStatus,celtech.roboxbase.printerControl.PrintQueueStatus) -> changed
    109:109:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.keycommands.HiddenKey -> c.a:
    libertysystems.stenographer.Stenographer steno -> a
    boolean captureKeys -> b
    java.util.ArrayList commandSequences -> c
    java.util.ArrayList parameterCaptureSequences -> d
    java.util.ArrayList keyCommandListeners -> e
    celtech.coreUI.keycommands.UnhandledKeyListener unhandledKeyListener -> f
    java.lang.String hiddenCommandKeyBuffer -> g
    java.lang.String parameterCaptureBuffer -> h
    boolean parameterCaptureInProgress -> i
    javafx.event.EventHandler hiddenErrorCommandEventHandler -> j
    javafx.event.EventHandler hiddenCommandEventHandler -> k
    16:131:void <init>() -> <init>
    200:206:void stopCapturingHiddenKeys(javafx.scene.Scene) -> a
    210:216:void captureHiddenKeys(javafx.scene.Scene) -> b
    220:221:void addCommandSequence(java.lang.String) -> a
    225:226:void addKeyCommandListener(celtech.coreUI.keycommands.KeyCommandListener) -> a
    230:237:boolean triggerListeners(java.lang.String) -> c
    242:249:boolean triggerListeners(java.lang.String,java.lang.String) -> a
    254:255:void addCommandWithParameterSequence(java.lang.String) -> b
    259:260:void addUnhandledKeyListener(celtech.coreUI.keycommands.UnhandledKeyListener) -> a
    133:196:void lambda$new$1(javafx.scene.input.KeyEvent) -> a
    31:129:void lambda$new$0(javafx.scene.input.KeyEvent) -> b
celtech.coreUI.keycommands.HiddenKey$1 -> c.a$1:
    int[] $SwitchMap$javafx$scene$input$KeyCode -> a
    33:33:void <clinit>() -> <clinit>
celtech.coreUI.keycommands.KeyCommandListener -> c.b:
    boolean trigger(java.lang.String,java.lang.String) -> a
celtech.coreUI.keycommands.UnhandledKeyListener -> c.c:
    void unhandledKeyEvent(javafx.scene.input.KeyEvent) -> b
celtech.coreUI.notifications.ShrinkResponse -> celtech.coreUI.notifications.ShrinkResponse:
    celtech.coreUI.notifications.ShrinkResponse SHRINK_TO_FIT -> SHRINK_TO_FIT
    celtech.coreUI.notifications.ShrinkResponse DONT_SHRINK -> DONT_SHRINK
    celtech.coreUI.notifications.ShrinkResponse DONT_LOAD -> DONT_LOAD
    celtech.coreUI.notifications.ShrinkResponse[] $VALUES -> $VALUES
    7:7:celtech.coreUI.notifications.ShrinkResponse[] values() -> values
    7:7:celtech.coreUI.notifications.ShrinkResponse valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ApplicationMaterials -> celtech.coreUI.visualisation.a:
    javafx.scene.paint.Color roboxBlue -> a
    javafx.scene.paint.PhongMaterial defaultModelMaterial -> c
    javafx.scene.paint.PhongMaterial selectedModelMaterial -> d
    javafx.scene.paint.PhongMaterial collidedModelMaterial -> e
    javafx.scene.paint.PhongMaterial collidedSelectedModelMaterial -> f
    javafx.scene.paint.PhongMaterial offBedModelMaterial -> g
    javafx.scene.paint.PhongMaterial selectionBoxMaterial -> h
    javafx.scene.paint.PhongMaterial extrusionMaterial -> i
    javafx.scene.paint.PhongMaterial retractMaterial -> j
    javafx.scene.paint.PhongMaterial unretractMaterial -> k
    javafx.scene.paint.PhongMaterial supportMaterial -> l
    javafx.scene.paint.PhongMaterial travelMaterial -> m
    javafx.scene.paint.PhongMaterial pickedGCodeMaterial -> b
    21:21:void <init>() -> <init>
    47:49:javafx.scene.paint.PhongMaterial getDefaultModelMaterial() -> a
    58:58:javafx.scene.paint.PhongMaterial getSelectedModelMaterial() -> b
    67:67:javafx.scene.paint.PhongMaterial getCollidedModelMaterial() -> c
    76:76:javafx.scene.paint.PhongMaterial getCollidedSelectedModelMaterial() -> d
    85:85:javafx.scene.paint.PhongMaterial getOffBedModelMaterial() -> e
    94:100:javafx.scene.paint.PhongMaterial getSelectionBoxMaterial() -> f
    109:109:javafx.scene.paint.Material getExtrusionMaterial() -> g
    118:118:javafx.scene.paint.Material getRetractMaterial() -> h
    127:127:javafx.scene.paint.Material getUnretractMaterial() -> i
    136:136:javafx.scene.paint.Material getSupportMaterial() -> j
    145:145:javafx.scene.paint.Material getTravelMaterial() -> k
    156:190:javafx.scene.paint.Material getGCodeMaterial(celtech.utils.gcode.representation.MovementType,boolean) -> a
    24:39:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ApplicationMaterials$1 -> celtech.coreUI.visualisation.a$1:
    int[] $SwitchMap$celtech$utils$gcode$representation$MovementType -> a
    160:160:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.AutoScalingGroup -> celtech.coreUI.visualisation.b:
    double size -> a
    double twoSize -> b
    boolean autoScale -> c
    javafx.scene.transform.Translate translate -> d
    javafx.scene.transform.Scale scale -> e
    javafx.beans.property.SimpleBooleanProperty enabled -> f
    17:39:void <init>(double) -> <init>
    47:47:boolean isEnabled() -> a
    56:56:javafx.beans.property.SimpleBooleanProperty enabledProperty() -> b
    65:66:void setEnabled(boolean) -> a
    69:120:void layoutChildren() -> layoutChildren
    14:14:javafx.scene.transform.Scale access$000(celtech.coreUI.visualisation.AutoScalingGroup) -> a
    14:14:javafx.scene.transform.Translate access$100(celtech.coreUI.visualisation.AutoScalingGroup) -> b
celtech.coreUI.visualisation.AutoScalingGroup$1 -> celtech.coreUI.visualisation.b$1:
    celtech.coreUI.visualisation.AutoScalingGroup this$0 -> a
    20:20:void <init>(celtech.coreUI.visualisation.AutoScalingGroup,boolean) -> <init>
    22:27:void invalidated() -> invalidated
celtech.coreUI.visualisation.BedAxes -> celtech.coreUI.visualisation.c:
    libertysystems.stenographer.Stenographer steno -> a
    javafx.scene.text.Text xText -> b
    javafx.scene.shape.Line xAxis -> c
    javafx.scene.text.Text yText -> d
    javafx.scene.shape.Line yAxis -> e
    javafx.scene.text.Text zText -> f
    javafx.scene.shape.Line zAxis -> g
    javafx.scene.shape.Polygon xArrow -> h
    javafx.scene.shape.Polygon yArrow -> i
    javafx.scene.shape.Polygon zArrow -> j
    javafx.scene.transform.Translate xArrowTranslate -> k
    javafx.scene.transform.Translate yArrowTranslate -> l
    javafx.scene.transform.Translate zArrowTranslate -> m
    javafx.scene.transform.Translate xTextTranslate -> n
    javafx.scene.transform.Translate yTextTranslate -> o
    javafx.scene.transform.Translate zTextTranslate -> p
    javafx.scene.transform.Rotate xArrowRotate -> q
    javafx.scene.transform.Rotate yArrowRotate -> r
    javafx.scene.transform.Rotate zArrowRotate -> s
    double arrowHeight -> t
    double arrowWidth -> u
    double lineLength -> v
    double lineWidth -> w
    double textOffsetFromOrigin -> x
    celtech.coreUI.visualisation.ScreenCoordinateConverter screenCoordinateConverter -> y
    28:60:void <init>(celtech.coreUI.visualisation.ScreenCoordinateConverter) -> <init>
    64:116:void initialise() -> b
    120:140:double calculateAngle(javafx.geometry.Point2D,javafx.geometry.Point2D) -> a
    145:201:void updateArrowAndTextPosition() -> a
    207:207:void heresYourCamera(javafx.scene.Camera) -> a
    213:214:void cameraViewOfYouHasChanged(double) -> a
celtech.coreUI.visualisation.CameraViewChangeListener -> celtech.coreUI.visualisation.d:
    void heresYourCamera(javafx.scene.Camera) -> a
    void cameraViewOfYouHasChanged(double) -> a
celtech.coreUI.visualisation.DimensionLine -> celtech.coreUI.visualisation.DimensionLine:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.coreUI.components.RestrictedNumberField dimensionLabel -> b
    javafx.scene.shape.Line dimensionLine -> c
    javafx.scene.shape.Polygon upArrow -> d
    javafx.scene.shape.Polygon downArrow -> e
    javafx.scene.transform.Translate firstArrowTranslate -> f
    javafx.scene.transform.Translate secondArrowTranslate -> g
    javafx.scene.transform.Translate textTranslate -> h
    javafx.scene.transform.Rotate arrowRotate -> i
    javafx.scene.transform.Rotate textRotate -> j
    double arrowHeight -> k
    double arrowWidth -> l
    celtech.coreUI.visualisation.DimensionLine$LineDirection direction -> m
    celtech.modelcontrol.ResizeableTwoD container -> n
    celtech.appManager.undo.UndoableProject undoableproject -> o
    javafx.beans.value.ChangeListener dimensionEntryChangeListener -> p
    27:48:void <init>() -> <init>
    81:120:void initialise(celtech.appManager.Project,celtech.coreUI.visualisation.ScreenExtentsProviderTwoD,celtech.coreUI.visualisation.DimensionLine$LineDirection) -> a
    125:126:void screenExtentsChanged(celtech.coreUI.visualisation.ScreenExtentsProvider) -> screenExtentsChanged
    130:137:void updateArrowAndTextPosition(celtech.coreUI.visualisation.ScreenExtentsProvider) -> a
    141:280:void updateArrowAndTextPosition_2D(celtech.coreUI.visualisation.ScreenExtentsProviderTwoD) -> a
    284:355:void updateArrowAndTextPosition_3D(celtech.coreUI.visualisation.ScreenExtentsProviderThreeD) -> a
    359:359:celtech.coreUI.components.RestrictedNumberField getDimensionLabel() -> a
    50:71:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
celtech.coreUI.visualisation.DimensionLine$1 -> celtech.coreUI.visualisation.DimensionLine$1:
    int[] $SwitchMap$celtech$coreUI$visualisation$DimensionLine$LineDirection -> a
    50:50:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.DimensionLine$LineDirection -> celtech.coreUI.visualisation.DimensionLine$LineDirection:
    celtech.coreUI.visualisation.DimensionLine$LineDirection HORIZONTAL -> HORIZONTAL
    celtech.coreUI.visualisation.DimensionLine$LineDirection VERTICAL -> VERTICAL
    celtech.coreUI.visualisation.DimensionLine$LineDirection FORWARD_BACK -> FORWARD_BACK
    celtech.coreUI.visualisation.DimensionLine$LineDirection[] $VALUES -> $VALUES
    73:73:celtech.coreUI.visualisation.DimensionLine$LineDirection[] values() -> values
    73:73:celtech.coreUI.visualisation.DimensionLine$LineDirection valueOf(java.lang.String) -> valueOf
    73:73:void <init>(java.lang.String,int) -> <init>
    73:76:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.DimensionLineManager -> celtech.coreUI.visualisation.e:
    java.util.Map dimensionLines -> a
    javafx.beans.value.ChangeListener dragModeListener -> b
    25:117:void <init>(javafx.scene.layout.Pane,celtech.appManager.Project,javafx.beans.property.ReadOnlyBooleanProperty) -> <init>
    29:36:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    22:22:java.util.Map access$000(celtech.coreUI.visualisation.DimensionLineManager) -> a
celtech.coreUI.visualisation.DimensionLineManager$1 -> celtech.coreUI.visualisation.e$1:
    javafx.scene.layout.Pane val$paneToAddDimensionsTo -> a
    celtech.appManager.Project val$project -> b
    celtech.coreUI.visualisation.DimensionLineManager this$0 -> c
    44:44:void <init>(celtech.coreUI.visualisation.DimensionLineManager,javafx.scene.layout.Pane,celtech.appManager.Project) -> <init>
    49:99:void whenAdded(celtech.modelcontrol.ProjectifiableThing) -> a
    105:114:void whenRemoved(celtech.modelcontrol.ProjectifiableThing) -> b
    109:112:void lambda$whenRemoved$1(celtech.modelcontrol.ProjectifiableThing,javafx.scene.layout.Pane,celtech.coreUI.visualisation.DimensionLine) -> a
    91:97:void lambda$whenAdded$0(celtech.coreUI.visualisation.DimensionLine,celtech.modelcontrol.ProjectifiableThing,celtech.coreUI.visualisation.DimensionLine,celtech.coreUI.visualisation.DimensionLine) -> a
celtech.coreUI.visualisation.DragMode -> celtech.coreUI.visualisation.DragMode:
    celtech.coreUI.visualisation.DragMode IDLE -> IDLE
    celtech.coreUI.visualisation.DragMode SCALING -> SCALING
    celtech.coreUI.visualisation.DragMode TRANSLATING -> TRANSLATING
    celtech.coreUI.visualisation.DragMode X_CONSTRAINED_TRANSLATE -> X_CONSTRAINED_TRANSLATE
    celtech.coreUI.visualisation.DragMode Z_CONSTRAINED_TRANSLATE -> Z_CONSTRAINED_TRANSLATE
    celtech.coreUI.visualisation.DragMode ROTATE -> ROTATE
    celtech.coreUI.visualisation.DragMode ZCUT -> ZCUT
    celtech.coreUI.visualisation.DragMode[] $VALUES -> $VALUES
    12:12:celtech.coreUI.visualisation.DragMode[] values() -> values
    12:12:celtech.coreUI.visualisation.DragMode valueOf(java.lang.String) -> valueOf
    12:12:void <init>(java.lang.String,int) -> <init>
    12:44:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.Edge -> celtech.coreUI.visualisation.f:
    javafx.geometry.Point2D firstPoint -> a
    javafx.geometry.Point2D secondPoint -> b
    15:18:void <init>(javafx.geometry.Point2D,javafx.geometry.Point2D) -> <init>
    22:22:javafx.geometry.Point2D getFirstPoint() -> a
    27:27:javafx.geometry.Point2D getSecondPoint() -> b
celtech.coreUI.visualisation.Frame -> celtech.coreUI.visualisation.Frame:
    double FPS -> FPS
    double EPSILON -> EPSILON
    55:56:void <init>(double) -> <init>
    64:64:javafx.util.Duration frame(int) -> a
    73:73:javafx.util.Duration frame(long) -> a
    82:82:long toFrame(javafx.util.Duration) -> a
    91:91:int toFrameAsInt(javafx.util.Duration) -> b
    100:100:double toFrameAsDouble(javafx.util.Duration) -> c
    42:50:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ModelLoader -> celtech.coreUI.visualisation.g:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.services.modelLoader.ModelLoaderService modelLoaderService -> a
    41:41:void <init>() -> <init>
    55:160:void offerShrinkAndAddToProject(celtech.appManager.Project,boolean,celtech.appManager.ProjectCallback,boolean,celtech.roboxbase.printerControl.model.Printer) -> a
    164:164:javafx.beans.property.ReadOnlyBooleanProperty modelLoadingProperty() -> a
    176:177:void loadExternalModels(celtech.appManager.Project,java.util.List,celtech.appManager.ProjectCallback) -> a
    192:220:void loadExternalModels(celtech.appManager.Project,java.util.List,boolean,celtech.appManager.ProjectCallback,boolean) -> a
    232:258:void addToProject(celtech.appManager.Project,java.util.Set,boolean,boolean,celtech.roboxbase.printerControl.model.Printer) -> a
    265:276:void addModelSequence(celtech.appManager.undo.UndoableProject,celtech.modelcontrol.ProjectifiableThing,boolean,celtech.roboxbase.printerControl.model.Printer) -> a
    280:296:void shrinkIfRequested(celtech.modelcontrol.ProjectifiableThing,celtech.roboxbase.printerControl.model.Printer) -> a
    300:317:celtech.modelcontrol.ModelContainer makeGroup(java.util.Set) -> a
    251:252:void lambda$addToProject$1(celtech.appManager.undo.UndoableProject,boolean,celtech.roboxbase.printerControl.model.Printer,celtech.modelcontrol.ProjectifiableThing) -> a
    196:218:void lambda$loadExternalModels$0(celtech.appManager.Project,boolean,celtech.appManager.ProjectCallback,boolean,javafx.concurrent.WorkerStateEvent) -> a
    44:49:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ModelLoader$1 -> celtech.coreUI.visualisation.g$1:
    int[] $SwitchMap$celtech$coreUI$visualisation$metaparts$ModelLoadResultType -> a
    203:203:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ProjectSelection -> celtech.coreUI.visualisation.h:
    javafx.collections.ObservableSet modelContainers -> a
    celtech.coreUI.visualisation.ProjectSelection$PrimarySelectedModelDetails primarySelectedModelDetails -> b
    javafx.beans.property.IntegerProperty numModelsSelected -> c
    javafx.beans.property.IntegerProperty numGroupsSelected -> d
    java.util.Set selectedModelContainersListeners -> e
    javafx.beans.binding.BooleanBinding selectionHasChildOfGroup -> f
    40:77:void <init>(celtech.appManager.Project) -> <init>
    81:81:javafx.beans.binding.BooleanBinding getSelectionHasChildOfGroup() -> a
    89:110:void addSelectedItem(celtech.modelcontrol.ProjectifiableThing) -> a
    119:138:void removeModelContainer(celtech.modelcontrol.ProjectifiableThing) -> b
    148:148:boolean isSelected(celtech.modelcontrol.ModelContainer) -> a
    156:161:void deselectAllModels() -> b
    170:170:java.util.Set getSelectedModelsSnapshot() -> c
    181:191:java.util.Set getSelectedModelsSnapshot(java.lang.Class) -> a
    201:201:javafx.beans.property.ReadOnlyIntegerProperty getNumModelsSelectedProperty() -> d
    211:211:javafx.beans.property.ReadOnlyIntegerProperty getNumGroupsSelectedProperty() -> e
    221:221:celtech.coreUI.visualisation.ProjectSelection$PrimarySelectedModelDetails getPrimarySelectedModelDetails() -> f
    230:231:void updateSelectedValues() -> g
    236:236:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    241:247:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    252:253:void whenAutoLaidOut() -> whenAutoLaidOut
    258:259:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    264:264:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    269:269:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
    279:280:void addListener(celtech.coreUI.visualisation.ProjectSelection$SelectedModelContainersListener) -> a
    290:291:void removeListener(celtech.coreUI.visualisation.ProjectSelection$SelectedModelContainersListener) -> b
    35:35:javafx.collections.ObservableSet access$100(celtech.coreUI.visualisation.ProjectSelection) -> a
celtech.coreUI.visualisation.ProjectSelection$1 -> celtech.coreUI.visualisation.h$1:
    celtech.coreUI.visualisation.ProjectSelection this$0 -> a
    57:60:void <init>(celtech.coreUI.visualisation.ProjectSelection) -> <init>
    65:73:boolean computeValue() -> computeValue
celtech.coreUI.visualisation.ProjectSelection$PrimarySelectedModelDetails -> celtech.coreUI.visualisation.h$a:
    celtech.modelcontrol.ProjectifiableThing boundModelContainer -> a
    javafx.beans.property.DoubleProperty width -> c
    javafx.beans.property.DoubleProperty centreX -> d
    javafx.beans.property.DoubleProperty centreDepth -> e
    javafx.beans.property.DoubleProperty height -> f
    javafx.beans.property.DoubleProperty depth -> g
    javafx.beans.property.DoubleProperty scaleX -> h
    javafx.beans.property.DoubleProperty scaleY -> i
    javafx.beans.property.DoubleProperty scaleZ -> j
    javafx.beans.property.DoubleProperty rotationLean -> k
    javafx.beans.property.DoubleProperty rotationTwist -> l
    javafx.beans.property.DoubleProperty rotationTurn -> m
    celtech.coreUI.visualisation.ProjectSelection this$0 -> b
    317:331:void <init>(celtech.coreUI.visualisation.ProjectSelection) -> <init>
    335:335:javafx.beans.property.DoubleProperty getWidth() -> a
    340:342:void setTo(celtech.modelcontrol.ProjectifiableThing) -> a
    346:384:void updateSelectedProperties() -> l
    388:388:javafx.beans.property.DoubleProperty getCentreDepth() -> b
    393:393:javafx.beans.property.DoubleProperty getCentreX() -> c
    398:398:javafx.beans.property.DoubleProperty getHeight() -> d
    403:403:javafx.beans.property.DoubleProperty getDepth() -> e
    408:408:javafx.beans.property.DoubleProperty getScaleX() -> f
    413:413:javafx.beans.property.DoubleProperty getScaleY() -> g
    418:418:javafx.beans.property.DoubleProperty getScaleZ() -> h
    423:423:javafx.beans.property.DoubleProperty getRotationLean() -> i
    428:428:javafx.beans.property.DoubleProperty getRotationTwist() -> j
    433:433:javafx.beans.property.DoubleProperty getRotationTurn() -> k
    311:311:void <init>(celtech.coreUI.visualisation.ProjectSelection,celtech.coreUI.visualisation.ProjectSelection$1) -> <init>
    311:311:void access$200(celtech.coreUI.visualisation.ProjectSelection$PrimarySelectedModelDetails) -> a
celtech.coreUI.visualisation.ProjectSelection$SelectedModelContainersListener -> celtech.coreUI.visualisation.h$b:
    void whenAdded(celtech.modelcontrol.ProjectifiableThing) -> a
    void whenRemoved(celtech.modelcontrol.ProjectifiableThing) -> b
celtech.coreUI.visualisation.ReplacementConstants -> celtech.coreUI.visualisation.i:
    int NUM_COMPONENTS_PER_POINT -> a
    int NUM_COMPONENTS_PER_TEXCOORD -> b
    int NUM_COMPONENTS_PER_FACE -> c
    12:12:void <init>() -> <init>
celtech.coreUI.visualisation.SVGViewManager -> celtech.coreUI.visualisation.j:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.appManager.Project project -> b
    celtech.appManager.undo.UndoableProject undoableProject -> c
    celtech.appManager.ApplicationStatus applicationStatus -> d
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> e
    javafx.collections.ObservableList loadedModels -> f
    javafx.scene.shape.Shape shapeBeingDragged -> g
    javafx.geometry.Point2D lastDragPosition -> h
    double mousePosX -> i
    double mousePosY -> j
    double mouseOldX -> k
    double mouseOldY -> l
    double bedWidth -> m
    double bedHeight -> n
    double bedBorder -> o
    javafx.scene.Group partsAndBed -> p
    javafx.scene.transform.Translate bedTranslate -> q
    javafx.scene.transform.Scale bedScale -> r
    javafx.scene.shape.Rectangle bed -> s
    javafx.scene.Group parts -> t
    javafx.scene.Group gCodeOverlay -> u
    javafx.scene.layout.Pane parentPane -> v
    javafx.beans.property.ObjectProperty dragMode -> w
    boolean justEnteredDragMode -> x
    javafx.scene.control.ContextMenu bedContextMenu -> y
    javafx.event.EventHandler mouseEventHandler -> z
    javafx.event.EventHandler zoomEventHandler -> A
    javafx.event.EventHandler scrollEventHandler -> B
    javafx.beans.value.ChangeListener applicationModeListener -> C
    68:469:void <init>(celtech.appManager.Project) -> <init>
    166:256:void createBed() -> a
    260:289:void resizeBed() -> b
    294:298:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    303:304:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    309:309:void whenAutoLaidOut() -> whenAutoLaidOut
    315:315:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    321:321:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    327:327:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
    377:389:celtech.utils.threed.importers.svg.ShapeContainer findShapeContainerParent(javafx.scene.Node) -> a
    394:442:void handleMouseSingleClickedEvent(javafx.scene.input.MouseEvent) -> a
    446:467:void dragShape(javafx.scene.shape.Shape,javafx.scene.input.MouseEvent) -> a
    492:503:void selectModel(celtech.utils.threed.importers.svg.ShapeContainer,boolean) -> a
    507:511:void deselectAllModels() -> c
    515:519:void deselectModel(celtech.utils.threed.importers.svg.ShapeContainer) -> a
    523:611:void renderGCode(java.util.List) -> a
    472:488:void lambda$new$9(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> a
    370:373:void lambda$new$8(javafx.scene.input.ScrollEvent) -> a
    358:366:void lambda$new$7(javafx.scene.input.ZoomEvent) -> a
    332:354:void lambda$new$6(javafx.scene.input.MouseEvent) -> b
    223:243:void lambda$createBed$5(javafx.event.ActionEvent) -> a
    226:234:void lambda$null$4(java.util.List,javafx.scene.Node) -> a
    231:232:void lambda$null$3(java.util.List,celtech.utils.threed.importers.svg.ShapeContainer,javafx.scene.shape.Shape) -> a
    210:219:void lambda$createBed$2(javafx.event.ActionEvent) -> b
    196:205:void lambda$createBed$1(javafx.event.ActionEvent) -> c
    183:192:void lambda$createBed$0(javafx.event.ActionEvent) -> d
    65:65:void access$000(celtech.coreUI.visualisation.SVGViewManager) -> a
    65:65:javafx.scene.Group access$100(celtech.coreUI.visualisation.SVGViewManager) -> b
    65:65:javafx.scene.layout.Pane access$200(celtech.coreUI.visualisation.SVGViewManager) -> c
    65:65:javafx.scene.control.ContextMenu access$300(celtech.coreUI.visualisation.SVGViewManager) -> d
celtech.coreUI.visualisation.SVGViewManager$1 -> celtech.coreUI.visualisation.j$1:
    celtech.coreUI.visualisation.SVGViewManager this$0 -> a
    134:134:void <init>(celtech.coreUI.visualisation.SVGViewManager) -> <init>
    138:139:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    134:134:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.SVGViewManager$2 -> celtech.coreUI.visualisation.j$2:
    celtech.coreUI.visualisation.SVGViewManager this$0 -> a
    143:143:void <init>(celtech.coreUI.visualisation.SVGViewManager) -> <init>
    147:148:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    143:143:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.SVGViewManager$3 -> celtech.coreUI.visualisation.j$3:
    celtech.coreUI.visualisation.SVGViewManager this$0 -> a
    248:248:void <init>(celtech.coreUI.visualisation.SVGViewManager) -> <init>
    252:254:void handle(javafx.scene.input.ContextMenuEvent) -> a
    248:248:void handle(javafx.event.Event) -> handle
celtech.coreUI.visualisation.SVGViewManager$4 -> celtech.coreUI.visualisation.j$4:
    int[] $SwitchMap$celtech$appManager$ApplicationMode -> a
    474:474:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ScreenCoordinateConverter -> celtech.coreUI.visualisation.k:
    javafx.geometry.Point2D convertWorldCoordinatesToScreen(double,double,double) -> a
celtech.coreUI.visualisation.ScreenExtents -> celtech.coreUI.visualisation.ScreenExtents:
    java.util.List heightEdges -> a
    java.util.List widthEdges -> b
    java.util.List depthEdges -> c
    int minX -> d
    int maxX -> e
    int minY -> f
    int maxY -> g
    11:16:void <init>() -> <init>
    25:56:java.lang.String toString() -> toString
    61:103:void recalculateMaxMin() -> a
    108:119:boolean equals(java.lang.Object) -> equals
celtech.coreUI.visualisation.ScreenExtentsProvider -> celtech.coreUI.visualisation.l:
    celtech.coreUI.visualisation.ScreenExtents getScreenExtents() -> getScreenExtents
    void addScreenExtentsChangeListener(celtech.coreUI.visualisation.ScreenExtentsProvider$ScreenExtentsListener) -> a
    void removeScreenExtentsChangeListener(celtech.coreUI.visualisation.ScreenExtentsProvider$ScreenExtentsListener) -> b
celtech.coreUI.visualisation.ScreenExtentsProvider$ScreenExtentsListener -> celtech.coreUI.visualisation.l$a:
    void screenExtentsChanged(celtech.coreUI.visualisation.ScreenExtentsProvider) -> screenExtentsChanged
celtech.coreUI.visualisation.ScreenExtentsProviderThreeD -> celtech.coreUI.visualisation.m:
    double getTransformedHeight() -> getTransformedHeight
    double getTransformedWidth() -> getTransformedWidth
    double getTransformedDepth() -> getTransformedDepth
celtech.coreUI.visualisation.ScreenExtentsProviderTwoD -> celtech.coreUI.visualisation.n:
    double getTransformedHeight() -> getTransformedHeight
    double getTransformedWidth() -> getTransformedWidth
celtech.coreUI.visualisation.ShapeProvider -> celtech.coreUI.visualisation.o:
    void addShapeChangeListener(celtech.coreUI.visualisation.ShapeProvider$ShapeChangeListener) -> a
    void removeShapeChangeListener(celtech.coreUI.visualisation.ShapeProvider$ShapeChangeListener) -> b
celtech.coreUI.visualisation.ShapeProvider$ShapeChangeListener -> celtech.coreUI.visualisation.o$a:
    void shapeChanged(celtech.coreUI.visualisation.ShapeProvider) -> a
celtech.coreUI.visualisation.ShapeProviderThreeD -> celtech.coreUI.visualisation.p:
    double getScaledDepth() -> getScaledDepth
    double getCentreZ() -> getCentreZ
celtech.coreUI.visualisation.ShapeProviderTwoD -> celtech.coreUI.visualisation.q:
    double getScaledWidth() -> getScaledWidth
    double getScaledHeight() -> getScaledHeight
    double getCentreX() -> getCentreX
    double getCentreY() -> getCentreY
celtech.coreUI.visualisation.ThreeDViewManager -> celtech.coreUI.visualisation.r:
    libertysystems.stenographer.Stenographer steno -> g
    javafx.collections.ObservableList loadedModels -> h
    celtech.appManager.ApplicationStatus applicationStatus -> i
    javafx.scene.Group root3D -> j
    javafx.scene.SubScene subScene -> k
    javafx.beans.property.SimpleObjectProperty subSceneProperty -> l
    javafx.scene.Group axisGroup -> a
    double DELTA_MULTIPLIER -> b
    double CONTROL_MULTIPLIER -> c
    double SHIFT_MULTIPLIER -> d
    double ALT_MULTIPLIER -> e
    javafx.geometry.Point3D lastDragPosition -> m
    javafx.geometry.Point3D lastCameraPickedPoint -> n
    int dragPlaneHalfSize -> o
    celtech.coreUI.visualisation.Xform cameraTranslateDragPlaneTransform -> p
    javafx.scene.shape.Box cameraTranslateDragPlane -> q
    javafx.scene.shape.Box translationDragPlane -> r
    javafx.scene.shape.Box verticalDragPlane -> s
    javafx.scene.shape.Box zCutDisplayPlane -> t
    javafx.scene.Group gcodeParts -> u
    javafx.scene.Group models -> v
    javafx.beans.property.ObjectProperty dragMode -> w
    javafx.beans.property.ReadOnlyDoubleProperty widthPropertyToFollow -> x
    javafx.beans.property.ReadOnlyDoubleProperty heightPropertyToFollow -> y
    java.util.Set inSelectedGroupButNotSelected -> z
    celtech.coreUI.visualisation.Xform bedTranslateXform -> A
    celtech.coreUI.visualisation.Xform cameraTranslateXform -> B
    celtech.coreUI.visualisation.Xform cameraRotateXform -> C
    javafx.scene.Group bed -> D
    javafx.scene.Node printVolumeBoundingBox -> E
    javafx.scene.PerspectiveCamera camera -> F
    double initialCameraDistance -> G
    double defaultXTranslate -> H
    double defaultYTranslate -> I
    double defaultDistance -> J
    javafx.beans.property.DoubleProperty cameraDistance -> K
    javafx.beans.property.DoubleProperty demandedCameraRotationX -> L
    javafx.beans.property.DoubleProperty demandedCameraRotationY -> M
    java.util.List cameraViewChangeListeners -> N
    double mousePosX -> O
    double mousePosY -> P
    double mouseOldX -> Q
    double mouseOldY -> R
    celtech.coreUI.visualisation.ProjectSelection projectSelection -> S
    long lastAnimationTrigger -> T
    javafx.animation.AnimationTimer settingsScreenAnimationTimer -> U
    celtech.appManager.ModelContainerProject project -> V
    celtech.appManager.undo.UndoableProject undoableProject -> W
    javafx.beans.property.ObjectProperty layoutSubmode -> X
    boolean justEnteredDragMode -> Y
    celtech.coreUI.ProjectGUIRules projectGUIRules -> Z
    javafx.scene.paint.PhongMaterial loaded1Material -> aa
    javafx.scene.paint.PhongMaterial loaded2Material -> ab
    javafx.scene.paint.PhongMaterial extruder1Material -> ac
    javafx.scene.paint.PhongMaterial extruder1TransparentMaterial -> ad
    javafx.scene.paint.PhongMaterial extruder2Material -> ae
    javafx.scene.paint.PhongMaterial extruder2TransparentMaterial -> af
    javafx.scene.paint.PhongMaterial greyExcludedMaterial -> ag
    javafx.scene.paint.PhongMaterial collidedMaterial -> ah
    javafx.scene.paint.PhongMaterial outOfBoundsMaterial -> ai
    javafx.scene.paint.PhongMaterial zcutDisplayPlaneMaterial -> aj
    celtech.coreUI.visualisation.collision.CollisionManager collisionManager -> ak
    celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile currentPrinterConfiguration -> al
    javafx.beans.value.ChangeListener layoutSubmodeListener -> am
    javafx.beans.value.ChangeListener dragModeListener -> an
    javafx.event.EventHandler mouseEventHandler -> ao
    javafx.event.EventHandler scrollEventHandler -> ap
    javafx.event.EventHandler zoomEventHandler -> aq
    javafx.beans.value.ChangeListener applicationModeListener -> ar
    javafx.collections.MapChangeListener effectiveFilamentListener -> as
    double preAnimationCameraXAngle -> at
    double preAnimationCameraYAngle -> au
    boolean needToRevertCameraPosition -> av
    javafx.beans.property.ReadOnlyDoubleProperty cutHeight -> aw
    double maxCutHeight -> ax
    javafx.beans.value.ChangeListener cutHeightChangeListener -> ay
    celtech.roboxbase.utils.TimeUtils csgTimer -> f
    193:206:void transitionCameraTo(double,double,double,double,double,double) -> a
    210:221:void transitionCameraTo(double,double,double,double) -> a
    225:248:void rotateCameraAroundAxes(double,double) -> a
    252:256:void notifyListenersOfCameraViewChange() -> e
    260:268:void notifyModelsOfCameraViewChange() -> f
    272:296:void rotateCameraAroundAxesTo(double,double) -> b
    300:356:void processModeChange() -> g
    380:407:void handleMouseDoubleClickedEvent(javafx.scene.input.MouseEvent) -> a
    411:485:void handleMouseSingleClickedEvent(javafx.scene.input.MouseEvent) -> b
    489:553:void doSelectTranslateModel(javafx.scene.Node,javafx.geometry.Point3D,javafx.scene.input.MouseEvent,boolean) -> a
    557:575:void updateGroupSelectionList() -> h
    580:586:void doSnapToGround(celtech.modelcontrol.ModelContainer,javafx.scene.shape.MeshView,javafx.scene.input.PickResult) -> a
    591:673:void handleMouseDragEvent(javafx.scene.input.MouseEvent) -> c
    773:799:void updateCurrentPrinter(celtech.roboxbase.printerControl.model.Printer) -> a
    87:1551:void <init>(celtech.appManager.ModelContainerProject,javafx.beans.property.ReadOnlyDoubleProperty,javafx.beans.property.ReadOnlyDoubleProperty) -> <init>
    991:1001:void addBedReferenceToModel(celtech.modelcontrol.ModelContainer) -> b
    1005:1071:javafx.scene.Group buildBed() -> i
    1076:1134:javafx.scene.Node createBoundingBox(double,double,double) -> b
    1139:1141:void shutdown() -> a
    1145:1158:void selectModel(celtech.modelcontrol.ModelContainer,boolean) -> a
    1162:1164:void translateSelection(double,double) -> c
    1168:1174:void deselectModel(celtech.modelcontrol.ModelContainer) -> a
    1178:1178:javafx.scene.SubScene getSubScene() -> b
    1183:1183:javafx.beans.property.DoubleProperty demandedCameraRotationYProperty() -> j
    1188:1189:void setDragMode(celtech.coreUI.visualisation.DragMode) -> a
    1197:1202:void startSettingsAnimation() -> k
    1206:1212:void stopSettingsAnimation() -> l
    1220:1231:void isolateForSelectedMeshView(javafx.scene.shape.MeshView) -> a
    1239:1248:void isolateGroupChildren(celtech.modelcontrol.ModelGroup,celtech.modelcontrol.ModelContainer) -> a
    1256:1269:celtech.modelcontrol.ModelGroup getTopLevelAncestorGroup(celtech.modelcontrol.ModelContainer) -> c
    1278:1289:celtech.modelcontrol.ModelGroup getAncestorSelectedGroup(celtech.modelcontrol.ModelContainer) -> d
    1302:1382:void updateModelColours(celtech.modelcontrol.ProjectifiableThing) -> a
    1394:1399:void updateModelColours() -> m
    1403:1421:void updateModelColour(javafx.scene.paint.PhongMaterial,javafx.scene.paint.PhongMaterial,celtech.modelcontrol.ModelContainer) -> a
    1425:1429:void deselectAllModels() -> n
    1436:1448:void setupFilamentListeners(celtech.appManager.ModelContainerProject) -> a
    1453:1469:void whenModelAdded(celtech.modelcontrol.ProjectifiableThing) -> whenModelAdded
    1474:1479:void whenModelsRemoved(java.util.Set) -> whenModelsRemoved
    1484:1485:void whenAutoLaidOut() -> whenAutoLaidOut
    1490:1493:void whenModelsTransformed(java.util.Set) -> whenModelsTransformed
    1498:1499:void whenModelChanged(celtech.modelcontrol.ProjectifiableThing,java.lang.String) -> whenModelChanged
    1504:1504:void whenPrinterSettingsChanged(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> whenPrinterSettingsChanged
    1520:1531:void showZCutPlane(celtech.modelcontrol.ModelContainer,javafx.beans.property.ReadOnlyDoubleProperty) -> a
    1535:1544:void clearZCutModelPlane() -> c
    1548:1549:void changeZCutHeight(double) -> a
    1555:1628:java.util.List cutModelAt(celtech.modelcontrol.ModelContainer,double) -> a
    1633:1641:void orientVerticalDragPlane(javafx.scene.input.PickResult) -> a
    1645:1649:void addCameraViewChangeListener(celtech.coreUI.visualisation.CameraViewChangeListener) -> a
    1654:1654:javafx.geometry.Point2D convertWorldCoordinatesToScreen(double,double,double) -> a
    1659:1659:javafx.beans.property.ReadOnlyObjectProperty getDragModeProperty() -> d
    1664:1672:void addPrintVolumeBoundingBox() -> o
    1676:1682:void transitionCameraToDefaults() -> p
    1477:1478:void lambda$whenModelsRemoved$13(celtech.modelcontrol.ProjectifiableThing) -> b
    1445:1446:void lambda$setupFilamentListeners$12(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.Filament,celtech.roboxbase.configuration.Filament) -> a
    1439:1440:void lambda$setupFilamentListeners$11(javafx.beans.value.ObservableValue,celtech.roboxbase.configuration.Filament,celtech.roboxbase.configuration.Filament) -> b
    995:996:void lambda$addBedReferenceToModel$10(celtech.modelcontrol.ModelContainer) -> e
    971:972:void lambda$new$9(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> a
    957:966:void lambda$new$8(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> a
    929:936:void lambda$new$7(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> a
    767:768:void lambda$new$6(javafx.collections.MapChangeListener$Change) -> a
    740:763:void lambda$new$5(javafx.beans.value.ObservableValue,celtech.appManager.ApplicationMode,celtech.appManager.ApplicationMode) -> a
    726:735:void lambda$new$4(javafx.scene.input.ZoomEvent) -> a
    709:723:void lambda$new$3(javafx.scene.input.ScrollEvent) -> a
    678:705:void lambda$new$2(javafx.scene.input.MouseEvent) -> d
    397:398:java.util.Set lambda$handleMouseDoubleClickedEvent$1(java.util.Set,java.util.Set) -> a
    394:394:java.util.Set lambda$handleMouseDoubleClickedEvent$0(celtech.modelcontrol.ModelContainer) -> f
    80:80:long access$000(celtech.coreUI.visualisation.ThreeDViewManager) -> a
    80:80:void access$100(celtech.coreUI.visualisation.ThreeDViewManager,double,double) -> a
    80:80:long access$002(celtech.coreUI.visualisation.ThreeDViewManager,long) -> a
    80:80:void access$200(celtech.coreUI.visualisation.ThreeDViewManager) -> b
    80:80:void access$300(celtech.coreUI.visualisation.ThreeDViewManager) -> c
    80:80:void access$400(celtech.coreUI.visualisation.ThreeDViewManager,celtech.roboxbase.printerControl.model.Printer) -> a
    80:80:javafx.scene.shape.Box access$500(celtech.coreUI.visualisation.ThreeDViewManager) -> d
    83:84:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ThreeDViewManager$1 -> celtech.coreUI.visualisation.r$1:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    152:152:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    156:162:void handle(long) -> handle
celtech.coreUI.visualisation.ThreeDViewManager$2 -> celtech.coreUI.visualisation.r$2:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    359:359:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    364:365:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.LayoutSubmode,celtech.coreUI.LayoutSubmode) -> a
    359:359:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$3 -> celtech.coreUI.visualisation.r$3:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    369:369:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    374:375:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.visualisation.DragMode,celtech.coreUI.visualisation.DragMode) -> a
    369:369:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$4 -> celtech.coreUI.visualisation.r$4:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    819:819:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    823:824:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    819:819:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$5 -> celtech.coreUI.visualisation.r$5:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    828:828:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    832:833:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    828:828:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$6 -> celtech.coreUI.visualisation.r$6:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    865:865:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    869:870:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> a
    865:865:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$7 -> celtech.coreUI.visualisation.r$7:
    celtech.coreUI.visualisation.ThreeDViewManager this$0 -> a
    1510:1510:void <init>(celtech.coreUI.visualisation.ThreeDViewManager) -> <init>
    1514:1515:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    1510:1510:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.ThreeDViewManager$8 -> celtech.coreUI.visualisation.r$8:
    int[] $SwitchMap$celtech$coreUI$visualisation$DragMode -> a
    int[] $SwitchMap$celtech$coreUI$LayoutSubmode -> b
    int[] $SwitchMap$celtech$appManager$ApplicationMode -> c
    300:742:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.ViewControl -> celtech.coreUI.visualisation.s:
    13:13:void <init>() -> <init>
celtech.coreUI.visualisation.Xform -> celtech.coreUI.visualisation.Xform:
    javafx.scene.transform.Translate t -> a
    javafx.scene.transform.Translate p -> b
    javafx.scene.transform.Translate ip -> c
    javafx.scene.transform.Rotate rx -> d
    javafx.scene.transform.Rotate ry -> e
    javafx.scene.transform.Rotate rz -> f
    javafx.scene.transform.Scale s -> g
    55:109:void <init>() -> <init>
    112:114:void <init>(celtech.coreUI.visualisation.Xform$RotateOrder,java.lang.String) -> <init>
    55:145:void <init>(celtech.coreUI.visualisation.Xform$RotateOrder) -> <init>
    155:158:void setTranslate(double,double,double) -> a
    167:169:void setTranslate(double,double) -> a
    183:184:void setTx(double) -> a
    192:193:void setTy(double) -> b
    201:202:void setTz(double) -> c
    210:210:double getTx() -> a
    219:219:double getTy() -> b
    228:228:double getTz() -> c
    239:242:void setRotate(double,double,double) -> b
    250:251:void setRotateX(double) -> d
    259:260:void setRotateY(double) -> e
    268:269:void setRotateZ(double) -> f
    277:278:void setRx(double) -> g
    286:287:void setRy(double) -> h
    295:296:void setRz(double) -> i
    304:304:double getRotateX() -> d
    313:313:double getRotateY() -> e
    322:322:double getRotateZ() -> f
    331:334:void setScale(double) -> j
    344:347:void setScale(double,double,double) -> c
    361:362:void setSx(double) -> k
    370:371:void setSy(double) -> l
    379:380:void setSz(double) -> m
    390:396:void setPivot(double,double,double) -> d
    404:404:javafx.scene.transform.Translate getPivot() -> g
    412:427:void reset() -> h
    434:446:void resetTSP() -> i
    453:473:void debug() -> j
    478:497:java.lang.String toString() -> toString
celtech.coreUI.visualisation.Xform$1 -> celtech.coreUI.visualisation.Xform$1:
    int[] $SwitchMap$celtech$coreUI$visualisation$Xform$RotateOrder -> a
    124:124:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.Xform$RotateOrder -> celtech.coreUI.visualisation.Xform$RotateOrder:
    celtech.coreUI.visualisation.Xform$RotateOrder XYZ -> XYZ
    celtech.coreUI.visualisation.Xform$RotateOrder XZY -> XZY
    celtech.coreUI.visualisation.Xform$RotateOrder YXZ -> YXZ
    celtech.coreUI.visualisation.Xform$RotateOrder YZX -> YZX
    celtech.coreUI.visualisation.Xform$RotateOrder ZXY -> ZXY
    celtech.coreUI.visualisation.Xform$RotateOrder ZYX -> ZYX
    celtech.coreUI.visualisation.Xform$RotateOrder[] $VALUES -> $VALUES
    18:18:celtech.coreUI.visualisation.Xform$RotateOrder[] values() -> values
    18:18:celtech.coreUI.visualisation.Xform$RotateOrder valueOf(java.lang.String) -> valueOf
    18:18:void <init>(java.lang.String,int) -> <init>
    18:49:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.collision.CollisionManager -> d.a:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.Timer scheduledTickTimer -> b
    java.util.TimerTask tickRun -> c
    long lastTickMilliseconds -> d
    17:41:void <init>() -> <init>
    64:64:void setupCollisionWorld() -> a
    79:79:void addModel(celtech.modelcontrol.ModelContainer) -> a
    83:84:void removeModel(celtech.modelcontrol.ModelContainer) -> b
    109:109:void createGhost(celtech.modelcontrol.ModelContainer) -> d
    122:122:void destroyGhost(celtech.modelcontrol.ModelContainer) -> e
    127:128:void collisionShapeAvailable(celtech.modelcontrol.ModelContainer) -> c
    132:132:void addModelTransformListeners(celtech.modelcontrol.ModelContainer) -> f
    136:136:void removeModelTransformListeners(celtech.modelcontrol.ModelContainer) -> g
    140:142:void removeAllModelListeners(celtech.modelcontrol.ModelContainer) -> h
    184:184:void collisionTick() -> b
    205:205:void modelsTransformed(java.util.Set) -> a
    14:14:void access$000(celtech.coreUI.visualisation.collision.CollisionManager) -> a
celtech.coreUI.visualisation.collision.CollisionManager$1 -> d.a$1:
    celtech.coreUI.visualisation.collision.CollisionManager this$0 -> a
    29:29:void <init>(celtech.coreUI.visualisation.collision.CollisionManager) -> <init>
    33:34:void run() -> run
celtech.coreUI.visualisation.collision.CollisionShapeListener -> d.b:
    void collisionShapeAvailable(celtech.modelcontrol.ModelContainer) -> c
celtech.coreUI.visualisation.collision.HullComputer -> d.c:
    libertysystems.stenographer.Stenographer steno -> a
    javafx.scene.shape.MeshView meshView -> b
    15:21:void <init>(javafx.scene.shape.MeshView) -> <init>
    26:48:javafx.scene.shape.MeshView call() -> a
    12:12:java.lang.Object call() -> call
celtech.coreUI.visualisation.metaparts.FloatArrayList -> celtech.coreUI.visualisation.metaparts.FloatArrayList:
    float[] elementData -> elementData
    int size -> size
    int MAX_ARRAY_SIZE -> MAX_ARRAY_SIZE
    123:130:void <init>(int) -> <init>
    134:135:void <init>() -> <init>
    144:152:void <init>(java.util.Collection) -> <init>
    159:164:void trimToSize() -> a
    173:176:void ensureCapacity(int) -> a
    179:184:void ensureCapacityInternal(int) -> e
    200:208:void grow(int) -> f
    211:213:int hugeCapacity(int) -> g
    224:224:int size() -> size
    233:233:boolean isEmpty() -> isEmpty
    244:244:boolean contains(java.lang.Object) -> contains
    255:262:int indexOf(java.lang.Object) -> indexOf
    273:278:int lastIndexOf(java.lang.Object) -> lastIndexOf
    289:295:java.lang.Object clone() -> clone
    310:314:java.lang.Object[] toArray() -> toArray
    337:344:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    352:354:float[] toFloatArray() -> b
    360:360:java.lang.Float elementData(int) -> b
    371:373:java.lang.Float get(int) -> c
    385:389:java.lang.Float set(int,java.lang.Float) -> a
    399:401:boolean add(java.lang.Float) -> a
    413:421:void add(int,java.lang.Float) -> b
    432:444:java.lang.Float remove(int) -> d
    458:465:boolean remove(java.lang.Object) -> remove
    473:480:void fastRemove(int) -> h
    484:491:void clear() -> clear
    504:509:boolean addAll(java.util.Collection) -> addAll
    525:539:boolean addAll(int,java.util.Collection) -> addAll
    553:563:void removeRange(int,int) -> removeRange
    571:573:void rangeCheck(int) -> i
    577:579:void rangeCheckForAdd(int) -> j
    586:586:java.lang.String outOfBoundsMsg(int) -> k
    602:602:boolean removeAll(java.util.Collection) -> removeAll
    619:619:boolean retainAll(java.util.Collection) -> retainAll
    623:648:boolean batchRemove(java.util.Collection,boolean) -> a
    660:674:void writeObject(java.io.ObjectOutputStream) -> writeObject
    680:689:void readObject(java.io.ObjectInputStream) -> readObject
    704:706:java.util.ListIterator listIterator(int) -> listIterator
    718:718:java.util.ListIterator listIterator() -> listIterator
    729:729:java.util.Iterator iterator() -> iterator
    862:863:java.util.List subList(int,int) -> subList
    867:875:void subListRangeCheck(int,int,int) -> a
    100:100:java.lang.Object remove(int) -> remove
    100:100:void add(int,java.lang.Object) -> add
    100:100:java.lang.Object set(int,java.lang.Object) -> set
    100:100:java.lang.Object get(int) -> get
    100:100:boolean add(java.lang.Object) -> add
    100:100:int access$100(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> a
    100:100:int access$200(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> b
    100:100:float[] access$300(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> c
    100:100:int access$400(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> d
    100:100:int access$500(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> e
    100:100:int access$600(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> f
    100:100:int access$700(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> g
    100:100:int access$800(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> h
    100:100:int access$900(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> i
    100:100:int access$1000(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> j
    100:100:int access$1100(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> k
    100:100:int access$1200(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> l
    100:100:int access$1300(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> m
    100:100:int access$1400(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> n
    100:100:int access$1500(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> o
    100:100:int access$1600(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> p
celtech.coreUI.visualisation.metaparts.FloatArrayList$1 -> celtech.coreUI.visualisation.metaparts.FloatArrayList$1:
celtech.coreUI.visualisation.metaparts.FloatArrayList$Itr -> celtech.coreUI.visualisation.metaparts.FloatArrayList$a:
    int cursor -> a
    int lastRet -> b
    int expectedModCount -> c
    celtech.coreUI.visualisation.metaparts.FloatArrayList this$0 -> d
    733:736:void <init>(celtech.coreUI.visualisation.metaparts.FloatArrayList) -> <init>
    739:739:boolean hasNext() -> hasNext
    744:752:java.lang.Float next() -> a
    756:768:void remove() -> remove
    771:773:void checkForComodification() -> b
    733:733:java.lang.Object next() -> next
    733:733:void <init>(celtech.coreUI.visualisation.metaparts.FloatArrayList,celtech.coreUI.visualisation.metaparts.FloatArrayList$1) -> <init>
celtech.coreUI.visualisation.metaparts.FloatArrayList$ListItr -> celtech.coreUI.visualisation.metaparts.FloatArrayList$b:
    celtech.coreUI.visualisation.metaparts.FloatArrayList this$0 -> e
    778:781:void <init>(celtech.coreUI.visualisation.metaparts.FloatArrayList,int) -> <init>
    784:784:boolean hasPrevious() -> hasPrevious
    788:788:int nextIndex() -> nextIndex
    792:792:int previousIndex() -> previousIndex
    797:805:java.lang.Float previous() -> c
    809:818:void set(java.lang.Float) -> a
    821:832:void add(java.lang.Float) -> b
    777:777:void add(java.lang.Object) -> add
    777:777:void set(java.lang.Object) -> set
    777:777:java.lang.Object previous() -> previous
celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList -> celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList:
    celtech.coreUI.visualisation.metaparts.FloatArrayList parent -> parent
    int parentOffset -> parentOffset
    int offset -> offset
    int size -> size
    celtech.coreUI.visualisation.metaparts.FloatArrayList this$0 -> this$0
    885:891:void <init>(celtech.coreUI.visualisation.metaparts.FloatArrayList,celtech.coreUI.visualisation.metaparts.FloatArrayList,int,int,int) -> <init>
    895:897:float[] toFloatArray() -> b
    901:905:java.lang.Float set(int,java.lang.Float) -> a
    909:911:java.lang.Float get(int) -> c
    915:916:int size() -> size
    920:925:void add(int,java.lang.Float) -> b
    928:933:java.lang.Float remove(int) -> d
    937:943:void removeRange(int,int) -> removeRange
    946:946:boolean addAll(java.util.Collection) -> addAll
    950:959:boolean addAll(int,java.util.Collection) -> addAll
    963:963:java.util.Iterator iterator() -> iterator
    967:971:java.util.ListIterator listIterator(int) -> listIterator
    1067:1068:java.util.List subList(int,int) -> subList
    1072:1074:void rangeCheck(int) -> e
    1077:1079:void rangeCheckForAdd(int) -> f
    1082:1082:java.lang.String outOfBoundsMsg(int) -> g
    1086:1088:void checkForComodification() -> c
    877:877:java.lang.Object remove(int) -> remove
    877:877:void add(int,java.lang.Object) -> add
    877:877:java.lang.Object set(int,java.lang.Object) -> set
    877:877:java.lang.Object get(int) -> get
    877:877:boolean add(java.lang.Object) -> add
celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList$1 -> celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList$1:
    int cursor -> a
    int lastRet -> b
    int expectedModCount -> c
    int val$index -> d
    int val$offset -> e
    celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList this$1 -> f
    971:974:void <init>(celtech.coreUI.visualisation.metaparts.FloatArrayList$SubList,int,int) -> <init>
    977:977:boolean hasNext() -> hasNext
    982:990:java.lang.Float next() -> a
    994:994:boolean hasPrevious() -> hasPrevious
    999:1007:java.lang.Float previous() -> b
    1011:1011:int nextIndex() -> nextIndex
    1015:1015:int previousIndex() -> previousIndex
    1019:1031:void remove() -> remove
    1034:1043:void set(java.lang.Float) -> a
    1046:1057:void add(java.lang.Float) -> b
    1060:1062:void checkForComodification() -> c
    971:971:void add(java.lang.Object) -> add
    971:971:void set(java.lang.Object) -> set
    971:971:java.lang.Object previous() -> previous
    971:971:java.lang.Object next() -> next
celtech.coreUI.visualisation.metaparts.IntegerArrayList -> celtech.coreUI.visualisation.metaparts.IntegerArrayList:
    int[] elementData -> elementData
    int size -> size
    int MAX_ARRAY_SIZE -> MAX_ARRAY_SIZE
    125:132:void <init>(int) -> <init>
    136:137:void <init>() -> <init>
    146:154:void <init>(java.util.Collection) -> <init>
    161:166:void trimToSize() -> a
    175:178:void ensureCapacity(int) -> a
    181:186:void ensureCapacityInternal(int) -> e
    202:210:void grow(int) -> f
    213:215:int hugeCapacity(int) -> g
    226:226:int size() -> size
    235:235:boolean isEmpty() -> isEmpty
    246:246:boolean contains(java.lang.Object) -> contains
    257:264:int indexOf(java.lang.Object) -> indexOf
    275:280:int lastIndexOf(java.lang.Object) -> lastIndexOf
    291:297:java.lang.Object clone() -> clone
    312:316:java.lang.Object[] toArray() -> toArray
    340:347:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    355:357:int[] toIntArray() -> b
    363:363:java.lang.Integer elementData(int) -> b
    374:376:java.lang.Integer get(int) -> c
    388:392:java.lang.Integer set(int,java.lang.Integer) -> a
    402:404:boolean add(java.lang.Integer) -> a
    416:424:void add(int,java.lang.Integer) -> b
    435:447:java.lang.Integer remove(int) -> d
    461:468:boolean remove(java.lang.Object) -> remove
    476:483:void fastRemove(int) -> h
    487:494:void clear() -> clear
    507:512:boolean addAll(java.util.Collection) -> addAll
    528:542:boolean addAll(int,java.util.Collection) -> addAll
    556:566:void removeRange(int,int) -> removeRange
    574:576:void rangeCheck(int) -> i
    580:582:void rangeCheckForAdd(int) -> j
    589:589:java.lang.String outOfBoundsMsg(int) -> k
    605:605:boolean removeAll(java.util.Collection) -> removeAll
    622:622:boolean retainAll(java.util.Collection) -> retainAll
    626:651:boolean batchRemove(java.util.Collection,boolean) -> a
    663:677:void writeObject(java.io.ObjectOutputStream) -> writeObject
    683:692:void readObject(java.io.ObjectInputStream) -> readObject
    707:709:java.util.ListIterator listIterator(int) -> listIterator
    721:721:java.util.ListIterator listIterator() -> listIterator
    732:732:java.util.Iterator iterator() -> iterator
    865:866:java.util.List subList(int,int) -> subList
    870:878:void subListRangeCheck(int,int,int) -> a
    102:102:java.lang.Object remove(int) -> remove
    102:102:void add(int,java.lang.Object) -> add
    102:102:java.lang.Object set(int,java.lang.Object) -> set
    102:102:java.lang.Object get(int) -> get
    102:102:boolean add(java.lang.Object) -> add
    102:102:int access$100(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> a
    102:102:int access$200(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> b
    102:102:int[] access$300(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> c
    102:102:int access$400(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> d
    102:102:int access$500(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> e
    102:102:int access$600(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> f
    102:102:int access$700(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> g
    102:102:int access$800(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> h
    102:102:int access$900(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> i
    102:102:int access$1000(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> j
    102:102:int access$1100(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> k
    102:102:int access$1200(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> l
    102:102:int access$1300(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> m
    102:102:int access$1400(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> n
    102:102:int access$1500(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> o
    102:102:int access$1600(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> p
celtech.coreUI.visualisation.metaparts.IntegerArrayList$1 -> celtech.coreUI.visualisation.metaparts.IntegerArrayList$1:
celtech.coreUI.visualisation.metaparts.IntegerArrayList$Itr -> celtech.coreUI.visualisation.metaparts.IntegerArrayList$a:
    int cursor -> a
    int lastRet -> b
    int expectedModCount -> c
    celtech.coreUI.visualisation.metaparts.IntegerArrayList this$0 -> d
    736:739:void <init>(celtech.coreUI.visualisation.metaparts.IntegerArrayList) -> <init>
    742:742:boolean hasNext() -> hasNext
    747:755:java.lang.Integer next() -> a
    759:771:void remove() -> remove
    774:776:void checkForComodification() -> b
    736:736:java.lang.Object next() -> next
    736:736:void <init>(celtech.coreUI.visualisation.metaparts.IntegerArrayList,celtech.coreUI.visualisation.metaparts.IntegerArrayList$1) -> <init>
celtech.coreUI.visualisation.metaparts.IntegerArrayList$ListItr -> celtech.coreUI.visualisation.metaparts.IntegerArrayList$b:
    celtech.coreUI.visualisation.metaparts.IntegerArrayList this$0 -> e
    781:784:void <init>(celtech.coreUI.visualisation.metaparts.IntegerArrayList,int) -> <init>
    787:787:boolean hasPrevious() -> hasPrevious
    791:791:int nextIndex() -> nextIndex
    795:795:int previousIndex() -> previousIndex
    800:808:java.lang.Integer previous() -> c
    812:821:void set(java.lang.Integer) -> a
    824:835:void add(java.lang.Integer) -> b
    780:780:void add(java.lang.Object) -> add
    780:780:void set(java.lang.Object) -> set
    780:780:java.lang.Object previous() -> previous
celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList -> celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList:
    celtech.coreUI.visualisation.metaparts.IntegerArrayList parent -> parent
    int parentOffset -> parentOffset
    int offset -> offset
    int size -> size
    celtech.coreUI.visualisation.metaparts.IntegerArrayList this$0 -> this$0
    888:894:void <init>(celtech.coreUI.visualisation.metaparts.IntegerArrayList,celtech.coreUI.visualisation.metaparts.IntegerArrayList,int,int,int) -> <init>
    898:900:int[] toIntArray() -> b
    904:908:java.lang.Integer set(int,java.lang.Integer) -> a
    912:914:java.lang.Integer get(int) -> c
    918:919:int size() -> size
    923:928:void add(int,java.lang.Integer) -> b
    931:936:java.lang.Integer remove(int) -> d
    940:946:void removeRange(int,int) -> removeRange
    949:949:boolean addAll(java.util.Collection) -> addAll
    953:962:boolean addAll(int,java.util.Collection) -> addAll
    966:966:java.util.Iterator iterator() -> iterator
    970:974:java.util.ListIterator listIterator(int) -> listIterator
    1070:1071:java.util.List subList(int,int) -> subList
    1075:1077:void rangeCheck(int) -> e
    1080:1082:void rangeCheckForAdd(int) -> f
    1085:1085:java.lang.String outOfBoundsMsg(int) -> g
    1089:1091:void checkForComodification() -> c
    880:880:java.lang.Object remove(int) -> remove
    880:880:void add(int,java.lang.Object) -> add
    880:880:java.lang.Object set(int,java.lang.Object) -> set
    880:880:java.lang.Object get(int) -> get
    880:880:boolean add(java.lang.Object) -> add
celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList$1 -> celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList$1:
    int cursor -> a
    int lastRet -> b
    int expectedModCount -> c
    int val$index -> d
    int val$offset -> e
    celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList this$1 -> f
    974:977:void <init>(celtech.coreUI.visualisation.metaparts.IntegerArrayList$SubList,int,int) -> <init>
    980:980:boolean hasNext() -> hasNext
    985:993:java.lang.Integer next() -> a
    997:997:boolean hasPrevious() -> hasPrevious
    1002:1010:java.lang.Integer previous() -> b
    1014:1014:int nextIndex() -> nextIndex
    1018:1018:int previousIndex() -> previousIndex
    1022:1034:void remove() -> remove
    1037:1046:void set(java.lang.Integer) -> a
    1049:1060:void add(java.lang.Integer) -> b
    1063:1065:void checkForComodification() -> c
    974:974:void add(java.lang.Object) -> add
    974:974:void set(java.lang.Object) -> set
    974:974:java.lang.Object previous() -> previous
    974:974:java.lang.Object next() -> next
celtech.coreUI.visualisation.metaparts.MetaTriangle -> celtech.coreUI.visualisation.metaparts.a:
    java.lang.Long vertex1Hash -> a
    java.lang.Long vertex2Hash -> b
    java.lang.Long vertex3Hash -> c
    18:33:void <init>(java.lang.Long,java.lang.Long,java.lang.Long) -> <init>
    41:41:java.lang.Long getVertex1Hash() -> a
    50:51:void setVertex1Hash(java.lang.Long) -> a
    59:59:java.lang.Long getVertex2Hash() -> b
    68:69:void setVertex2Hash(java.lang.Long) -> b
    77:77:java.lang.Long getVertex3Hash() -> c
    86:87:void setVertex3Hash(java.lang.Long) -> c
celtech.coreUI.visualisation.metaparts.ModelLoadResult -> celtech.coreUI.visualisation.metaparts.b:
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType type -> a
    java.lang.String filename -> b
    java.lang.String fullFilename -> c
    java.util.Set projectifiableThings -> d
    22:27:void <init>(celtech.coreUI.visualisation.metaparts.ModelLoadResultType,java.lang.String,java.lang.String,java.util.Set) -> <init>
    31:31:celtech.coreUI.visualisation.metaparts.ModelLoadResultType getType() -> a
    36:36:java.lang.String getModelFilename() -> b
    41:41:java.lang.String getFullFilename() -> c
    46:46:java.util.Set getProjectifiableThings() -> d
celtech.coreUI.visualisation.metaparts.ModelLoadResultType -> celtech.coreUI.visualisation.metaparts.ModelLoadResultType:
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType Mesh -> Mesh
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType SVG -> SVG
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType Image -> Image
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType[] $VALUES -> $VALUES
    7:7:celtech.coreUI.visualisation.metaparts.ModelLoadResultType[] values() -> values
    7:7:celtech.coreUI.visualisation.metaparts.ModelLoadResultType valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:20:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.metaparts.SmoothingGroups -> celtech.coreUI.visualisation.metaparts.c:
    java.util.BitSet visited -> a
    java.util.BitSet notVisited -> b
    java.util.Queue q -> c
    int[][] faces -> d
    int[][] faceNormals -> e
    float[] normals -> f
    celtech.coreUI.visualisation.metaparts.SmoothingGroups$Edge[][] faceEdges -> g
    float normalAngle -> h
    64:72:void <init>(int[][],int[][],float[]) -> <init>
    76:97:java.util.List getNextConnectedComponent(java.util.Map) -> a
    101:101:boolean hasNextConnectedComponent() -> a
    105:122:void computeFaceEdges() -> b
    125:141:java.util.Map getAdjacentFaces() -> c
    145:145:com.sun.javafx.geom.Vec3f getNormal(int) -> a
    151:160:boolean isNormalsEqual(com.sun.javafx.geom.Vec3f,com.sun.javafx.geom.Vec3f) -> b
    164:190:java.util.Map getSmoothEdges(java.util.Map) -> b
    195:200:java.util.List calcConnComponents(java.util.Map) -> c
    204:220:int[] generateSmGroups(java.util.List) -> a
    224:235:int[] calcSmoothGroups() -> d
    290:291:int[] calcSmoothGroups(int[][],int[][],float[]) -> a
    302:315:int[] calcSmoothGroups(int[],int[],float[]) -> a
    48:48:boolean access$000(com.sun.javafx.geom.Vec3f,com.sun.javafx.geom.Vec3f) -> a
celtech.coreUI.visualisation.metaparts.SmoothingGroups$Edge -> celtech.coreUI.visualisation.metaparts.c$a:
    int from -> a
    int to -> b
    int fromNormal -> c
    int toNormal -> d
    celtech.coreUI.visualisation.metaparts.SmoothingGroups this$0 -> e
    242:247:void <init>(celtech.coreUI.visualisation.metaparts.SmoothingGroups,int,int,int,int) -> <init>
    250:252:boolean isSmooth(celtech.coreUI.visualisation.metaparts.SmoothingGroups$Edge) -> a
    257:260:int hashCode() -> hashCode
    265:278:boolean equals(java.lang.Object) -> equals
celtech.coreUI.visualisation.modelDisplay.DimensionLines -> celtech.coreUI.visualisation.modelDisplay.DimensionLines:
    javafx.scene.Group parentGroup -> a
    double offsetFromMaxMin -> b
    javafx.scene.paint.PhongMaterial materialToUse -> c
    float arrowHeadWidth -> d
    float arrowHeadLength -> e
    float lineWidth -> f
    javafx.scene.Node heightUpArrowHead -> g
    javafx.scene.Node heightDownArrowHead -> h
    javafx.scene.Node heightLine -> i
    javafx.scene.text.Text heightLabel -> j
    javafx.scene.Node widthLeftArrowHead -> k
    javafx.scene.Node widthRightArrowHead -> l
    javafx.scene.Node widthLine -> m
    javafx.scene.text.Text widthLabel -> n
    javafx.scene.Node depthBackArrowHead -> o
    javafx.scene.Node depthForwardArrowHead -> p
    javafx.scene.Node depthLine -> q
    29:63:void <init>(javafx.scene.Group,javafx.scene.paint.PhongMaterial,double) -> <init>
    67:97:void buildDimensionLines() -> a
    101:158:javafx.scene.shape.MeshView createArrowHead(celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection) -> a
    163:204:javafx.scene.shape.MeshView createLine(celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection) -> a
    209:247:void place(double,double,double,double,double,double) -> a
celtech.coreUI.visualisation.modelDisplay.DimensionLines$1 -> celtech.coreUI.visualisation.modelDisplay.DimensionLines$1:
    int[] $SwitchMap$celtech$coreUI$visualisation$modelDisplay$DimensionLines$ArrowHeadDirection -> a
    int[] $SwitchMap$celtech$coreUI$visualisation$modelDisplay$DimensionLines$LineDirection -> b
    103:165:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection -> celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection:
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection LEFT -> LEFT
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection RIGHT -> RIGHT
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection UP -> UP
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection DOWN -> DOWN
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection FORWARD -> FORWARD
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection BACK -> BACK
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection[] $VALUES -> $VALUES
    44:44:celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection[] values() -> values
    44:44:celtech.coreUI.visualisation.modelDisplay.DimensionLines$ArrowHeadDirection valueOf(java.lang.String) -> valueOf
    44:44:void <init>(java.lang.String,int) -> <init>
    44:47:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection -> celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection:
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection HORIZONTAL -> HORIZONTAL
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection VERTICAL -> VERTICAL
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection FORWARD_BACK -> FORWARD_BACK
    celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection[] $VALUES -> $VALUES
    50:50:celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection[] values() -> values
    50:50:celtech.coreUI.visualisation.modelDisplay.DimensionLines$LineDirection valueOf(java.lang.String) -> valueOf
    50:50:void <init>(java.lang.String,int) -> <init>
    50:53:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.modelDisplay.ScaleControls -> celtech.coreUI.visualisation.modelDisplay.a:
    javafx.scene.Group parentGroup -> a
    javafx.scene.paint.PhongMaterial scaleBoxMaterial -> b
    double scaleBoxSize -> c
    double scaleBoxGrowth -> d
    javafx.scene.Node selectedScaleBox -> e
    javafx.scene.shape.Box scaleBoxTop -> f
    javafx.scene.shape.Box scaleZBoxFront -> g
    javafx.scene.shape.Box scaleXBoxLeft -> h
    javafx.scene.shape.Box scaleXBoxRight -> i
    javafx.scene.shape.Box scaleZBoxBack -> j
    javafx.scene.shape.Box scaleXZBoxLeftFront -> k
    javafx.scene.shape.Box scaleXZBoxRightFront -> l
    javafx.scene.shape.Box scaleXZBoxLeftBack -> m
    javafx.scene.shape.Box scaleXZBoxRightBack -> n
    javafx.util.Duration scaleGrowShrinkDuration -> o
    javafx.animation.Animation pulsateScaleBox -> p
    javafx.animation.Animation growScaleBox -> q
    javafx.animation.Animation shrinkScaleBox -> r
    javafx.event.EventHandler scaleEventHandler -> s
    25:159:void <init>(javafx.scene.Group) -> <init>
    163:166:void changeScale(javafx.scene.Node,double) -> a
    170:206:void attachScalingHandles() -> a
    210:250:void place(double,double,double,double,double,double) -> a
    157:158:void lambda$new$1(javafx.event.ActionEvent) -> a
    83:147:void lambda$new$0(javafx.scene.input.MouseEvent) -> a
    19:19:javafx.util.Duration access$000(celtech.coreUI.visualisation.modelDisplay.ScaleControls) -> a
    19:19:javafx.scene.Node access$100(celtech.coreUI.visualisation.modelDisplay.ScaleControls) -> b
    19:19:void access$200(celtech.coreUI.visualisation.modelDisplay.ScaleControls,javafx.scene.Node,double) -> a
celtech.coreUI.visualisation.modelDisplay.ScaleControls$1 -> celtech.coreUI.visualisation.modelDisplay.a$1:
    celtech.coreUI.visualisation.modelDisplay.ScaleControls this$0 -> a
    40:44:void <init>(celtech.coreUI.visualisation.modelDisplay.ScaleControls) -> <init>
    49:50:void interpolate(double) -> interpolate
celtech.coreUI.visualisation.modelDisplay.ScaleControls$2 -> celtech.coreUI.visualisation.modelDisplay.a$2:
    celtech.coreUI.visualisation.modelDisplay.ScaleControls this$0 -> a
    54:58:void <init>(celtech.coreUI.visualisation.modelDisplay.ScaleControls) -> <init>
    63:64:void interpolate(double) -> interpolate
celtech.coreUI.visualisation.modelDisplay.ScaleControls$3 -> celtech.coreUI.visualisation.modelDisplay.a$3:
    celtech.coreUI.visualisation.modelDisplay.ScaleControls this$0 -> a
    68:72:void <init>(celtech.coreUI.visualisation.modelDisplay.ScaleControls) -> <init>
    77:78:void interpolate(double) -> interpolate
celtech.coreUI.visualisation.modelDisplay.SelectionHighlighter -> celtech.coreUI.visualisation.modelDisplay.SelectionHighlighter:
    libertysystems.stenographer.Stenographer steno -> b
    java.lang.String idString -> a
    boolean selectionIsGroup -> c
    celtech.coreUI.visualisation.Xform selectionBoxBackLeftTop -> d
    celtech.coreUI.visualisation.Xform selectionBoxBackRightTop -> e
    celtech.coreUI.visualisation.Xform selectionBoxFrontLeftTop -> f
    celtech.coreUI.visualisation.Xform selectionBoxFrontRightTop -> g
    celtech.coreUI.visualisation.Xform selectionBoxBackLeftBottom -> h
    celtech.coreUI.visualisation.Xform selectionBoxBackRightBottom -> i
    celtech.coreUI.visualisation.Xform selectionBoxFrontLeftBottom -> j
    celtech.coreUI.visualisation.Xform selectionBoxFrontRightBottom -> k
    double cornerBracketLength -> l
    javafx.beans.property.DoubleProperty boxScaleProperty -> m
    25:63:void <init>(celtech.modelcontrol.ModelContainer,double) -> <init>
    67:89:void buildSelectionBox() -> a
    94:143:void shapeChanged(celtech.coreUI.visualisation.ShapeProvider) -> a
    148:192:celtech.coreUI.visualisation.Xform generateSelectionCornerGroup(double,double,double) -> a
    197:206:void cameraDistanceChange(double) -> a
celtech.coreUI.visualisation.shapes.OriginalPointArray -> celtech.coreUI.visualisation.shapes.a:
    celtech.coreUI.visualisation.shapes.PolygonMesh mesh -> a
    15:17:void <init>(celtech.coreUI.visualisation.shapes.PolygonMesh) -> <init>
    21:22:void update() -> a
celtech.coreUI.visualisation.shapes.PolygonMesh -> celtech.coreUI.visualisation.shapes.b:
    javafx.collections.ObservableFloatArray points -> c
    javafx.collections.ObservableFloatArray texCoords -> d
    int[][] faces -> a
    javafx.collections.ObservableIntegerArray faceSmoothingGroups -> e
    int numEdgesInFaces -> b
    13:30:void <init>() -> <init>
    13:42:void <init>(float[],float[],int[][]) -> <init>
    49:49:javafx.collections.ObservableFloatArray getPoints() -> a
    57:57:javafx.collections.ObservableFloatArray getTexCoords() -> b
    65:65:javafx.collections.ObservableIntegerArray getFaceSmoothingGroups() -> c
    73:80:int getNumEdgesInFaces() -> d
celtech.coreUI.visualisation.shapes.PolygonMeshView -> celtech.coreUI.visualisation.shapes.c:
    boolean DEBUG -> a
    javafx.scene.shape.MeshView meshView -> b
    javafx.scene.shape.TriangleMesh triangleMesh -> c
    celtech.coreUI.visualisation.shapes.SubdivisionMesh subdivisionMesh -> d
    javafx.collections.ArrayChangeListener meshPointsListener -> e
    javafx.collections.ArrayChangeListener meshTexCoordListener -> f
    boolean pointsDirty -> g
    boolean pointsSizeDirty -> h
    boolean texCoordsDirty -> i
    boolean facesDirty -> j
    javafx.beans.property.ObjectProperty meshProperty -> k
    javafx.beans.property.ObjectProperty drawMode -> l
    javafx.beans.property.ObjectProperty cullFace -> m
    javafx.beans.property.ObjectProperty materialProperty -> n
    javafx.beans.property.SimpleIntegerProperty subdivisionLevelProperty -> o
    javafx.beans.property.SimpleObjectProperty boundaryMode -> p
    javafx.beans.property.SimpleObjectProperty mapBorderMode -> q
    69:69:celtech.coreUI.visualisation.shapes.PolygonMesh getMesh() -> a
    75:75:void setMesh(celtech.coreUI.visualisation.shapes.PolygonMesh) -> a
    82:104:javafx.beans.property.ObjectProperty meshProperty() -> b
    118:118:void setDrawMode(javafx.scene.shape.DrawMode) -> a
    124:124:javafx.scene.shape.DrawMode getDrawMode() -> c
    131:140:javafx.beans.property.ObjectProperty drawModeProperty() -> d
    154:154:void setCullFace(javafx.scene.shape.CullFace) -> a
    160:160:javafx.scene.shape.CullFace getCullFace() -> e
    167:174:javafx.beans.property.ObjectProperty cullFaceProperty() -> f
    190:190:javafx.scene.paint.Material getMaterial() -> g
    196:196:void setMaterial(javafx.scene.paint.Material) -> a
    202:202:javafx.beans.property.ObjectProperty materialProperty() -> h
    215:215:void setSubdivisionLevel(int) -> a
    221:221:int getSubdivisionLevel() -> i
    228:251:javafx.beans.property.SimpleIntegerProperty subdivisionLevelProperty() -> j
    265:265:void setBoundaryMode(celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode) -> a
    271:271:celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode getBoundaryMode() -> k
    278:290:javafx.beans.property.SimpleObjectProperty boundaryModeProperty() -> l
    304:304:void setMapBorderMode(celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> a
    310:310:celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode getMapBorderMode() -> m
    317:329:javafx.beans.property.SimpleObjectProperty mapBorderModeProperty() -> n
    28:342:void <init>() -> <init>
    349:351:void <init>(celtech.coreUI.visualisation.shapes.PolygonMesh) -> <init>
    357:500:void updateMesh() -> o
    503:506:float distanceBetweenPoints(float,float,float,float,float,float) -> a
    26:26:boolean access$002(celtech.coreUI.visualisation.shapes.PolygonMeshView,boolean) -> a
    26:26:void access$100(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> a
    26:26:boolean access$202(celtech.coreUI.visualisation.shapes.PolygonMeshView,boolean) -> b
    26:26:javafx.collections.ArrayChangeListener access$300(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> b
    26:26:javafx.collections.ArrayChangeListener access$400(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> c
    26:26:javafx.beans.property.ObjectProperty access$500(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> d
    26:26:boolean access$602(celtech.coreUI.visualisation.shapes.PolygonMeshView,boolean) -> c
    26:26:boolean access$702(celtech.coreUI.visualisation.shapes.PolygonMeshView,boolean) -> d
    26:26:javafx.scene.shape.MeshView access$800(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> e
    26:26:celtech.coreUI.visualisation.shapes.SubdivisionMesh access$900(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> f
    26:26:celtech.coreUI.visualisation.shapes.SubdivisionMesh access$902(celtech.coreUI.visualisation.shapes.PolygonMeshView,celtech.coreUI.visualisation.shapes.SubdivisionMesh) -> a
celtech.coreUI.visualisation.shapes.PolygonMeshView$1 -> celtech.coreUI.visualisation.shapes.c$1:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    35:35:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> <init>
    38:40:void onChanged(javafx.collections.ObservableFloatArray,boolean,int,int) -> a
    35:35:void onChanged(javafx.collections.ObservableArray,boolean,int,int) -> onChanged
celtech.coreUI.visualisation.shapes.PolygonMeshView$2 -> celtech.coreUI.visualisation.shapes.c$2:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    42:42:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> <init>
    45:47:void onChanged(javafx.collections.ObservableFloatArray,boolean,int,int) -> a
    42:42:void onChanged(javafx.collections.ObservableArray,boolean,int,int) -> onChanged
celtech.coreUI.visualisation.shapes.PolygonMeshView$3 -> celtech.coreUI.visualisation.shapes.c$3:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    84:84:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView) -> <init>
    87:101:void changed(javafx.beans.value.ObservableValue,celtech.coreUI.visualisation.shapes.PolygonMesh,celtech.coreUI.visualisation.shapes.PolygonMesh) -> a
    84:84:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.shapes.PolygonMeshView$4 -> celtech.coreUI.visualisation.shapes.c$4:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    132:132:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView,java.lang.Object,java.lang.String,javafx.scene.shape.DrawMode) -> <init>
    134:137:void invalidated() -> invalidated
celtech.coreUI.visualisation.shapes.PolygonMeshView$5 -> celtech.coreUI.visualisation.shapes.c$5:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    168:168:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView,java.lang.Object,java.lang.String,javafx.scene.shape.CullFace) -> <init>
    170:171:void invalidated() -> invalidated
celtech.coreUI.visualisation.shapes.PolygonMeshView$6 -> celtech.coreUI.visualisation.shapes.c$6:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    229:229:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView,int) -> <init>
    232:248:void invalidated() -> invalidated
celtech.coreUI.visualisation.shapes.PolygonMeshView$6$1 -> celtech.coreUI.visualisation.shapes.c$6$1:
    celtech.coreUI.visualisation.shapes.PolygonMeshView$6 this$1 -> a
    234:234:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView$6) -> <init>
    237:238:void onChanged(javafx.collections.ObservableFloatArray,boolean,int,int) -> a
    234:234:void onChanged(javafx.collections.ObservableArray,boolean,int,int) -> onChanged
celtech.coreUI.visualisation.shapes.PolygonMeshView$7 -> celtech.coreUI.visualisation.shapes.c$7:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    279:279:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView,celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode) -> <init>
    281:287:void invalidated() -> invalidated
celtech.coreUI.visualisation.shapes.PolygonMeshView$8 -> celtech.coreUI.visualisation.shapes.c$8:
    celtech.coreUI.visualisation.shapes.PolygonMeshView this$0 -> a
    318:318:void <init>(celtech.coreUI.visualisation.shapes.PolygonMeshView,celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> <init>
    320:326:void invalidated() -> invalidated
celtech.coreUI.visualisation.shapes.SubdividedPointArray -> celtech.coreUI.visualisation.shapes.d:
    float[] controlPoints -> a
    int[][] controlInds -> e
    float[][] controlFactors -> f
    int[][] inds -> g
    float[][] factors -> h
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode boundaryMode -> i
    int currPoint -> j
    19:37:void <init>(celtech.coreUI.visualisation.shapes.SymbolicPointArray,int,celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode) -> <init>
    45:52:int addFacePoint(int[]) -> a
    64:79:int addEdgePoint(int[],int,int,boolean) -> a
    95:141:int addControlPoint(int[],int[],int[],int[],boolean[],int,boolean,boolean) -> a
    149:169:void update() -> a
celtech.coreUI.visualisation.shapes.SubdivisionMesh -> celtech.coreUI.visualisation.shapes.SubdivisionMesh:
    celtech.coreUI.visualisation.shapes.PolygonMesh originalMesh -> c
    int subdivisionLevel -> d
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode boundaryMode -> e
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode mapBorderMode -> f
    java.util.List symbolicMeshes -> g
    boolean pointValuesDirty -> h
    boolean meshDirty -> i
    boolean subdivisionLevelDirty -> j
    61:85:void <init>(celtech.coreUI.visualisation.shapes.PolygonMesh,int,celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode,celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> <init>
    92:126:void update() -> e
    129:131:void setSubdivisionLevelForced(int) -> b
    134:136:void setBoundaryModeForced(celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode) -> b
    139:141:void setMapBorderModeForced(celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> b
    148:148:celtech.coreUI.visualisation.shapes.PolygonMesh getOriginalMesh() -> f
    156:156:int getSubdivisionLevel() -> g
    164:167:void setSubdivisionLevel(int) -> a
    174:174:celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode getBoundaryMode() -> h
    182:185:void setBoundaryMode(celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode) -> a
    192:192:celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode getMapBorderMode() -> i
    200:203:void setMapBorderMode(celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> a
    11:11:boolean access$002(celtech.coreUI.visualisation.shapes.SubdivisionMesh,boolean) -> a
    11:11:boolean access$102(celtech.coreUI.visualisation.shapes.SubdivisionMesh,boolean) -> b
celtech.coreUI.visualisation.shapes.SubdivisionMesh$1 -> celtech.coreUI.visualisation.shapes.SubdivisionMesh$1:
    celtech.coreUI.visualisation.shapes.SubdivisionMesh this$0 -> a
    69:69:void <init>(celtech.coreUI.visualisation.shapes.SubdivisionMesh) -> <init>
    72:77:void onChanged(javafx.collections.ObservableFloatArray,boolean,int,int) -> a
    69:69:void onChanged(javafx.collections.ObservableArray,boolean,int,int) -> onChanged
celtech.coreUI.visualisation.shapes.SubdivisionMesh$2 -> celtech.coreUI.visualisation.shapes.SubdivisionMesh$2:
    celtech.coreUI.visualisation.shapes.SubdivisionMesh this$0 -> a
    79:79:void <init>(celtech.coreUI.visualisation.shapes.SubdivisionMesh) -> <init>
    82:83:void onChanged(javafx.collections.ObservableFloatArray,boolean,int,int) -> a
    79:79:void onChanged(javafx.collections.ObservableArray,boolean,int,int) -> onChanged
celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode -> celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode:
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode CREASE_EDGES -> CREASE_EDGES
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode CREASE_ALL -> CREASE_ALL
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode[] $VALUES -> $VALUES
    25:25:celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode[] values() -> values
    25:25:celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:33:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode -> celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode:
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode NOT_SMOOTH -> NOT_SMOOTH
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode SMOOTH_INTERNAL -> SMOOTH_INTERNAL
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode SMOOTH_ALL -> SMOOTH_ALL
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode[] $VALUES -> $VALUES
    39:39:celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode[] values() -> values
    39:39:celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:51:void <clinit>() -> <clinit>
celtech.coreUI.visualisation.shapes.SymbolicPointArray -> celtech.coreUI.visualisation.shapes.e:
    javafx.scene.shape.TriangleMesh tmesh -> b
    float[] data -> c
    int numPoints -> d
    10:29:void <init>(float[]) -> <init>
    void update() -> a
celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh -> celtech.coreUI.visualisation.shapes.f:
    celtech.coreUI.visualisation.shapes.SymbolicPointArray points -> a
    float[] texCoords -> b
    int[][] faces -> c
    int[] faceSmoothingGroups -> d
    int numEdgesInFaces -> e
    28:42:void <init>(celtech.coreUI.visualisation.shapes.SymbolicPointArray,float[],int[][],int[]) -> <init>
    28:53:void <init>(celtech.coreUI.visualisation.shapes.PolygonMesh) -> <init>
    60:67:int getNumEdgesInFaces() -> a
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder -> celtech.coreUI.visualisation.shapes.g:
    celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh oldMesh -> a
    java.util.Map edgeInfos -> b
    celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo[] faceInfos -> c
    celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$PointInfo[] pointInfos -> d
    celtech.coreUI.visualisation.shapes.SubdividedPointArray points -> e
    float[] texCoords -> f
    int[] reindex -> g
    int newTexCoordIndex -> h
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode boundaryMode -> i
    celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode mapBorderMode -> j
    36:40:void <init>(celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh,celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode,celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> <init>
    47:93:celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh subdivide() -> a
    104:105:celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh subdivide(celtech.coreUI.visualisation.shapes.SymbolicPolygonMesh,celtech.coreUI.visualisation.shapes.SubdivisionMesh$BoundaryMode,celtech.coreUI.visualisation.shapes.SubdivisionMesh$MapBorderMode) -> a
    109:116:void addEdge(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge,celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo) -> a
    119:126:void addPoint(int,celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo,celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge) -> a
    129:135:void addPoint(int,celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge) -> a
    138:196:void collectInfo() -> b
    199:220:int calcControlPoint(int) -> a
    224:242:void calcControlTexCoord(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo,int,int,int) -> a
    245:250:int getPointNewIndex(int) -> b
    254:256:int getPointNewIndex(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo,int) -> a
    260:260:int getPointNewIndex(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo) -> a
    264:267:int getTexCoordNewIndex(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo,int,int) -> a
    271:275:int getTexCoordNewIndex(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo,int) -> b
    279:287:int getTexCoordNewIndex(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo) -> b
    17:17:java.util.Map access$200(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder) -> a
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$1 -> celtech.coreUI.visualisation.shapes.g$1:
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge -> celtech.coreUI.visualisation.shapes.g$a:
    int from -> a
    int to -> b
    293:296:void <init>(int,int) -> <init>
    300:303:int hashCode() -> hashCode
    308:321:boolean equals(java.lang.Object) -> equals
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$EdgeInfo -> celtech.coreUI.visualisation.shapes.g$b:
    celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge edge -> a
    int edgePoint -> b
    java.util.List faces -> c
    325:328:void <init>() -> <init>
    334:334:boolean isBoundary() -> a
    325:325:void <init>(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$1) -> <init>
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$FaceInfo -> celtech.coreUI.visualisation.shapes.g$c:
    int facePoint -> a
    javafx.geometry.Point2D texCoord -> b
    int newTexCoordIndex -> c
    celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$Edge[] edges -> d
    javafx.geometry.Point2D[] edgeTexCoords -> e
    374:377:void <init>(int) -> <init>
celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$PointInfo -> celtech.coreUI.visualisation.shapes.g$d:
    java.util.List faces -> a
    java.util.Set edges -> b
    celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder this$0 -> c
    338:340:void <init>(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder) -> <init>
    346:351:boolean isBoundary() -> a
    358:363:boolean hasInternalEdge() -> b
    338:338:void <init>(celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder,celtech.coreUI.visualisation.shapes.SymbolicSubdivisionBuilder$1) -> <init>
celtech.coreUI.visualisation.svg.DraggableCircle -> e.a:
    13:15:void <init>(double) -> <init>
    20:22:void relativeTranslate(double,double) -> a
    27:27:java.lang.String getSVGPathContent() -> a
celtech.coreUI.visualisation.svg.DraggableRectangle -> e.b:
    13:15:void <init>(double,double) -> <init>
    20:22:void relativeTranslate(double,double) -> a
    27:27:java.lang.String getSVGPathContent() -> a
celtech.coreUI.visualisation.svg.PrintableShape -> e.c:
    void relativeTranslate(double,double) -> a
    java.lang.String getSVGPathContent() -> a
celtech.coreUI.visualisation.svg.TextPath -> e.d:
    java.lang.String textToDisplay -> a
    java.awt.GraphicsEnvironment ge -> b
    java.awt.Font fontInUse -> c
    java.awt.font.FontRenderContext frc -> d
    celtech.coreUI.visualisation.svg.TextPath thisTextPath -> e
    javafx.scene.control.TextField textEditor -> f
    javafx.scene.control.ComboBox fontChooser -> g
    javafx.scene.control.ComboBox fontSizeChooser -> h
    javafx.scene.control.ComboBox fontStyleChooser -> i
    29:116:void <init>() -> <init>
    120:126:void updateFont() -> b
    130:210:void updateTextPath() -> c
    214:216:void setText(java.lang.String) -> a
    221:223:void relativeTranslate(double,double) -> a
    228:228:java.lang.String getSVGPathContent() -> a
    26:26:java.lang.String access$002(celtech.coreUI.visualisation.svg.TextPath,java.lang.String) -> a
    26:26:void access$100(celtech.coreUI.visualisation.svg.TextPath) -> a
    26:26:void access$200(celtech.coreUI.visualisation.svg.TextPath) -> b
    26:26:celtech.coreUI.visualisation.svg.TextPath access$300(celtech.coreUI.visualisation.svg.TextPath) -> c
celtech.coreUI.visualisation.svg.TextPath$1 -> e.d$1:
    celtech.coreUI.visualisation.svg.TextPath this$0 -> a
    49:49:void <init>(celtech.coreUI.visualisation.svg.TextPath) -> <init>
    53:55:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
    49:49:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.svg.TextPath$2 -> e.d$2:
    celtech.coreUI.visualisation.svg.TextPath this$0 -> a
    62:62:void <init>(celtech.coreUI.visualisation.svg.TextPath) -> <init>
    66:67:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
    62:62:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.svg.TextPath$3 -> e.d$3:
    celtech.coreUI.visualisation.svg.TextPath this$0 -> a
    77:77:void <init>(celtech.coreUI.visualisation.svg.TextPath) -> <init>
    81:82:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    77:77:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.svg.TextPath$4 -> e.d$4:
    celtech.coreUI.visualisation.svg.TextPath this$0 -> a
    90:90:void <init>(celtech.coreUI.visualisation.svg.TextPath) -> <init>
    94:95:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    90:90:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.coreUI.visualisation.svg.TextPath$5 -> e.d$5:
    org.controlsfx.control.PopOver val$popOver -> a
    celtech.coreUI.visualisation.svg.TextPath this$0 -> b
    106:106:void <init>(celtech.coreUI.visualisation.svg.TextPath,org.controlsfx.control.PopOver) -> <init>
    110:114:void handle(javafx.scene.input.MouseEvent) -> a
    106:106:void handle(javafx.event.Event) -> handle
celtech.legacy.RoboxProfile -> celtech.legacy.RoboxProfile:
    int LOCAL_version_number -> LOCAL_version_number
    libertysystems.stenographer.Stenographer LOCAL_steno -> LOCAL_steno
    javafx.beans.property.StringProperty LOCAL_profileName -> LOCAL_profileName
    boolean LOCAL_mutable -> LOCAL_mutable
    java.text.NumberFormat LOCAL_numberFormatter -> LOCAL_numberFormatter
    javafx.beans.property.StringProperty print_center -> print_center
    javafx.collections.ObservableList bed_size -> bed_size
    javafx.beans.property.FloatProperty z_offset -> z_offset
    javafx.beans.property.StringProperty gcode_flavor -> gcode_flavor
    javafx.beans.property.BooleanProperty use_relative_e_distances -> use_relative_e_distances
    javafx.beans.property.IntegerProperty vibration_limit -> vibration_limit
    javafx.beans.property.StringProperty end_gcode -> end_gcode
    javafx.beans.property.StringProperty layer_gcode -> layer_gcode
    javafx.beans.property.StringProperty toolchange_gcode -> toolchange_gcode
    javafx.collections.ObservableList retract_before_travel -> retract_before_travel
    javafx.collections.ObservableList retract_length -> retract_length
    javafx.collections.ObservableList retract_length_toolchange -> retract_length_toolchange
    javafx.collections.ObservableList retract_lift -> retract_lift
    javafx.collections.ObservableList retract_restart_extra -> retract_restart_extra
    javafx.collections.ObservableList retract_restart_extra_toolchange -> retract_restart_extra_toolchange
    javafx.collections.ObservableList retract_speed -> retract_speed
    javafx.collections.ObservableList retract_layer_change -> retract_layer_change
    javafx.collections.ObservableList wipe -> wipe
    javafx.collections.ObservableList nozzle_diameter -> nozzle_diameter
    javafx.beans.property.BooleanProperty ooze_prevention -> ooze_prevention
    javafx.beans.property.BooleanProperty thin_walls -> thin_walls
    javafx.beans.property.BooleanProperty use_firmware_retraction -> use_firmware_retraction
    javafx.beans.property.IntegerProperty perimeter_acceleration -> perimeter_acceleration
    javafx.beans.property.IntegerProperty infill_acceleration -> infill_acceleration
    javafx.beans.property.IntegerProperty bridge_acceleration -> bridge_acceleration
    javafx.beans.property.IntegerProperty default_acceleration -> default_acceleration
    javafx.beans.property.BooleanProperty infill_only_where_needed -> infill_only_where_needed
    javafx.beans.property.IntegerProperty solid_infill_every_layers -> solid_infill_every_layers
    javafx.beans.property.IntegerProperty fill_angle -> fill_angle
    javafx.beans.property.IntegerProperty solid_infill_below_area -> solid_infill_below_area
    javafx.beans.property.BooleanProperty only_retract_when_crossing_perimeters -> only_retract_when_crossing_perimeters
    javafx.beans.property.BooleanProperty infill_first -> infill_first
    javafx.beans.property.BooleanProperty cooling -> cooling
    javafx.beans.property.BooleanProperty fan_always_on -> fan_always_on
    javafx.beans.property.IntegerProperty max_fan_speed -> max_fan_speed
    javafx.beans.property.IntegerProperty min_fan_speed -> min_fan_speed
    javafx.beans.property.IntegerProperty bridge_fan_speed -> bridge_fan_speed
    javafx.beans.property.IntegerProperty disable_fan_first_layers -> disable_fan_first_layers
    javafx.beans.property.IntegerProperty fan_below_layer_time -> fan_below_layer_time
    javafx.beans.property.IntegerProperty slowdown_below_layer_time -> slowdown_below_layer_time
    javafx.beans.property.IntegerProperty min_print_speed -> min_print_speed
    javafx.beans.property.BooleanProperty avoid_crossing_perimeters -> avoid_crossing_perimeters
    javafx.beans.property.FloatProperty bridge_flow_ratio -> bridge_flow_ratio
    javafx.beans.property.IntegerProperty brim_width -> brim_width
    javafx.beans.property.BooleanProperty complete_objects -> complete_objects
    javafx.beans.property.BooleanProperty external_perimeters_first -> external_perimeters_first
    javafx.beans.property.BooleanProperty extra_perimeters -> extra_perimeters
    javafx.beans.property.IntegerProperty extruder_clearance_height -> extruder_clearance_height
    javafx.beans.property.IntegerProperty extruder_clearance_radius -> extruder_clearance_radius
    javafx.beans.property.StringProperty extrusion_axis -> extrusion_axis
    javafx.beans.property.FloatProperty first_layer_extrusion_width -> first_layer_extrusion_width
    javafx.beans.property.FloatProperty first_layer_height -> first_layer_height
    javafx.beans.property.IntegerProperty g0 -> g0
    javafx.beans.property.IntegerProperty gcode_arcs -> gcode_arcs
    javafx.beans.property.BooleanProperty gcode_comments -> gcode_comments
    javafx.beans.property.IntegerProperty infill_extruder -> infill_extruder
    javafx.beans.property.IntegerProperty min_skirt_length -> min_skirt_length
    javafx.beans.property.StringProperty notes -> notes
    javafx.beans.property.StringProperty output_filename_format -> output_filename_format
    javafx.beans.property.IntegerProperty perimeter_extruder -> perimeter_extruder
    javafx.beans.property.StringProperty post_process -> post_process
    javafx.beans.property.BooleanProperty randomize_start -> randomize_start
    javafx.beans.property.IntegerProperty resolution -> resolution
    javafx.beans.property.IntegerProperty rotate -> rotate
    javafx.beans.property.IntegerProperty scale -> scale
    javafx.beans.property.IntegerProperty skirt_distance -> skirt_distance
    javafx.beans.property.IntegerProperty skirt_height -> skirt_height
    javafx.beans.property.IntegerProperty skirts -> skirts
    javafx.beans.property.StringProperty solid_fill_pattern -> solid_fill_pattern
    javafx.beans.property.IntegerProperty threads -> threads
    javafx.beans.property.IntegerProperty support_material_interface_layers -> support_material_interface_layers
    javafx.beans.property.IntegerProperty support_material_interface_spacing -> support_material_interface_spacing
    javafx.beans.property.IntegerProperty raft_layers -> raft_layers
    javafx.beans.property.IntegerProperty travel_speed -> travel_speed
    javafx.beans.property.FloatProperty filament_diameter -> filament_diameter
    javafx.beans.property.StringProperty start_gcode -> start_gcode
    javafx.collections.ObservableList nozzle_partial_b_minimum -> nozzle_partial_b_minimum
    javafx.collections.ObservableList nozzle_preejection_volume -> nozzle_preejection_volume
    javafx.collections.ObservableList nozzle_ejection_volume -> nozzle_ejection_volume
    javafx.collections.ObservableList nozzle_wipe_volume -> nozzle_wipe_volume
    javafx.beans.property.FloatProperty fill_density -> fill_density
    javafx.beans.property.StringProperty fill_pattern -> fill_pattern
    javafx.beans.property.IntegerProperty infill_every_layers -> infill_every_layers
    javafx.beans.property.IntegerProperty bottom_solid_layers -> bottom_solid_layers
    javafx.beans.property.IntegerProperty top_solid_layers -> top_solid_layers
    javafx.beans.property.BooleanProperty support_material -> support_material
    javafx.beans.property.IntegerProperty support_material_threshold -> support_material_threshold
    javafx.beans.property.IntegerProperty support_material_enforce_layers -> support_material_enforce_layers
    javafx.beans.property.StringProperty support_material_pattern -> support_material_pattern
    javafx.beans.property.FloatProperty support_material_spacing -> support_material_spacing
    javafx.beans.property.IntegerProperty support_material_angle -> support_material_angle
    javafx.beans.property.FloatProperty layer_height -> layer_height
    javafx.beans.property.IntegerProperty perimeter_speed -> perimeter_speed
    javafx.beans.property.IntegerProperty small_perimeter_speed -> small_perimeter_speed
    javafx.beans.property.IntegerProperty external_perimeter_speed -> external_perimeter_speed
    javafx.beans.property.IntegerProperty infill_speed -> infill_speed
    javafx.beans.property.IntegerProperty solid_infill_speed -> solid_infill_speed
    javafx.beans.property.IntegerProperty top_solid_infill_speed -> top_solid_infill_speed
    javafx.beans.property.IntegerProperty support_material_speed -> support_material_speed
    javafx.beans.property.IntegerProperty bridge_speed -> bridge_speed
    javafx.beans.property.IntegerProperty gap_fill_speed -> gap_fill_speed
    javafx.beans.property.IntegerProperty first_layer_speed -> first_layer_speed
    javafx.beans.property.BooleanProperty spiral_vase -> spiral_vase
    javafx.beans.property.FloatProperty extrusion_width -> extrusion_width
    javafx.beans.property.FloatProperty perimeter_extrusion_width -> perimeter_extrusion_width
    javafx.beans.property.FloatProperty infill_extrusion_width -> infill_extrusion_width
    javafx.beans.property.FloatProperty solid_infill_extrusion_width -> solid_infill_extrusion_width
    javafx.beans.property.FloatProperty top_infill_extrusion_width -> top_infill_extrusion_width
    javafx.beans.property.FloatProperty support_material_extrusion_width -> support_material_extrusion_width
    javafx.beans.property.IntegerProperty perimeters -> perimeters
    javafx.beans.property.BooleanProperty overhangs -> overhangs
    javafx.beans.property.IntegerProperty support_material_extruder -> support_material_extruder
    javafx.beans.property.IntegerProperty support_material_interface_extruder -> support_material_interface_extruder
    javafx.beans.property.IntegerProperty first_layer_acceleration -> first_layer_acceleration
    javafx.beans.property.BooleanProperty autowipe -> autowipe
    javafx.beans.property.BooleanProperty dont_support_bridges -> dont_support_bridges
    javafx.beans.property.IntegerProperty interface_shells -> interface_shells
    javafx.beans.property.StringProperty seam_position -> seam_position
    javafx.beans.property.FloatProperty standby_temperature_delta -> standby_temperature_delta
    javafx.beans.property.IntegerProperty support_material_interface_speed -> support_material_interface_speed
    javafx.collections.ObservableList nozzle_close_at_midpoint -> nozzle_close_at_midpoint
    javafx.collections.ObservableList nozzle_close_midpoint_percent -> nozzle_close_midpoint_percent
    javafx.collections.ObservableList nozzle_open_over_volume -> nozzle_open_over_volume
    javafx.beans.property.IntegerProperty force_nozzle_on_first_layer -> force_nozzle_on_first_layer
    javafx.beans.property.IntegerProperty perimeter_nozzle -> perimeter_nozzle
    javafx.beans.property.IntegerProperty fill_nozzle -> fill_nozzle
    javafx.beans.property.IntegerProperty support_nozzle -> support_nozzle
    javafx.beans.property.IntegerProperty support_interface_nozzle -> support_interface_nozzle
    40:698:void <init>() -> <init>
    40:708:void <init>(boolean) -> <init>
    716:717:void setFilament_diameter(float) -> a
    725:725:float getFilament_diameter() -> a
    734:734:javafx.beans.property.FloatProperty filament_diameterProperty() -> b
    747:747:javafx.beans.property.StringProperty getPrint_center() -> c
    756:757:void setPrint_center(javafx.beans.property.StringProperty) -> a
    765:765:javafx.collections.ObservableList getRetract_restart_extra_toolchange() -> d
    774:775:void setRetract_restart_extra_toolchange(javafx.collections.ObservableList) -> a
    783:783:javafx.collections.ObservableList getBed_size() -> e
    792:793:void setBed_size(javafx.collections.ObservableList) -> b
    801:801:javafx.beans.property.FloatProperty getZ_offset() -> f
    810:811:void setZ_offset(javafx.beans.property.FloatProperty) -> a
    819:819:javafx.beans.property.StringProperty getGcode_flavor() -> g
    828:829:void setGcode_flavor(javafx.beans.property.StringProperty) -> b
    837:837:javafx.beans.property.BooleanProperty getUse_relative_e_distances() -> h
    846:847:void setUse_relative_e_distances(boolean) -> a
    855:855:javafx.beans.property.IntegerProperty getVibration_limit() -> i
    864:865:void setVibration_limit(javafx.beans.property.IntegerProperty) -> a
    873:873:javafx.beans.property.StringProperty getStart_gcode() -> j
    882:883:void setStart_gcode(java.lang.String) -> a
    891:891:javafx.beans.property.StringProperty getEnd_gcode() -> k
    900:901:void setEnd_gcode(java.lang.String) -> b
    909:909:javafx.beans.property.StringProperty getLayer_gcode() -> l
    918:919:void setLayer_gcode(javafx.beans.property.StringProperty) -> c
    927:927:javafx.beans.property.StringProperty getToolchange_gcode() -> m
    936:937:void setToolchange_gcode(javafx.beans.property.StringProperty) -> d
    945:945:javafx.beans.property.IntegerProperty perimeter_extruderProperty() -> n
    954:955:void setPerimeter_extruder(int) -> a
    963:963:javafx.beans.property.IntegerProperty infill_extruderProperty() -> o
    972:973:void setInfill_extruder(int) -> b
    981:981:javafx.beans.property.IntegerProperty support_material_extruderProperty() -> p
    990:991:void setSupport_material_extruder(int) -> c
    999:999:javafx.beans.property.IntegerProperty support_material_interface_extruderProperty() -> q
    1008:1009:void setSupport_material_interface_extruder(int) -> d
    1017:1017:javafx.collections.ObservableList getRetract_lift() -> r
    1026:1027:void setRetract_lift(javafx.collections.ObservableList) -> c
    1035:1035:javafx.collections.ObservableList getRetract_restart_extra() -> s
    1044:1045:void setRetract_restart_extra(javafx.collections.ObservableList) -> d
    1053:1053:javafx.collections.ObservableList getRetract_before_travel() -> t
    1062:1063:void setRetract_before_travel(javafx.collections.ObservableList) -> e
    1071:1071:javafx.collections.ObservableList getRetract_layer_change() -> u
    1080:1081:void setRetract_layer_change(javafx.collections.ObservableList) -> f
    1089:1089:javafx.collections.ObservableList getWipe() -> v
    1098:1099:void setWipe(javafx.collections.ObservableList) -> g
    1107:1107:javafx.collections.ObservableList getNozzle_diameter() -> w
    1116:1117:void setNozzle_diameter(javafx.collections.ObservableList) -> h
    1125:1125:javafx.beans.property.IntegerProperty getPerimeter_acceleration() -> x
    1134:1135:void setPerimeter_acceleration(javafx.beans.property.IntegerProperty) -> b
    1143:1143:javafx.beans.property.IntegerProperty getInfill_acceleration() -> y
    1152:1153:void setInfill_acceleration(javafx.beans.property.IntegerProperty) -> c
    1161:1161:javafx.beans.property.IntegerProperty getBridge_acceleration() -> z
    1170:1171:void setBridge_acceleration(javafx.beans.property.IntegerProperty) -> d
    1179:1179:javafx.beans.property.IntegerProperty getDefault_acceleration() -> A
    1188:1189:void setDefault_acceleration(javafx.beans.property.IntegerProperty) -> e
    1197:1197:javafx.collections.ObservableList retract_lengthProperty() -> B
    1206:1207:void setRetract_length(javafx.collections.ObservableList) -> i
    1215:1215:javafx.collections.ObservableList retract_speedProperty() -> C
    1224:1225:void setRetract_speed(javafx.collections.ObservableList) -> j
    1233:1233:javafx.collections.ObservableList getNozzle_ejection_volume() -> D
    1242:1242:javafx.collections.ObservableList getNozzle_preejection_volume() -> E
    1251:1251:javafx.collections.ObservableList getNozzle_partial_b_minimum() -> F
    1260:1260:javafx.collections.ObservableList getNozzle_wipe_volume() -> G
    1269:1269:javafx.beans.property.BooleanProperty getFan_always_on() -> H
    1278:1279:void setFan_always_on(javafx.beans.property.BooleanProperty) -> a
    1287:1287:javafx.beans.property.BooleanProperty getCooling() -> I
    1296:1297:void setCooling(javafx.beans.property.BooleanProperty) -> b
    1305:1305:javafx.beans.property.IntegerProperty getMax_fan_speed() -> J
    1314:1315:void setMax_fan_speed(javafx.beans.property.IntegerProperty) -> f
    1323:1323:javafx.beans.property.IntegerProperty getMin_fan_speed() -> K
    1332:1333:void setMin_fan_speed(javafx.beans.property.IntegerProperty) -> g
    1341:1341:javafx.beans.property.IntegerProperty getBridge_fan_speed() -> L
    1350:1351:void setBridge_fan_speed(javafx.beans.property.IntegerProperty) -> h
    1359:1359:javafx.beans.property.IntegerProperty getDisable_fan_first_layers() -> M
    1368:1369:void setDisable_fan_first_layers(javafx.beans.property.IntegerProperty) -> i
    1377:1377:javafx.beans.property.IntegerProperty getFan_below_layer_time() -> N
    1386:1387:void setFan_below_layer_time(javafx.beans.property.IntegerProperty) -> j
    1395:1395:javafx.beans.property.IntegerProperty getSlowdown_below_layer_time() -> O
    1404:1405:void setSlowdown_below_layer_time(javafx.beans.property.IntegerProperty) -> k
    1413:1413:javafx.beans.property.IntegerProperty getMin_print_speed() -> P
    1422:1423:void setMin_print_speed(javafx.beans.property.IntegerProperty) -> l
    1431:1431:javafx.beans.property.FloatProperty fill_densityProperty() -> Q
    1440:1441:void setFill_density(float) -> b
    1449:1449:javafx.beans.property.StringProperty fill_patternProperty() -> R
    1458:1459:void setFill_pattern(java.lang.String) -> c
    1467:1467:javafx.beans.property.IntegerProperty infill_every_layersProperty() -> S
    1476:1477:void setInfill_every_layers(int) -> e
    1485:1485:javafx.beans.property.BooleanProperty getInfill_only_where_needed() -> T
    1494:1495:void setInfill_only_where_needed(boolean) -> b
    1503:1503:javafx.beans.property.IntegerProperty getSolid_infill_every_layers() -> U
    1512:1513:void setSolid_infill_every_layers(int) -> f
    1521:1521:javafx.beans.property.IntegerProperty getFill_angle() -> V
    1530:1531:void setFill_angle(javafx.beans.property.IntegerProperty) -> m
    1539:1539:javafx.beans.property.IntegerProperty getSolid_infill_below_area() -> W
    1548:1549:void setSolid_infill_below_area(javafx.beans.property.IntegerProperty) -> n
    1557:1557:javafx.beans.property.BooleanProperty getOnly_retract_when_crossing_perimeters() -> X
    1566:1566:javafx.beans.property.BooleanProperty getInfill_first() -> Y
    1575:1575:javafx.beans.property.IntegerProperty perimeter_speedProperty() -> Z
    1584:1585:void setPerimeter_speed(int) -> g
    1593:1593:javafx.beans.property.IntegerProperty small_perimeter_speedProperty() -> aa
    1602:1603:void setSmall_perimeter_speed(int) -> h
    1611:1611:javafx.beans.property.IntegerProperty external_perimeter_speedProperty() -> ab
    1620:1621:void setExternal_perimeter_speed(int) -> i
    1629:1629:javafx.beans.property.IntegerProperty infill_speedProperty() -> ac
    1638:1639:void setInfill_speed(int) -> j
    1647:1647:javafx.beans.property.IntegerProperty solid_infill_speedProperty() -> ad
    1656:1657:void setSolid_infill_speed(int) -> k
    1665:1665:javafx.beans.property.IntegerProperty top_solid_infill_speedProperty() -> ae
    1674:1675:void setTop_solid_infill_speed(int) -> l
    1683:1683:javafx.beans.property.IntegerProperty support_material_speedProperty() -> af
    1692:1693:void setSupport_material_speed(int) -> m
    1701:1701:javafx.beans.property.IntegerProperty bridge_speedProperty() -> ag
    1710:1711:void setBridge_speed(int) -> n
    1719:1719:javafx.beans.property.IntegerProperty gap_fill_speedProperty() -> ah
    1728:1729:void setGap_fill_speed(int) -> o
    1737:1737:javafx.beans.property.IntegerProperty travel_speedProperty() -> ai
    1746:1747:void setTravel_speed(int) -> p
    1755:1755:javafx.beans.property.IntegerProperty first_layer_speedProperty() -> aj
    1764:1765:void setFirst_layer_speed(int) -> q
    1773:1773:javafx.beans.property.IntegerProperty support_material_thresholdProperty() -> ak
    1782:1783:void setSupport_material_threshold(int) -> r
    1791:1791:javafx.beans.property.IntegerProperty support_material_enforce_layersProperty() -> al
    1800:1801:void setSupport_material_enforce_layers(int) -> s
    1809:1809:javafx.beans.property.IntegerProperty getRaft_layers() -> am
    1818:1819:void setRaft_layers(javafx.beans.property.IntegerProperty) -> o
    1827:1827:javafx.beans.property.StringProperty support_material_patternProperty() -> an
    1836:1837:void setSupport_material_pattern(java.lang.String) -> d
    1845:1845:javafx.beans.property.FloatProperty support_material_spacingProperty() -> ao
    1854:1855:void setSupport_material_spacing(float) -> c
    1863:1863:javafx.beans.property.IntegerProperty support_material_angleProperty() -> ap
    1872:1873:void setSupport_material_angle(int) -> t
    1881:1881:javafx.beans.property.IntegerProperty getSupport_material_interface_layers() -> aq
    1890:1891:void setSupport_material_interface_layers(javafx.beans.property.IntegerProperty) -> p
    1899:1899:javafx.beans.property.IntegerProperty getSupport_material_interface_spacing() -> ar
    1908:1909:void setSupport_material_interface_spacing(javafx.beans.property.IntegerProperty) -> q
    1917:1917:javafx.beans.property.FloatProperty getLayer_height() -> as
    1926:1927:void setLayer_height(javafx.beans.property.FloatProperty) -> b
    1935:1935:javafx.beans.property.BooleanProperty support_materialProperty() -> at
    1944:1945:void setSupport_material(boolean) -> c
    1953:1953:javafx.beans.property.BooleanProperty getAvoid_crossing_perimeters() -> au
    1962:1963:void setAvoid_crossing_perimeters(boolean) -> d
    1971:1971:javafx.beans.property.IntegerProperty bottom_solid_layersProperty() -> av
    1980:1981:void setBottom_solid_layers(int) -> u
    1989:1989:javafx.beans.property.FloatProperty getBridge_flow_ratio() -> aw
    1998:1999:void setBridge_flow_ratio(javafx.beans.property.FloatProperty) -> c
    2007:2007:javafx.beans.property.IntegerProperty getBrim_width() -> ax
    2016:2017:void setBrim_width(javafx.beans.property.IntegerProperty) -> r
    2025:2025:javafx.beans.property.BooleanProperty getComplete_objects() -> ay
    2034:2034:javafx.beans.property.BooleanProperty getExternal_perimeters_first() -> az
    2043:2043:javafx.beans.property.BooleanProperty getExtra_perimeters() -> aA
    2052:2052:javafx.beans.property.IntegerProperty getExtruder_clearance_height() -> aB
    2061:2062:void setExtruder_clearance_height(javafx.beans.property.IntegerProperty) -> s
    2070:2070:javafx.beans.property.IntegerProperty getExtruder_clearance_radius() -> aC
    2079:2080:void setExtruder_clearance_radius(javafx.beans.property.IntegerProperty) -> t
    2088:2088:javafx.beans.property.StringProperty getExtrusion_axis() -> aD
    2097:2098:void setExtrusion_axis(javafx.beans.property.StringProperty) -> e
    2106:2106:javafx.beans.property.FloatProperty getExtrusion_width() -> aE
    2115:2115:javafx.beans.property.FloatProperty getSupport_material_extrusion_width() -> aF
    2124:2124:javafx.beans.property.FloatProperty getFirst_layer_extrusion_width() -> aG
    2133:2133:javafx.beans.property.FloatProperty getFirst_layer_height() -> aH
    2142:2143:void setFirst_layer_height(javafx.beans.property.FloatProperty) -> d
    2151:2151:javafx.beans.property.IntegerProperty getG0() -> aI
    2160:2161:void setG0(javafx.beans.property.IntegerProperty) -> u
    2169:2169:javafx.beans.property.IntegerProperty getGcode_arcs() -> aJ
    2178:2179:void setGcode_arcs(javafx.beans.property.IntegerProperty) -> v
    2187:2187:javafx.beans.property.BooleanProperty getGcode_comments() -> aK
    2196:2196:javafx.beans.property.IntegerProperty getInfill_extruder() -> aL
    2205:2206:void setInfill_extruder(javafx.beans.property.IntegerProperty) -> w
    2214:2214:javafx.beans.property.FloatProperty getInfill_extrusion_width() -> aM
    2223:2224:void setInfill_extrusion_width(float) -> d
    2232:2232:javafx.beans.property.IntegerProperty getMin_skirt_length() -> aN
    2241:2242:void setMin_skirt_length(javafx.beans.property.IntegerProperty) -> x
    2250:2250:javafx.beans.property.StringProperty getNotes() -> aO
    2259:2260:void setNotes(javafx.beans.property.StringProperty) -> f
    2268:2268:javafx.beans.property.StringProperty getOutput_filename_format() -> aP
    2277:2278:void setOutput_filename_format(javafx.beans.property.StringProperty) -> g
    2286:2286:javafx.beans.property.IntegerProperty getPerimeter_extruder() -> aQ
    2295:2296:void setPerimeter_extruder(javafx.beans.property.IntegerProperty) -> y
    2304:2304:javafx.beans.property.FloatProperty getPerimeter_extrusion_width() -> aR
    2313:2314:void setPerimeter_extrusion_width(float) -> e
    2322:2322:javafx.beans.property.IntegerProperty perimetersProperty() -> aS
    2331:2332:void setPerimeters(int) -> v
    2340:2340:javafx.beans.property.StringProperty getPost_process() -> aT
    2349:2350:void setPost_process(javafx.beans.property.StringProperty) -> h
    2358:2358:javafx.beans.property.BooleanProperty getRandomize_start() -> aU
    2367:2367:javafx.beans.property.IntegerProperty getResolution() -> aV
    2376:2377:void setResolution(javafx.beans.property.IntegerProperty) -> z
    2385:2385:javafx.collections.ObservableList getRetract_length_toolchange() -> aW
    2394:2395:void setRetract_length_toolchange(javafx.collections.ObservableList) -> k
    2403:2403:javafx.beans.property.IntegerProperty getRotate() -> aX
    2412:2413:void setRotate(javafx.beans.property.IntegerProperty) -> A
    2421:2421:javafx.beans.property.IntegerProperty getScale() -> aY
    2430:2431:void setScale(javafx.beans.property.IntegerProperty) -> B
    2439:2439:javafx.beans.property.IntegerProperty getSkirt_distance() -> aZ
    2448:2449:void setSkirt_distance(javafx.beans.property.IntegerProperty) -> C
    2457:2457:javafx.beans.property.IntegerProperty getSkirt_height() -> ba
    2466:2467:void setSkirt_height(javafx.beans.property.IntegerProperty) -> D
    2475:2475:javafx.beans.property.IntegerProperty getSkirts() -> bb
    2484:2485:void setSkirts(javafx.beans.property.IntegerProperty) -> E
    2493:2493:javafx.beans.property.StringProperty getSolid_fill_pattern() -> bc
    2502:2503:void setSolid_fill_pattern(javafx.beans.property.StringProperty) -> i
    2511:2511:javafx.beans.property.FloatProperty getSolid_infill_extrusion_width() -> bd
    2520:2521:void setSolid_infill_extrusion_width(float) -> f
    2529:2529:javafx.beans.property.BooleanProperty spiral_vaseProperty() -> be
    2538:2539:void setSpiral_vase(boolean) -> e
    2547:2547:javafx.beans.property.IntegerProperty getThreads() -> bf
    2556:2557:void setThreads(javafx.beans.property.IntegerProperty) -> F
    2565:2565:javafx.beans.property.FloatProperty getTop_infill_extrusion_width() -> bg
    2574:2575:void setTop_infill_extrusion_width(float) -> g
    2583:2583:javafx.beans.property.IntegerProperty top_solid_layersProperty() -> bh
    2592:2593:void setTop_solid_layers(int) -> w
    2601:2601:boolean getAutowipe() -> bi
    2610:2610:boolean isMutable() -> bj
    2619:2620:void setMutable(boolean) -> f
    2628:2628:java.lang.String getProfileName() -> bk
    2637:2637:javafx.beans.property.StringProperty getProfileNameProperty() -> bl
    2646:2646:javafx.collections.ObservableList getNozzle_close_at_midpoint() -> bm
    2655:2655:javafx.collections.ObservableList getNozzle_close_midpoint_percent() -> bn
    2664:2664:javafx.collections.ObservableList getNozzle_open_over_volume() -> bo
    2673:2673:javafx.beans.property.IntegerProperty getForce_nozzle_on_first_layer() -> bp
    2682:2682:javafx.beans.property.IntegerProperty getPerimeterNozzleProperty() -> bq
    2691:2691:javafx.beans.property.IntegerProperty getSupportNozzleProperty() -> br
    2700:2700:javafx.beans.property.IntegerProperty getSupportInterfaceNozzleProperty() -> bs
    2709:2709:javafx.beans.property.IntegerProperty getFillNozzleProperty() -> bt
    2720:2884:void readFromFile(java.lang.String,boolean,java.lang.String) -> a
    2892:3075:void writeToFile(java.lang.String) -> e
    3080:3255:void writeObject(java.io.ObjectOutputStream) -> writeObject
    3260:3401:void readObject(java.io.ObjectInputStream) -> readObject
    3407:3407:void readObjectNoData() -> bw
    3416:3524:celtech.legacy.RoboxProfile clone() -> bu
    3534:3534:java.lang.String toString() -> toString
    3539:3539:int getVersionNumber() -> bv
    3544:3545:void setVersionNumber(int) -> x
    38:38:java.lang.Object clone() -> clone
celtech.modelcontrol.ContainerOperation -> celtech.modelcontrol.a:
celtech.modelcontrol.Groupable -> celtech.modelcontrol.b:
celtech.modelcontrol.ItemState -> celtech.modelcontrol.ItemState:
    int modelId -> modelId
    double x -> x
    double y -> y
    double preferredXScale -> preferredXScale
    double preferredYScale -> preferredYScale
    double preferredRotationTurn -> preferredRotationTurn
    void assignFrom(celtech.modelcontrol.ItemState) -> assignFrom
    23:24:void <init>() -> <init>
    27:29:void <init>(int) -> <init>
celtech.modelcontrol.ModelContainer -> celtech.modelcontrol.ModelContainer:
    long serialVersionUID -> serialVersionUID
    int nextModelId -> nextModelId
    libertysystems.stenographer.Stenographer steno -> steno
    boolean isInvalidMesh -> isInvalidMesh
    javafx.scene.transform.Translate transformDropToBedYAdjust -> transformDropToBedYAdjust
    javafx.scene.transform.Rotate transformRotateTwistPreferred -> transformRotateTwistPreferred
    javafx.scene.transform.Rotate transformRotateLeanPreferred -> transformRotateLeanPreferred
    javafx.scene.shape.MeshView meshView -> meshView
    javafx.beans.property.DoubleProperty preferredZScale -> preferredZScale
    javafx.beans.property.DoubleProperty preferredRotationTwist -> preferredRotationTwist
    javafx.beans.property.DoubleProperty preferredRotationLean -> preferredRotationLean
    celtech.coreUI.visualisation.modelDisplay.SelectionHighlighter selectionHighlighter -> selectionHighlighter
    javafx.beans.property.IntegerProperty associateWithExtruderNumber -> associateWithExtruderNumber
    double cameraDistance -> cameraDistance
    javafx.scene.Camera cameraViewingMe -> cameraViewingMe
    javafx.scene.shape.MeshView collisionShape -> collisionShape
    java.util.List collisionShapeListeners -> collisionShapeListeners
    javafx.scene.transform.Translate currenttransformBedCentre -> currenttransformBedCentre
    double currentDropY -> currentDropY
    89:129:void <init>() -> <init>
    89:139:void <init>(java.io.File,javafx.scene.shape.MeshView) -> <init>
    143:145:void <init>(java.io.File,javafx.scene.shape.MeshView,int) -> <init>
    152:160:celtech.modelcontrol.ModelContainer getParentModelContainer() -> getParentModelContainer
    170:171:void clearElements() -> a
    175:176:void setUseExtruder0(boolean) -> setUseExtruder0
    180:190:void printTransforms() -> b
    194:194:java.util.List getRotationTransforms() -> getRotationTransforms
    199:248:void initialiseTransforms() -> c
    254:257:void setRotationPivotsToCentreOfModel() -> setRotationPivotsToCentreOfModel
    262:265:void moveToCentre() -> d
    269:293:void initialise(java.io.File) -> a
    297:302:void clearBedTransform() -> e
    310:312:void saveAndClearDropToBedYTransform() -> f
    316:317:void restoreDropToBedYTransform() -> g
    321:325:void saveAndClearBedTransform() -> h
    329:332:void restoreBedTransform() -> i
    341:349:void setBedCentreOffsetTransform() -> setBedCentreOffsetTransform
    359:369:celtech.modelcontrol.ProjectifiableThing makeCopy() -> j
    375:376:void translateBy(double,double) -> a
    381:427:void translateBy(double,double,double) -> a
    431:431:double getMoveToPreferredX() -> getMoveToPreferredX
    436:436:double getMoveToPreferredZ() -> getMoveToPreferredZ
    441:441:celtech.roboxbase.utils.RectangularBounds getLocalBounds() -> getLocalBounds
    450:457:void translateFrontLeftTo(double,double) -> b
    468:470:void translateTo(double,double) -> c
    474:476:void centreObjectOnBed() -> k
    481:522:void shrinkToFitBed() -> l
    532:534:java.util.Set getModelsHoldingMeshViews() -> getModelsHoldingMeshViews
    543:544:java.util.Collection getModelsHoldingModels() -> getModelsHoldingModels
    549:549:void addGroupStructure(java.util.Map) -> a
    560:595:void snapToGround(javafx.scene.shape.MeshView,int) -> a
    599:599:javafx.geometry.Point3D toPoint3D(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> b
    608:612:java.util.List getMaxAndMinYInBedCoords() -> getMaxAndMinYInBedCoords
    658:662:void updateScaleTransform() -> m
    667:670:void setZScale(double) -> setZScale
    678:697:void updateTransformsFromLeanTwistTurnAngles() -> B
    702:702:double getZScale() -> getZScale
    708:709:void setRotationTwist(double) -> setRotationTwist
    713:723:void setRotationTwist(double,boolean) -> setRotationTwist
    728:728:double getRotationTwist() -> getRotationTwist
    734:735:void setRotationTurn(double) -> setRotationTurn
    739:749:void setRotationTurn(double,boolean) -> setRotationTurn
    754:754:double getRotationTurn() -> getRotationTurn
    760:761:void setRotationLean(double) -> setRotationLean
    765:775:void setRotationLean(double,boolean) -> setRotationLean
    780:780:double getRotationLean() -> getRotationLean
    786:797:void selectedAction() -> n
    801:801:javafx.beans.property.BooleanProperty isSelectedProperty() -> isSelectedProperty
    807:836:void writeObject(java.io.ObjectOutputStream) -> writeObject
    840:864:javafx.scene.shape.MeshView readContainer_1_03_00_Contents(java.io.ObjectInputStream) -> a
    870:976:void readObject(java.io.ObjectInputStream) -> readObject
    982:982:void readObjectNoData() -> H
    986:986:javafx.scene.shape.MeshView getMeshView() -> getMeshView
    991:991:javafx.beans.property.IntegerProperty getAssociateWithExtruderNumberProperty() -> getAssociateWithExtruderNumberProperty
    997:1005:void resizeWidth(double) -> b
    1010:1019:void resizeHeight(double) -> c
    1025:1034:void resizeDepth(double) -> d
    1045:1068:void translateXTo(double) -> e
    1079:1102:void translateDepthPositionTo(double) -> f
    1106:1113:void translateYPositionTo(double) -> g
    1117:1117:double getYAdjust() -> getYAdjust
    1126:1168:void applyGroupTransformToThis(celtech.modelcontrol.ModelGroup) -> a
    1177:1200:void checkOffBed() -> o
    1204:1204:javafx.beans.property.BooleanProperty isOffBedProperty() -> isOffBedProperty
    1218:1231:boolean isModelTooHighWithOffset(double) -> h
    1241:1274:celtech.roboxbase.utils.RectangularBounds calculateBoundsInLocal() -> p
    1281:1284:java.util.Set descendentMeshViews() -> q
    1289:1289:celtech.modelcontrol.ModelContainer getRootModelContainer(javafx.scene.shape.MeshView) -> getRootModelContainer
    1294:1300:celtech.modelcontrol.ModelContainer getRootModelContainer() -> getRootModelContainer
    1310:1310:celtech.utils.threed.MeshCutter2$BedToLocalConverter getBedToLocalConverter() -> getBedToLocalConverter
    1338:1385:celtech.roboxbase.utils.RectangularBounds calculateBoundsInBedCoordinateSystem() -> r
    1398:1445:celtech.roboxbase.utils.RectangularBounds calculateBoundsInParentCoordinateSystem() -> s
    1456:1481:celtech.modelcontrol.ModelContainer splitIntoParts() -> t
    1492:1587:java.util.ArrayList cutToSize() -> u
    1597:1608:int compareTo(java.lang.Object) -> compareTo
    1617:1630:org.apache.commons.math3.geometry.euclidean.threed.Vector3D getFaceNormal(javafx.scene.shape.MeshView,int) -> getFaceNormal
    1635:1647:org.apache.commons.math3.geometry.euclidean.threed.Vector3D getFaceCentre(javafx.scene.shape.MeshView,int) -> getFaceCentre
    1652:1654:org.apache.commons.math3.geometry.euclidean.threed.Vector3D convertToVector3D(javafx.collections.ObservableFloatArray,int) -> a
    1660:1664:void dropToBed() -> v
    1669:1669:double getCentreZ() -> getCentreZ
    1675:1675:double getCentreY() -> getCentreY
    1681:1681:double getCentreX() -> getCentreX
    1686:1686:double getTransformedCentreY() -> getTransformedCentreY
    1692:1692:double getScaledHeight() -> getScaledHeight
    1698:1698:double getScaledDepth() -> getScaledDepth
    1704:1704:double getScaledWidth() -> getScaledWidth
    1712:1713:double getTotalWidth() -> getTotalWidth
    1721:1722:double getTotalDepth() -> getTotalDepth
    1731:1731:double getTotalSize() -> getTotalSize
    1736:1740:void addSelectionHighlighter() -> w
    1744:1750:void updateLastTransformedBoundsInParentForTranslateByX(double) -> i
    1754:1760:void updateLastTransformedBoundsInParentForTranslateByY(double) -> j
    1764:1770:void updateLastTransformedBoundsInParentForTranslateByZ(double) -> k
    1775:1776:void showSelectionHighlighter() -> I
    1780:1781:void hideSelectionHighlighter() -> J
    1786:1786:javafx.geometry.Point3D transformMeshToRealWorldCoordinates(float,float,float) -> a
    1801:1839:void updateColour(javafx.scene.paint.PhongMaterial,javafx.scene.paint.PhongMaterial,boolean) -> a
    1844:1936:boolean recalculateScreenExtents() -> x
    1942:1942:double getTransformedHeight() -> getTransformedHeight
    1948:1948:double getTransformedWidth() -> getTransformedWidth
    1954:1954:double getTransformedDepth() -> getTransformedDepth
    1960:1961:void heresYourCamera(javafx.scene.Camera) -> a
    1966:1972:void cameraViewOfYouHasChanged(double) -> a
    1976:1976:java.util.Set getChildModelContainers() -> getChildModelContainers
    1981:1981:java.util.Set getDescendentModelContainers() -> getDescendentModelContainers
    1988:1994:celtech.modelcontrol.ThreeDItemState getState() -> getState
    2000:2024:void setState(celtech.modelcontrol.ItemState) -> setState
    2028:2028:boolean isInvalidMesh() -> y
    2033:2034:void setIsInvalidMesh(boolean) -> setIsInvalidMesh
    2038:2038:javafx.scene.shape.MeshView getCollisionShape() -> getCollisionShape
    2043:2044:javafx.scene.shape.MeshView addCollisionShapeListener(celtech.coreUI.visualisation.collision.CollisionShapeListener) -> a
    2049:2050:void removeCollisionShapeListener(celtech.coreUI.visualisation.collision.CollisionShapeListener) -> b
    2055:2056:void printVolumeBoundsUpdated() -> z
    2061:2093:java.lang.String toString() -> toString
    2098:2099:void updateLastTransformedBoundsInParent() -> A
    73:73:celtech.modelcontrol.ItemState getState() -> getState
    73:73:javafx.geometry.Point3D access$000(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> a
    87:87:void <clinit>() -> <clinit>
celtech.modelcontrol.ModelContainer$1 -> celtech.modelcontrol.ModelContainer$1:
    celtech.modelcontrol.ModelContainer this$0 -> a
    1311:1311:void <init>(celtech.modelcontrol.ModelContainer) -> <init>
    1316:1318:javafx.geometry.Point3D localToBed(javafx.geometry.Point3D) -> a
    1324:1325:javafx.geometry.Point3D bedToLocal(javafx.geometry.Point3D) -> b
celtech.modelcontrol.ModelContainer$ApplyTwist -> celtech.modelcontrol.ModelContainer$a:
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D faceNormal -> a
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D faceCentre -> b
    javafx.scene.transform.Transform localToBedTransform -> c
    javafx.scene.Node bed -> d
    celtech.modelcontrol.ModelContainer this$0 -> e
    624:628:void <init>(celtech.modelcontrol.ModelContainer,javafx.scene.shape.MeshView,int) -> <init>
    633:639:javafx.geometry.Point3D getRotatedFaceNormal() -> a
    648:651:double value(double) -> value
celtech.modelcontrol.ModelContentsEnumeration -> celtech.modelcontrol.ModelContentsEnumeration:
    celtech.modelcontrol.ModelContentsEnumeration GCODE -> GCODE
    celtech.modelcontrol.ModelContentsEnumeration MESH -> MESH
    celtech.modelcontrol.ModelContentsEnumeration[] $VALUES -> $VALUES
    13:13:celtech.modelcontrol.ModelContentsEnumeration[] values() -> values
    13:13:celtech.modelcontrol.ModelContentsEnumeration valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:24:void <clinit>() -> <clinit>
celtech.modelcontrol.ModelGroup -> celtech.modelcontrol.ModelGroup:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.scene.Group modelContainersGroup -> modelContainersGroup
    java.util.Set childModelContainers -> childModelContainers
    double turnRotationAngle -> turnRotationAngle
    javafx.scene.transform.Rotate turnRotate -> turnRotate
    31:56:void <init>(java.util.Set) -> <init>
    60:67:void <init>(java.util.Set,int) -> <init>
    75:75:java.util.Set getChildModelContainers() -> getChildModelContainers
    86:92:java.util.Set getDescendentModelContainers() -> getDescendentModelContainers
    97:99:void removeModel(celtech.modelcontrol.ModelContainer) -> a
    104:106:void initialiseTransforms() -> c
    115:121:java.util.Set getModelsHoldingMeshViews() -> getModelsHoldingMeshViews
    131:141:java.util.Collection getModelsHoldingModels() -> getModelsHoldingModels
    150:159:void addGroupStructure(java.util.Map) -> a
    169:196:celtech.roboxbase.utils.RectangularBounds calculateBoundsInLocal() -> p
    204:211:java.util.Set descendentMeshViews() -> q
    223:228:void updateColour(javafx.scene.paint.PhongMaterial,javafx.scene.paint.PhongMaterial,boolean) -> a
    233:248:celtech.modelcontrol.ModelContainer makeCopy() -> B
    281:283:void screenExtentsChanged(celtech.coreUI.visualisation.ScreenExtentsProvider) -> screenExtentsChanged
    28:28:celtech.modelcontrol.ProjectifiableThing makeCopy() -> j
celtech.modelcontrol.ProjectifiableThing -> celtech.modelcontrol.c:
    java.io.File modelFile -> modelFile
    boolean isCollided -> isCollided
    javafx.beans.property.BooleanProperty isSelected -> isSelected
    javafx.beans.property.BooleanProperty isOffBed -> isOffBed
    celtech.coreUI.visualisation.ScreenExtents extents -> extents
    java.util.List shapeChangeListeners -> shapeChangeListeners
    java.util.List screenExtentsChangeListeners -> screenExtentsChangeListeners
    double printVolumeWidth -> printVolumeWidth
    double printVolumeDepth -> printVolumeDepth
    double printVolumeHeight -> printVolumeHeight
    javafx.scene.Group bed -> bed
    int modelId -> modelId
    javafx.beans.property.SimpleStringProperty modelName -> modelName
    javafx.scene.transform.Translate transformBedCentre -> transformBedCentre
    javafx.scene.transform.Scale transformScalePreferred -> transformScalePreferred
    javafx.scene.transform.Rotate transformRotateTurnPreferred -> transformRotateTurnPreferred
    javafx.scene.transform.Translate transformMoveToPreferred -> transformMoveToPreferred
    java.util.List rotationTransforms -> rotationTransforms
    celtech.roboxbase.utils.RectangularBounds lastTransformedBoundsInParent -> lastTransformedBoundsInParent
    celtech.roboxbase.utils.RectangularBounds originalModelBounds -> originalModelBounds
    javafx.geometry.Point3D Y_AXIS -> Y_AXIS
    javafx.geometry.Point3D Z_AXIS -> Z_AXIS
    javafx.geometry.Point3D X_AXIS -> X_AXIS
    javafx.beans.property.DoubleProperty preferredXScale -> preferredXScale
    javafx.beans.property.DoubleProperty preferredYScale -> preferredYScale
    javafx.beans.property.DoubleProperty preferredRotationTurn -> preferredRotationTurn
    double bedCentreOffsetX -> bedCentreOffsetX
    double bedCentreOffsetY -> bedCentreOffsetY
    double bedCentreOffsetZ -> bedCentreOffsetZ
    37:76:void <init>() -> <init>
    37:82:void <init>(java.io.File) -> <init>
    86:97:void initialise() -> b
    101:101:int getModelId() -> getModelId
    celtech.modelcontrol.ItemState getState() -> getState
    void setState(celtech.modelcontrol.ItemState) -> setState
    celtech.modelcontrol.ProjectifiableThing makeCopy() -> j
    void clearElements() -> a
    119:120:void setModelFile(java.io.File) -> setModelFile
    124:124:java.io.File getModelFile() -> getModelFile
    129:130:void addChildNodes(javafx.collections.ObservableList) -> a
    134:135:void addChildNode(javafx.scene.Node) -> a
    139:139:javafx.collections.ObservableList getChildNodes() -> getChildNodes
    144:146:void setSelected(boolean) -> setSelected
    150:150:boolean isSelected() -> C
    void selectedAction() -> n
    157:162:void setModelName(java.lang.String) -> setModelName
    166:166:java.lang.String getModelName() -> getModelName
    171:172:void setCollided(boolean) -> setCollided
    176:176:boolean isCollided() -> D
    boolean recalculateScreenExtents() -> x
    184:188:celtech.coreUI.visualisation.ScreenExtents getScreenExtents() -> getScreenExtents
    194:196:void addScreenExtentsChangeListener(celtech.coreUI.visualisation.ScreenExtentsProvider$ScreenExtentsListener) -> a
    202:203:void removeScreenExtentsChangeListener(celtech.coreUI.visualisation.ScreenExtentsProvider$ScreenExtentsListener) -> b
    207:214:void notifyScreenExtentsChange() -> E
    219:220:void addShapeChangeListener(celtech.coreUI.visualisation.ShapeProvider$ShapeChangeListener) -> a
    225:226:void removeShapeChangeListener(celtech.coreUI.visualisation.ShapeProvider$ShapeChangeListener) -> b
    234:238:void notifyShapeChange() -> F
    242:256:void updatePrintVolumeBounds(celtech.roboxbase.printerControl.model.Printer) -> a
    void printVolumeBoundsUpdated() -> z
    void checkOffBed() -> o
    void moveToCentre() -> d
    266:268:void setBedReference(javafx.scene.Group) -> setBedReference
    void setBedCentreOffsetTransform() -> setBedCentreOffsetTransform
    274:274:celtech.roboxbase.utils.RectangularBounds getOriginalModelBounds() -> getOriginalModelBounds
    void shrinkToFitBed() -> l
    celtech.roboxbase.utils.RectangularBounds calculateBoundsInLocal() -> p
    celtech.roboxbase.utils.RectangularBounds calculateBoundsInBedCoordinateSystem() -> r
    285:295:void setScalePivotToCentreOfModel() -> setScalePivotToCentreOfModel
    299:306:void setRotationPivotsToCentreOfModel() -> setRotationPivotsToCentreOfModel
    310:313:void updateOriginalModelBounds() -> G
    celtech.roboxbase.utils.RectangularBounds calculateBoundsInParentCoordinateSystem() -> s
    void updateScaleTransform() -> m
    321:321:javafx.scene.transform.Scale getTransformScale() -> getTransformScale
    326:326:double getXScale() -> getXScale
    331:331:double getYScale() -> getYScale
    336:339:void setXScale(double) -> setXScale
    343:346:void setYScale(double) -> setYScale
    350:355:double getTransformedCentreDepth() -> getTransformedCentreDepth
    361:361:double getTransformedCentreX() -> getTransformedCentreX
    93:94:void lambda$initialise$0(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Printer) -> a
    62:64:void <clinit>() -> <clinit>
celtech.modelcontrol.ResizeableThreeD -> celtech.modelcontrol.d:
    void resizeDepth(double) -> d
celtech.modelcontrol.ResizeableTwoD -> celtech.modelcontrol.e:
    void resizeHeight(double) -> c
    void resizeWidth(double) -> b
celtech.modelcontrol.RotatableThreeD -> celtech.modelcontrol.f:
    void setRotationTwist(double) -> setRotationTwist
    double getRotationTwist() -> getRotationTwist
    void setRotationLean(double) -> setRotationLean
    double getRotationLean() -> getRotationLean
celtech.modelcontrol.RotatableTwoD -> celtech.modelcontrol.g:
    void setRotationTurn(double) -> setRotationTurn
    double getRotationTurn() -> getRotationTurn
celtech.modelcontrol.ScaleableThreeD -> celtech.modelcontrol.h:
    double getZScale() -> getZScale
    void setZScale(double) -> setZScale
celtech.modelcontrol.ScaleableTwoD -> celtech.modelcontrol.i:
    double getXScale() -> getXScale
    void setXScale(double) -> setXScale
    double getYScale() -> getYScale
    void setYScale(double) -> setYScale
celtech.modelcontrol.ThreeDItemState -> celtech.modelcontrol.j:
    double z -> a
    double preferredZScale -> b
    double preferredRotationTwist -> c
    double preferredRotationLean -> d
    24:25:void <init>() -> <init>
    40:50:void <init>(int,double,double,double,double,double,double,double,double,double) -> <init>
    60:73:void assignFrom(celtech.modelcontrol.ItemState) -> assignFrom
celtech.modelcontrol.Translateable -> celtech.modelcontrol.k:
    void translateDepthPositionTo(double) -> f
celtech.modelcontrol.TranslateableThreeD -> celtech.modelcontrol.l:
    void translateBy(double,double,double) -> a
celtech.modelcontrol.TranslateableTwoD -> celtech.modelcontrol.m:
    void translateBy(double,double) -> a
    void translateTo(double,double) -> c
    void translateXTo(double) -> e
celtech.modelcontrol.TwoDItemState -> celtech.modelcontrol.n:
    20:21:void <init>() -> <init>
    32:38:void <init>(int,double,double,double,double,double) -> <init>
    48:57:void assignFrom(celtech.modelcontrol.ItemState) -> assignFrom
celtech.modelcontrol.WrongItemStateType -> celtech.modelcontrol.WrongItemStateType:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.ApplicationFeature -> celtech.roboxbase.ApplicationFeature:
    celtech.roboxbase.ApplicationFeature AUTO_UPDATE_FIRMWARE -> AUTO_UPDATE_FIRMWARE
    celtech.roboxbase.ApplicationFeature[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.ApplicationFeature[] values() -> values
    7:7:celtech.roboxbase.ApplicationFeature valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.roboxbase.BaseLookup -> celtech.roboxbase.a:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.ResourceBundle i18nbundle -> b
    java.util.Locale applicationLocale -> c
    celtech.roboxbase.utils.tasks.TaskExecutor taskExecutor -> d
    celtech.roboxbase.configuration.fileRepresentation.SlicerMappings slicerMappings -> e
    celtech.roboxbase.postprocessor.GCodeOutputWriterFactory postProcessorGCodeOutputWriterFactory -> f
    celtech.roboxbase.appManager.SystemNotificationManager systemNotificationHandler -> g
    boolean shuttingDown -> h
    celtech.roboxbase.printerControl.model.PrinterListChangesNotifier printerListChangesNotifier -> i
    javafx.collections.ObservableList connectedPrinters -> j
    javafx.collections.ObservableList connectedPrintersUnmodifiable -> k
    java.util.Set availableLocales -> l
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> m
    31:31:void <init>() -> <init>
    58:58:java.util.ResourceBundle getLanguageBundle() -> a
    63:65:java.lang.String i18n(java.lang.String) -> a
    77:92:java.lang.String substituteTemplates(java.lang.String) -> b
    97:97:celtech.roboxbase.utils.tasks.TaskExecutor getTaskExecutor() -> b
    102:103:void setTaskExecutor(celtech.roboxbase.utils.tasks.TaskExecutor) -> a
    107:108:void setSlicerMappings(celtech.roboxbase.configuration.fileRepresentation.SlicerMappings) -> a
    112:112:celtech.roboxbase.configuration.fileRepresentation.SlicerMappings getSlicerMappings() -> c
    117:117:celtech.roboxbase.postprocessor.GCodeOutputWriterFactory getPostProcessorOutputWriterFactory() -> d
    123:124:void setPostProcessorOutputWriterFactory(celtech.roboxbase.postprocessor.GCodeOutputWriterFactory) -> a
    128:128:celtech.roboxbase.appManager.SystemNotificationManager getSystemNotificationHandler() -> e
    134:135:void setSystemNotificationHandler(celtech.roboxbase.appManager.SystemNotificationManager) -> a
    139:139:boolean isShuttingDown() -> f
    144:145:void setShuttingDown(boolean) -> a
    149:149:celtech.roboxbase.printerControl.model.PrinterListChangesNotifier getPrinterListChangesNotifier() -> g
    154:158:void printerConnected(celtech.roboxbase.printerControl.model.Printer) -> a
    162:163:void doPrinterConnect(celtech.roboxbase.printerControl.model.Printer) -> c
    167:171:void printerDisconnected(celtech.roboxbase.printerControl.model.Printer) -> b
    175:176:void doPrinterDisconnect(celtech.roboxbase.printerControl.model.Printer) -> d
    180:180:javafx.collections.ObservableList getConnectedPrinters() -> h
    185:186:void setupDefaultValues() -> i
    190:190:java.util.Set getAvailableLocales() -> j
    195:195:java.util.Locale getApplicationLocale() -> k
    200:201:void setApplicationLocale(java.util.Locale) -> a
    205:227:void setupDefaultValues(libertysystems.stenographer.LogLevel,java.util.Locale,celtech.roboxbase.appManager.SystemNotificationManager) -> a
    169:170:void lambda$printerDisconnected$1(celtech.roboxbase.printerControl.model.Printer) -> e
    156:157:void lambda$printerConnected$0(celtech.roboxbase.printerControl.model.Printer) -> f
    34:49:void <clinit>() -> <clinit>
celtech.roboxbase.MaterialType -> celtech.roboxbase.MaterialType:
    celtech.roboxbase.MaterialType ABS -> ABS
    celtech.roboxbase.MaterialType PLA -> PLA
    celtech.roboxbase.MaterialType NYL -> NYL
    celtech.roboxbase.MaterialType HIP -> HIP
    celtech.roboxbase.MaterialType SPC -> SPC
    celtech.roboxbase.MaterialType PET -> PET
    celtech.roboxbase.MaterialType TPU -> TPU
    celtech.roboxbase.MaterialType PCP -> PCP
    java.lang.String friendlyName -> friendlyName
    double density -> density
    celtech.roboxbase.MaterialType[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.MaterialType[] values() -> values
    7:7:celtech.roboxbase.MaterialType valueOf(java.lang.String) -> valueOf
    50:53:void <init>(java.lang.String,int,java.lang.String,java.lang.Double) -> <init>
    61:61:java.lang.String getFriendlyName() -> getFriendlyName
    66:66:double getDensity() -> getDensity
    76:76:java.lang.String toString() -> toString
    7:41:void <clinit>() -> <clinit>
celtech.roboxbase.PrinterColourMap -> celtech.roboxbase.b:
    celtech.roboxbase.PrinterColourMap instance -> a
    java.util.HashMap colourMap -> b
    java.util.ArrayList printerColours -> c
    java.util.ArrayList displayColours -> d
    26:49:void <init>() -> <init>
    57:62:celtech.roboxbase.PrinterColourMap getInstance() -> a
    72:72:javafx.scene.paint.Color printerToDisplayColour(javafx.scene.paint.Color) -> a
    82:92:javafx.scene.paint.Color displayToPrinterColour(javafx.scene.paint.Color) -> b
    97:97:java.util.ArrayList getPrinterColours() -> b
    102:102:java.util.ArrayList getDisplayColours() -> c
    20:23:void <clinit>() -> <clinit>
celtech.roboxbase.SystemErrorHandlerOptions -> celtech.roboxbase.SystemErrorHandlerOptions:
    celtech.roboxbase.SystemErrorHandlerOptions ABORT -> ABORT
    celtech.roboxbase.SystemErrorHandlerOptions CLEAR_CONTINUE -> CLEAR_CONTINUE
    celtech.roboxbase.SystemErrorHandlerOptions RETRY -> RETRY
    celtech.roboxbase.SystemErrorHandlerOptions OK -> OK
    celtech.roboxbase.SystemErrorHandlerOptions OK_ABORT -> OK_ABORT
    celtech.roboxbase.SystemErrorHandlerOptions OK_CONTINUE -> OK_CONTINUE
    celtech.roboxbase.SystemErrorHandlerOptions[] $VALUES -> $VALUES
    10:10:celtech.roboxbase.SystemErrorHandlerOptions[] values() -> values
    10:10:celtech.roboxbase.SystemErrorHandlerOptions valueOf(java.lang.String) -> valueOf
    10:10:void <init>(java.lang.String,int) -> <init>
    17:17:java.lang.String getErrorTitleKey() -> getErrorTitleKey
    22:22:java.lang.String getErrorMessageKey() -> getErrorMessageKey
    10:13:void <clinit>() -> <clinit>
celtech.roboxbase.appManager.ConsoleSystemNotificationManager -> celtech.roboxbase.appManager.a:
    libertysystems.stenographer.Stenographer steno -> a
    18:21:void <init>() -> <init>
    26:27:void showInformationNotification(java.lang.String,java.lang.String) -> c
    32:33:void showWarningNotification(java.lang.String,java.lang.String) -> b
    38:39:void showErrorNotification(java.lang.String,java.lang.String) -> a
    44:45:boolean askUserToUpdateFirmware() -> k
    51:52:void processErrorPacketFromPrinter(celtech.roboxbase.comms.rx.FirmwareError,celtech.roboxbase.printerControl.model.Printer) -> a
    57:58:void showCalibrationDialogue() -> a
    63:64:void showFirmwareUpgradeStatusNotification(celtech.roboxbase.services.firmware.FirmwareLoadResult) -> a
    69:70:void showGCodePostProcessSuccessfulNotification() -> e
    75:76:void showHeadUpdatedNotification() -> b
    81:82:void showPrintJobCancelledNotification() -> f
    87:88:void showPrintJobFailedNotification() -> g
    93:94:void showPrintTransferInitiatedNotification() -> i
    99:100:void showPrintTransferSuccessfulNotification(java.lang.String) -> a
    105:106:void showPrintTransferFailedNotification(java.lang.String) -> b
    111:112:void removePrintTransferFailedNotification() -> h
    117:118:void showReprintStartedNotification() -> j
    123:124:void showSDCardNotification() -> c
    129:130:void showSliceSuccessfulNotification() -> d
    135:136:void configureFirmwareProgressDialog(celtech.roboxbase.services.firmware.FirmwareLoadService) -> a
    141:142:void showNoSDCardDialog() -> l
    147:148:void showNoPrinterIDDialog(celtech.roboxbase.printerControl.model.Printer) -> a
    153:154:boolean showOpenDoorDialog() -> m
    160:161:boolean showModelTooBigDialog(java.lang.String) -> c
    167:168:boolean showApplicationUpgradeDialog(java.lang.String) -> d
    174:175:celtech.roboxbase.appManager.PurgeResponse showPurgeDialog() -> n
    181:182:celtech.roboxbase.appManager.PurgeResponse showPurgeDialog(boolean) -> a
    188:189:boolean showJobsTransferringShutdownDialog() -> o
    195:196:void showProgramInvalidHeadDialog(celtech.roboxbase.utils.tasks.TaskResponder) -> a
    201:202:void showHeadNotRecognisedDialog(java.lang.String) -> e
    207:208:java.util.Optional showPrinterErrorDialog(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> a
    214:215:void showReelNotRecognisedDialog(java.lang.String) -> f
    220:221:void showReelUpdatedNotification() -> q
    226:227:void askUserToClearBed() -> r
    232:233:boolean confirmAdvancedMode() -> s
    239:240:void showKeepPushingFilamentNotification() -> t
    246:246:void hideKeepPushingFilamentNotification() -> u
    251:252:void showEjectFailedDialog(celtech.roboxbase.printerControl.model.Printer,int) -> a
    257:258:void showFilamentMotionCheckBanner() -> x
    263:264:void hideFilamentMotionCheckBanner() -> y
    269:270:void showFilamentStuckMessage() -> v
    275:276:void showLoadFilamentNowMessage() -> w
    281:282:boolean showModelIsInvalidDialog(java.util.Set) -> a
    288:289:void clearAllDialogsOnDisconnect() -> z
    293:294:void outputNotification(java.lang.String) -> g
    298:299:void outputNotification(java.lang.String,java.lang.String) -> d
    304:305:void hideProgramInvalidHeadDialog() -> p
    310:311:void showDismissableNotification(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> a
celtech.roboxbase.appManager.NotificationType -> celtech.roboxbase.appManager.NotificationType:
    celtech.roboxbase.appManager.NotificationType NOTE -> NOTE
    celtech.roboxbase.appManager.NotificationType WARNING -> WARNING
    celtech.roboxbase.appManager.NotificationType CAUTION -> CAUTION
    int value -> value
    celtech.roboxbase.appManager.NotificationType[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.appManager.NotificationType[] values() -> values
    7:7:celtech.roboxbase.appManager.NotificationType valueOf(java.lang.String) -> valueOf
    17:19:void <init>(java.lang.String,int,int) -> <init>
    23:23:int getValue() -> getValue
    7:12:void <clinit>() -> <clinit>
celtech.roboxbase.appManager.PurgeResponse -> celtech.roboxbase.appManager.PurgeResponse:
    celtech.roboxbase.appManager.PurgeResponse PRINT_WITHOUT_PURGE -> PRINT_WITHOUT_PURGE
    celtech.roboxbase.appManager.PurgeResponse PRINT_WITH_PURGE -> PRINT_WITH_PURGE
    celtech.roboxbase.appManager.PurgeResponse DONT_PRINT -> DONT_PRINT
    celtech.roboxbase.appManager.PurgeResponse NOT_NECESSARY -> NOT_NECESSARY
    celtech.roboxbase.appManager.PurgeResponse[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.appManager.PurgeResponse[] values() -> values
    7:7:celtech.roboxbase.appManager.PurgeResponse valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.roboxbase.appManager.SystemNotificationManager -> celtech.roboxbase.appManager.SystemNotificationManager:
    void showInformationNotification(java.lang.String,java.lang.String) -> c
    void showWarningNotification(java.lang.String,java.lang.String) -> b
    void showErrorNotification(java.lang.String,java.lang.String) -> a
    void showDismissableNotification(java.lang.String,java.lang.String,celtech.roboxbase.appManager.NotificationType) -> a
    boolean askUserToUpdateFirmware() -> k
    void processErrorPacketFromPrinter(celtech.roboxbase.comms.rx.FirmwareError,celtech.roboxbase.printerControl.model.Printer) -> a
    void showCalibrationDialogue() -> a
    void showFirmwareUpgradeStatusNotification(celtech.roboxbase.services.firmware.FirmwareLoadResult) -> a
    void showGCodePostProcessSuccessfulNotification() -> e
    void showHeadUpdatedNotification() -> b
    void showPrintJobCancelledNotification() -> f
    void showPrintJobFailedNotification() -> g
    void showPrintTransferInitiatedNotification() -> i
    void showPrintTransferSuccessfulNotification(java.lang.String) -> a
    void showPrintTransferFailedNotification(java.lang.String) -> b
    void removePrintTransferFailedNotification() -> h
    void showReprintStartedNotification() -> j
    void showSDCardNotification() -> c
    void showSliceSuccessfulNotification() -> d
    void configureFirmwareProgressDialog(celtech.roboxbase.services.firmware.FirmwareLoadService) -> a
    void showNoSDCardDialog() -> l
    void showNoPrinterIDDialog(celtech.roboxbase.printerControl.model.Printer) -> a
    boolean showOpenDoorDialog() -> m
    boolean showModelTooBigDialog(java.lang.String) -> c
    boolean showApplicationUpgradeDialog(java.lang.String) -> d
    celtech.roboxbase.appManager.PurgeResponse showPurgeDialog() -> n
    celtech.roboxbase.appManager.PurgeResponse showPurgeDialog(boolean) -> a
    boolean showJobsTransferringShutdownDialog() -> o
    void showProgramInvalidHeadDialog(celtech.roboxbase.utils.tasks.TaskResponder) -> a
    void hideProgramInvalidHeadDialog() -> p
    void showHeadNotRecognisedDialog(java.lang.String) -> e
    java.util.Optional showPrinterErrorDialog(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> a
    void showReelNotRecognisedDialog(java.lang.String) -> f
    void showReelUpdatedNotification() -> q
    void askUserToClearBed() -> r
    boolean confirmAdvancedMode() -> s
    void showKeepPushingFilamentNotification() -> t
    void hideKeepPushingFilamentNotification() -> u
    void showEjectFailedDialog(celtech.roboxbase.printerControl.model.Printer,int) -> a
    void showFilamentMotionCheckBanner() -> x
    void hideFilamentMotionCheckBanner() -> y
    void showFilamentStuckMessage() -> v
    void showLoadFilamentNowMessage() -> w
    boolean showModelIsInvalidDialog(java.util.Set) -> a
    void clearAllDialogsOnDisconnect() -> z
celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice -> celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice:
    celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice CONTINUE -> CONTINUE
    celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice ABORT -> ABORT
    celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice RETRY -> RETRY
    celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice OK -> OK
    celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice[] $VALUES -> $VALUES
    19:19:celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice[] values() -> values
    19:19:celtech.roboxbase.appManager.SystemNotificationManager$PrinterErrorChoice valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:22:void <clinit>() -> <clinit>
celtech.roboxbase.comms.CRC16 -> celtech.roboxbase.comms.a:
    int[] table -> a
    24:24:void <init>() -> <init>
    70:76:java.lang.String calculateCRC16(byte[]) -> a
    27:27:void <clinit>() -> <clinit>
celtech.roboxbase.comms.CommandInterface -> celtech.roboxbase.comms.b:
    boolean keepRunning -> keepRunning
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.comms.PrinterStatusConsumer controlInterface -> controlInterface
    celtech.roboxbase.comms.DetectedDevice printerHandle -> printerHandle
    celtech.roboxbase.printerControl.model.Printer printerToUse -> printerToUse
    java.lang.String printerFriendlyName -> printerFriendlyName
    celtech.roboxbase.comms.RoboxCommsState commsState -> commsState
    celtech.roboxbase.comms.PrinterID printerID -> printerID
    celtech.roboxbase.services.firmware.FirmwareLoadService firmwareLoadService -> firmwareLoadService
    java.lang.String requiredFirmwareVersionString -> requiredFirmwareVersionString
    float requiredFirmwareVersion -> requiredFirmwareVersion
    float firmwareVersionInUse -> firmwareVersionInUse
    boolean suppressPrinterIDChecks -> suppressPrinterIDChecks
    int sleepBetweenStatusChecks -> sleepBetweenStatusChecks
    boolean loadingFirmware -> loadingFirmware
    boolean suppressComms -> suppressComms
    java.lang.String printerName -> printerName
    celtech.roboxbase.comms.rx.StatusResponse latestStatusResponse -> latestStatusResponse
    celtech.roboxbase.comms.rx.AckResponse latestErrorResponse -> latestErrorResponse
    celtech.roboxbase.comms.rx.PrinterIDResponse lastPrinterIDResponse -> lastPrinterIDResponse
    boolean isConnected -> isConnected
    celtech.roboxbase.comms.async.AsyncWriteThread asyncWriteThread -> asyncWriteThread
    43:130:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.DetectedDevice,boolean,int) -> <init>
    136:371:void run() -> run
    375:383:void moveOnFromFirmwareCheck(celtech.roboxbase.comms.rx.FirmwareResponse) -> moveOnFromFirmwareCheck
    387:393:void loadFirmware(java.lang.String) -> loadFirmware
    397:399:void shutdown() -> shutdown
    403:418:void finalShutdown() -> finalShutdown
    void setSleepBetweenStatusChecks(int) -> setSleepBetweenStatusChecks
    434:439:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinter(celtech.roboxbase.comms.tx.RoboxTxPacket) -> writeToPrinter
    452:457:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinter(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> writeToPrinter
    celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinterImpl(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> writeToPrinterImpl
    470:471:void setPrinter(celtech.roboxbase.printerControl.model.Printer) -> setPrinter
    479:480:boolean connectToPrinter() -> connectToPrinter
    boolean connectToPrinterImpl() -> connectToPrinterImpl
    void disconnectPrinterImpl() -> disconnectPrinterImpl
    496:510:void determinePrinterStatus(celtech.roboxbase.comms.rx.StatusResponse) -> determinePrinterStatus
    514:515:void operateRemotely(boolean) -> operateRemotely
    519:519:celtech.roboxbase.comms.rx.AckResponse getLastErrorResponse() -> getLastErrorResponse
    524:524:celtech.roboxbase.comms.rx.StatusResponse getLastStatusResponse() -> getLastStatusResponse
    529:529:celtech.roboxbase.comms.DetectedDevice getPrinterHandle() -> getPrinterHandle
    124:127:void lambda$new$1(javafx.concurrent.WorkerStateEvent) -> lambda$new$1
    117:120:void lambda$new$0(javafx.concurrent.WorkerStateEvent) -> lambda$new$0
celtech.roboxbase.comms.CommandInterface$1 -> celtech.roboxbase.comms.b$1:
    int[] $SwitchMap$celtech$roboxbase$comms$RoboxCommsState -> a
    138:138:void <clinit>() -> <clinit>
celtech.roboxbase.comms.DetectedDevice -> celtech.roboxbase.comms.c:
    celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType connectionType -> a
    java.lang.String connectionHandle -> b
    16:19:void <init>(celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType,java.lang.String) -> <init>
    23:23:celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType getConnectionType() -> a
    28:28:java.lang.String getConnectionHandle() -> b
    34:34:java.lang.String toString() -> toString
    40:49:boolean equals(java.lang.Object) -> equals
    55:58:int hashCode() -> hashCode
celtech.roboxbase.comms.DetectedServer -> celtech.roboxbase.comms.DetectedServer:
    libertysystems.stenographer.Stenographer steno -> b
    java.net.InetAddress address -> c
    javafx.beans.property.StringProperty name -> d
    javafx.beans.property.StringProperty serverIP -> e
    javafx.beans.property.StringProperty version -> f
    javafx.beans.property.StringProperty pin -> g
    javafx.beans.property.BooleanProperty dataChanged -> h
    com.fasterxml.jackson.databind.ObjectMapper mapper -> i
    javafx.beans.property.ObjectProperty serverStatus -> j
    java.lang.String defaultUser -> a
    java.lang.String contentPage -> k
    java.lang.String listPrintersCommand -> l
    37:78:void <init>() -> <init>
    37:83:void <init>(java.net.InetAddress) -> <init>
    87:87:java.net.InetAddress getAddress() -> a
    92:92:java.lang.String getName() -> b
    97:102:void setName(java.lang.String) -> a
    106:106:javafx.beans.property.StringProperty nameProperty() -> c
    111:111:java.lang.String getServerIP() -> d
    116:121:void setServerIP(java.lang.String) -> b
    125:125:javafx.beans.property.StringProperty serverIPProperty() -> e
    130:130:java.lang.String getVersion() -> f
    135:140:void setVersion(java.lang.String) -> c
    144:144:javafx.beans.property.StringProperty versionProperty() -> g
    149:149:celtech.roboxbase.comms.DetectedServer$ServerStatus getServerStatus() -> h
    155:169:void setServerStatus(celtech.roboxbase.comms.DetectedServer$ServerStatus) -> a
    173:173:javafx.beans.property.ObjectProperty serverStatusProperty() -> i
    178:178:java.lang.String getPin() -> j
    183:188:void setPin(java.lang.String) -> d
    192:192:javafx.beans.property.StringProperty pinProperty() -> k
    197:197:javafx.beans.property.ReadOnlyBooleanProperty dataChangedProperty() -> l
    202:223:void connect() -> m
    227:228:void disconnect() -> n
    232:280:boolean whoAreYou() -> o
    285:327:java.util.List listAttachedPrinters() -> p
    332:333:void postRoboxPacket(java.lang.String) -> e
    337:371:celtech.roboxbase.comms.rx.RoboxRxPacket postRoboxPacket(java.lang.String,java.lang.String,java.lang.Class) -> a
    376:397:int postData(java.lang.String,java.lang.String) -> a
    402:415:int getData(java.lang.String) -> f
    421:425:int hashCode() -> hashCode
    431:445:boolean equals(java.lang.Object) -> equals
    451:451:java.lang.String toString() -> toString
    314:316:void lambda$listAttachedPrinters$0(java.util.List,java.lang.String) -> a
    50:50:void <clinit>() -> <clinit>
celtech.roboxbase.comms.DetectedServer$1 -> celtech.roboxbase.comms.DetectedServer$1:
    int[] $SwitchMap$celtech$roboxbase$comms$DetectedServer$ServerStatus -> a
    157:157:void <clinit>() -> <clinit>
celtech.roboxbase.comms.DetectedServer$ServerStatus -> celtech.roboxbase.comms.DetectedServer$ServerStatus:
    celtech.roboxbase.comms.DetectedServer$ServerStatus NOT_CONNECTED -> NOT_CONNECTED
    celtech.roboxbase.comms.DetectedServer$ServerStatus CONNECTED -> CONNECTED
    celtech.roboxbase.comms.DetectedServer$ServerStatus WRONG_VERSION -> WRONG_VERSION
    celtech.roboxbase.comms.DetectedServer$ServerStatus WRONG_PIN -> WRONG_PIN
    celtech.roboxbase.comms.DetectedServer$ServerStatus[] $VALUES -> $VALUES
    62:62:celtech.roboxbase.comms.DetectedServer$ServerStatus[] values() -> values
    62:62:celtech.roboxbase.comms.DetectedServer$ServerStatus valueOf(java.lang.String) -> valueOf
    62:62:void <init>(java.lang.String,int) -> <init>
    72:72:java.lang.String getI18NString() -> getI18NString
    62:68:void <clinit>() -> <clinit>
celtech.roboxbase.comms.DeviceDetectionListener -> celtech.roboxbase.comms.d:
    void deviceDetected(celtech.roboxbase.comms.DetectedDevice) -> deviceDetected
    void deviceNoLongerPresent(celtech.roboxbase.comms.DetectedDevice) -> deviceNoLongerPresent
celtech.roboxbase.comms.DeviceDetector -> celtech.roboxbase.comms.DeviceDetector:
    celtech.roboxbase.comms.DeviceDetectionListener deviceDetectionListener -> a
    boolean keepRunning -> b
    11:18:void <init>(celtech.roboxbase.comms.DeviceDetectionListener) -> <init>
    22:23:void shutdownDetector() -> a
    void notifyOfFailedCommsForPrinter(celtech.roboxbase.comms.DetectedDevice) -> a
celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType -> celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType:
    celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType SERIAL -> SERIAL
    celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType ROBOX_REMOTE -> ROBOX_REMOTE
    celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType[] $VALUES -> $VALUES
    25:25:celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType[] values() -> values
    25:25:celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:28:void <clinit>() -> <clinit>
celtech.roboxbase.comms.DiscoveryAgentRemoteEnd -> celtech.roboxbase.comms.e:
    boolean keepRunning -> a
    java.lang.String applicationVersion -> b
    16:22:void <init>(java.lang.String) -> <init>
    29:53:void run() -> run
    57:58:void shutdown() -> a
celtech.roboxbase.comms.DummyPrinterCommandInterface -> celtech.roboxbase.comms.f:
    libertysystems.stenographer.Stenographer steno -> n
    java.lang.String defaultRoboxAttachCommand -> a
    java.lang.String defaultRoboxAttachCommand2 -> b
    java.lang.String defaultRoboxAttachCommand3 -> c
    java.lang.String attachHeadCommand -> o
    java.lang.String detachHeadCommand -> p
    java.lang.String attachReelCommand -> q
    java.lang.String detachReelCommand -> r
    java.lang.String detachPrinterCommand -> s
    java.lang.String goToPrintLineCommand -> t
    java.lang.String finishPrintCommand -> u
    java.lang.String attachExtruderCommand -> v
    java.lang.String detachExtruderCommand -> w
    java.lang.String loadFilamentCommand -> x
    java.lang.String unloadFilamentCommand -> y
    java.lang.String insertSDCardCommand -> z
    java.lang.String removeSDCardCommand -> A
    java.lang.String errorCommand -> B
    celtech.roboxbase.comms.rx.StatusResponse currentStatus -> C
    celtech.roboxbase.comms.rx.AckResponse errorStatus -> D
    celtech.roboxbase.printerControl.model.Head attachedHead -> E
    celtech.roboxbase.printerControl.model.Reel[] attachedReels -> F
    java.lang.String printerName -> G
    java.lang.String NOTHING_PRINTING_JOB_ID -> H
    java.lang.String printJobID -> I
    int printJobLineNo -> d
    int linesInCurrentPrintJob -> J
    int ROOM_TEMPERATURE -> K
    celtech.roboxbase.printerControl.model.HeaterMode nozzleHeaterModeS -> e
    celtech.roboxbase.printerControl.model.HeaterMode nozzleHeaterModeT -> f
    int currentNozzleTemperatureS -> g
    int currentNozzleTemperatureT -> h
    int nozzleTargetTemperatureS -> i
    int nozzleTargetTemperatureT -> j
    celtech.roboxbase.printerControl.model.HeaterMode bedHeaterMode -> k
    int currentBedTemperature -> l
    int bedTargetTemperature -> m
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> L
    55:112:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.DetectedDevice,boolean,int,java.lang.String) -> <init>
    118:121:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.DetectedDevice,boolean,int) -> <init>
    126:126:void setSleepBetweenStatusChecks(int) -> setSleepBetweenStatusChecks
    130:170:void handleNozzleTempChange() -> d
    174:192:void handleBedTempChange() -> e
    196:206:void detachReel(int) -> a
    210:230:boolean attachReel(celtech.roboxbase.configuration.Filament,int) -> a
    236:237:boolean connectToPrinterImpl() -> connectToPrinterImpl
    243:244:void disconnectPrinterImpl() -> disconnectPrinterImpl
    248:282:boolean attachHead(java.lang.String) -> a
    287:302:boolean attachExtruder(int) -> b
    307:322:boolean detachExtruder(int) -> c
    327:328:void setPrintLine(int) -> d
    332:334:void finishPrintJob() -> a
    338:339:void raiseError(celtech.roboxbase.comms.rx.FirmwareError) -> a
    343:344:void clearError(celtech.roboxbase.comms.rx.FirmwareError) -> b
    348:349:void clearAllErrors() -> b
    353:375:void doStatusRequest() -> c
    380:822:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinterImpl(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> writeToPrinterImpl
    84:89:void <clinit>() -> <clinit>
celtech.roboxbase.comms.HardwareCommandInterface -> celtech.roboxbase.comms.g:
    boolean stillWaitingForStatus -> a
    celtech.roboxbase.comms.SerialPortManager serialPortManager -> b
    24:34:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.DetectedDevice,boolean,int) -> <init>
    39:39:boolean connectToPrinterImpl() -> connectToPrinterImpl
    45:59:void disconnectPrinterImpl() -> disconnectPrinterImpl
    65:182:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinterImpl(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> writeToPrinterImpl
    188:190:void actionOnCommsFailure() -> a
    195:196:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
    205:206:void setSleepBetweenStatusChecks(int) -> setSleepBetweenStatusChecks
celtech.roboxbase.comms.PrinterID -> celtech.roboxbase.comms.h:
    java.lang.String printerID -> a
    15:22:void <init>() -> <init>
    30:30:java.lang.String getPrinterID() -> a
    39:40:void setPrinterID(java.lang.String) -> a
    48:48:java.lang.String toString() -> toString
celtech.roboxbase.comms.PrinterStatusConsumer -> celtech.roboxbase.comms.i:
    void printerConnected(celtech.roboxbase.comms.DetectedDevice) -> a
    void disconnected(celtech.roboxbase.comms.DetectedDevice) -> b
celtech.roboxbase.comms.RemoteDetectedPrinter -> celtech.roboxbase.comms.j:
    celtech.roboxbase.comms.DetectedServer serverPrinterIsAttachedTo -> a
    15:17:void <init>(celtech.roboxbase.comms.DetectedServer,celtech.roboxbase.comms.DeviceDetector$PrinterConnectionType,java.lang.String) -> <init>
    21:21:celtech.roboxbase.comms.DetectedServer getServerPrinterIsAttachedTo() -> c
    27:37:boolean equals(java.lang.Object) -> equals
    43:47:int hashCode() -> hashCode
    53:53:java.lang.String toString() -> toString
celtech.roboxbase.comms.RemoteDiscovery -> celtech.roboxbase.comms.k:
    java.lang.String multicastAddress -> a
    int remoteSocket -> b
    int clientSocket -> c
    java.lang.String discoverHostsMessage -> d
    java.lang.String iAmHereMessage -> e
    7:7:void <init>() -> <init>
celtech.roboxbase.comms.RemotePrinterDetector -> celtech.roboxbase.comms.l:
    libertysystems.stenographer.Stenographer steno -> c
    java.util.List currentServers -> d
    java.util.List currentPrinters -> e
    16:24:void <init>(celtech.roboxbase.comms.DeviceDetectionListener) -> <init>
    29:85:void run() -> run
    90:91:void notifyOfFailedCommsForPrinter(celtech.roboxbase.comms.DetectedDevice) -> a
    64:68:void lambda$run$1(java.util.List,celtech.roboxbase.comms.DetectedDevice) -> a
    47:51:void lambda$run$0(java.util.List,java.util.List,celtech.roboxbase.comms.DetectedDevice) -> a
celtech.roboxbase.comms.RemotePrinterHost -> celtech.roboxbase.comms.m:
    java.net.InetAddress hostAddress -> a
    15:17:void <init>(java.net.InetAddress) -> <init>
    21:21:java.net.InetAddress getHostAddress() -> a
celtech.roboxbase.comms.RemoteServerDetector -> celtech.roboxbase.comms.n:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.comms.RemoteServerDetector instance -> b
    java.net.InetAddress group -> c
    java.net.DatagramSocket s -> d
    com.fasterxml.jackson.databind.ObjectMapper mapper -> e
    22:40:void <init>() -> <init>
    44:49:celtech.roboxbase.comms.RemoteServerDetector getInstance() -> a
    54:86:java.util.List searchForServers() -> b
    24:27:void <clinit>() -> <clinit>
celtech.roboxbase.comms.RemoteServerResponse -> celtech.roboxbase.comms.o:
    7:7:void <init>() -> <init>
celtech.roboxbase.comms.RoboxCommsManager -> celtech.roboxbase.comms.p:
    celtech.roboxbase.comms.RoboxCommsManager instance -> a
    java.lang.String printerToSearchFor -> b
    java.lang.String roboxVendorID -> c
    java.lang.String roboxProductID -> d
    libertysystems.stenographer.Stenographer steno -> e
    java.util.List dummyPrinters -> f
    java.util.HashMap pendingPrinters -> g
    java.util.HashMap activePrinters -> h
    boolean suppressPrinterIDChecks -> i
    int sleepBetweenStatusChecksMS -> j
    java.lang.String dummyPrinterPort -> k
    int dummyPrinterCounter -> l
    celtech.roboxbase.comms.SerialDeviceDetector usbSerialDeviceDetector -> m
    celtech.roboxbase.comms.RemotePrinterDetector remotePrinterDetector -> n
    boolean doNotCheckForPresenceOfHead -> o
    boolean detectLoadedFilament -> p
    boolean searchForRemotePrinters -> q
    23:60:void <init>(java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    68:68:celtech.roboxbase.comms.RoboxCommsManager getInstance() -> a
    78:83:celtech.roboxbase.comms.RoboxCommsManager getInstance(java.lang.String) -> a
    99:108:celtech.roboxbase.comms.RoboxCommsManager getInstance(java.lang.String,boolean,boolean,boolean) -> a
    113:148:void assessCandidatePrinter(celtech.roboxbase.comms.DetectedDevice) -> d
    152:193:celtech.roboxbase.printerControl.model.Printer makePrinter(celtech.roboxbase.comms.DetectedDevice) -> e
    198:210:void start() -> b
    217:238:void shutdown() -> c
    247:252:void printerConnected(celtech.roboxbase.comms.DetectedDevice) -> a
    260:276:void disconnected(celtech.roboxbase.comms.DetectedDevice) -> b
    280:293:void addDummyPrinter() -> d
    297:298:void removeDummyPrinter(celtech.roboxbase.comms.DetectedDevice) -> c
    302:302:java.util.List getDummyPrinters() -> e
    311:312:void setSleepBetweenStatusChecks(int) -> a
    317:318:void deviceDetected(celtech.roboxbase.comms.DetectedDevice) -> deviceDetected
    323:339:void deviceNoLongerPresent(celtech.roboxbase.comms.DetectedDevice) -> deviceNoLongerPresent
    223:224:void lambda$shutdown$2(java.util.List,celtech.roboxbase.printerControl.model.Printer) -> a
    200:204:void lambda$start$1() -> f
    155:167:boolean lambda$makePrinter$0(celtech.roboxbase.comms.rx.StatusResponse,int) -> a
    21:21:void <clinit>() -> <clinit>
celtech.roboxbase.comms.RoboxCommsManager$1 -> celtech.roboxbase.comms.p$1:
    int[] $SwitchMap$celtech$roboxbase$comms$DeviceDetector$PrinterConnectionType -> a
    173:173:void <clinit>() -> <clinit>
celtech.roboxbase.comms.RoboxCommsState -> celtech.roboxbase.comms.RoboxCommsState:
    celtech.roboxbase.comms.RoboxCommsState FOUND -> FOUND
    celtech.roboxbase.comms.RoboxCommsState CHECKING_FIRMWARE -> CHECKING_FIRMWARE
    celtech.roboxbase.comms.RoboxCommsState CHECKING_ID -> CHECKING_ID
    celtech.roboxbase.comms.RoboxCommsState DETERMINING_PRINTER_STATUS -> DETERMINING_PRINTER_STATUS
    celtech.roboxbase.comms.RoboxCommsState CONNECTED -> CONNECTED
    celtech.roboxbase.comms.RoboxCommsState DISCONNECTED -> DISCONNECTED
    celtech.roboxbase.comms.RoboxCommsState SHUTTING_DOWN -> SHUTTING_DOWN
    celtech.roboxbase.comms.RoboxCommsState[] $VALUES -> $VALUES
    11:11:celtech.roboxbase.comms.RoboxCommsState[] values() -> values
    11:11:celtech.roboxbase.comms.RoboxCommsState valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:37:void <clinit>() -> <clinit>
celtech.roboxbase.comms.RootWebAuthenticator -> celtech.roboxbase.comms.q:
    11:11:void <init>() -> <init>
    17:18:java.net.URL getRequestingURL() -> getRequestingURL
    24:25:java.net.Authenticator$RequestorType getRequestorType() -> getRequestorType
    31:32:java.net.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
celtech.roboxbase.comms.SerialDeviceDetector -> celtech.roboxbase.comms.r:
    libertysystems.stenographer.Stenographer steno -> c
    java.util.List currentPrinters -> d
    java.lang.String deviceDetectorStringMac -> e
    java.lang.String deviceDetectorStringWindows -> f
    java.lang.String deviceDetectorStringLinux -> g
    java.lang.String notConnectedString -> h
    java.util.List command -> i
    24:76:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,celtech.roboxbase.comms.DeviceDetectionListener) -> <init>
    80:116:java.util.List searchForDevices() -> b
    122:168:void run() -> run
    173:174:void notifyOfFailedCommsForPrinter(celtech.roboxbase.comms.DetectedDevice) -> a
    147:151:void lambda$run$2(java.util.List,celtech.roboxbase.comms.DetectedDevice) -> a
    130:134:void lambda$run$1(java.util.List,java.util.List,celtech.roboxbase.comms.DetectedDevice) -> a
    72:74:void lambda$new$0(java.lang.StringBuilder,java.lang.String) -> a
    23:23:void <clinit>() -> <clinit>
celtech.roboxbase.comms.SerialDeviceDetector$1 -> celtech.roboxbase.comms.r$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$MachineType -> a
    47:47:void <clinit>() -> <clinit>
celtech.roboxbase.comms.SerialPortManager -> celtech.roboxbase.comms.s:
    java.lang.String serialPortToConnectTo -> b
    jssc.SerialPort serialPort -> a
    libertysystems.stenographer.Stenographer steno -> c
    int READ_TIMEOUT -> d
    21:32:void <init>(java.lang.String) -> <init>
    36:60:boolean connect(int) -> a
    65:81:void disconnect() -> a
    85:96:boolean writeBytes(byte[]) -> a
    101:107:int getInputBufferBytesCount() -> b
    113:144:void writeAndWaitForData(byte[]) -> b
    148:159:byte[] readSerialPort(int) -> b
    164:170:byte[] readAllDataOnBuffer() -> c
    176:189:boolean writeASCIIString(java.lang.String) -> a
    195:202:java.lang.String readString() -> d
    208:213:void checkSerialPortOK() -> f
    217:218:void callback() -> e
    223:239:void serialEvent(jssc.SerialPortEvent) -> serialEvent
celtech.roboxbase.comms.async.AsyncWriteThread -> f.a:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.concurrent.BlockingQueue inboundQueue -> b
    java.util.concurrent.BlockingQueue outboundQueue -> c
    celtech.roboxbase.comms.CommandInterface commandInterface -> d
    boolean keepRunning -> e
    21:32:void <init>(celtech.roboxbase.comms.CommandInterface,java.lang.String) -> <init>
    36:52:celtech.roboxbase.comms.rx.RoboxRxPacket sendCommand(celtech.roboxbase.comms.async.CommandPacket) -> a
    58:79:void run() -> run
    83:84:celtech.roboxbase.comms.rx.RoboxRxPacket processCommand(celtech.roboxbase.comms.async.CommandPacket) -> b
    89:90:void shutdown() -> a
celtech.roboxbase.comms.async.CommandPacket -> f.b:
    celtech.roboxbase.comms.tx.RoboxTxPacket command -> a
    boolean dontPublish -> b
    16:19:void <init>(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> <init>
    23:23:celtech.roboxbase.comms.tx.RoboxTxPacket getCommand() -> a
    28:28:boolean getDontPublish() -> b
    34:34:java.lang.String toString() -> toString
celtech.roboxbase.comms.events.ErrorConsumer -> g.a:
    void consumeError(celtech.roboxbase.comms.rx.FirmwareError) -> consumeError
celtech.roboxbase.comms.events.RoboxResponseConsumer -> g.b:
    void processRoboxResponse(celtech.roboxbase.comms.rx.RoboxRxPacket) -> a
celtech.roboxbase.comms.exceptions.BadCommandException -> celtech.roboxbase.comms.exceptions.BadCommandException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.ConnectionLostException -> celtech.roboxbase.comms.exceptions.ConnectionLostException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.GCodeLineTooLongException -> celtech.roboxbase.comms.exceptions.GCodeLineTooLongException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.InvalidCommandByteException -> celtech.roboxbase.comms.exceptions.InvalidCommandByteException:
    20:21:void <init>() -> <init>
    32:33:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.InvalidResponseFromPrinterException -> celtech.roboxbase.comms.exceptions.InvalidResponseFromPrinterException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.PortNotFoundException -> celtech.roboxbase.comms.exceptions.PortNotFoundException:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.RoboxCommsException -> celtech.roboxbase.comms.exceptions.RoboxCommsException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.SDCardErrorException -> celtech.roboxbase.comms.exceptions.SDCardErrorException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.SequenceNumberErrorException -> celtech.roboxbase.comms.exceptions.SequenceNumberErrorException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.UnableToGenerateRoboxPacketException -> celtech.roboxbase.comms.exceptions.UnableToGenerateRoboxPacketException:
    19:20:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.exceptions.UnknownPacketTypeException -> celtech.roboxbase.comms.exceptions.UnknownPacketTypeException:
    19:20:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.interapp.InterAppCommsConsumer -> celtech.roboxbase.comms.interapp.a:
    void incomingComms(celtech.roboxbase.comms.interapp.InterAppRequest) -> a
celtech.roboxbase.comms.interapp.InterAppCommsThread -> celtech.roboxbase.comms.interapp.b:
    libertysystems.stenographer.Stenographer steno -> a
    boolean keepRunning -> b
    java.net.ServerSocket initialServerSocket -> c
    java.net.Socket serverSocket -> d
    com.fasterxml.jackson.databind.ObjectMapper mapper -> e
    celtech.roboxbase.comms.interapp.InterAppCommsConsumer commsConsumer -> f
    21:31:void <init>() -> <init>
    36:58:void run() -> run
    62:107:celtech.roboxbase.comms.interapp.InterAppStartupStatus letUsBegin(celtech.roboxbase.comms.interapp.InterAppRequest,celtech.roboxbase.comms.interapp.InterAppCommsConsumer) -> a
    112:120:void shutdown() -> a
celtech.roboxbase.comms.interapp.InterAppConfiguration -> celtech.roboxbase.comms.interapp.c:
    java.nio.charset.Charset charSetToUse -> a
    int PORT -> b
    10:10:void <init>() -> <init>
    13:13:void <clinit>() -> <clinit>
celtech.roboxbase.comms.interapp.InterAppRequest -> celtech.roboxbase.comms.interapp.d:
    10:10:void <init>() -> <init>
celtech.roboxbase.comms.interapp.InterAppResponse -> celtech.roboxbase.comms.interapp.e:
    celtech.roboxbase.comms.interapp.InterAppResponseStatus responseStatus -> a
    17:18:void <init>() -> <init>
    22:22:celtech.roboxbase.comms.interapp.InterAppResponseStatus getResponseStatus() -> a
    27:28:void setResponseStatus(celtech.roboxbase.comms.interapp.InterAppResponseStatus) -> a
    33:35:int hashCode() -> hashCode
    41:54:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.interapp.InterAppResponseStatus -> celtech.roboxbase.comms.interapp.InterAppResponseStatus:
    celtech.roboxbase.comms.interapp.InterAppResponseStatus ACCEPTED -> ACCEPTED
    celtech.roboxbase.comms.interapp.InterAppResponseStatus REJECTED_PRINTER_NOT_READY -> REJECTED_PRINTER_NOT_READY
    celtech.roboxbase.comms.interapp.InterAppResponseStatus[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.comms.interapp.InterAppResponseStatus[] values() -> values
    7:7:celtech.roboxbase.comms.interapp.InterAppResponseStatus valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:10:void <clinit>() -> <clinit>
celtech.roboxbase.comms.interapp.InterAppStartupStatus -> celtech.roboxbase.comms.interapp.InterAppStartupStatus:
    celtech.roboxbase.comms.interapp.InterAppStartupStatus STARTED_OK -> STARTED_OK
    celtech.roboxbase.comms.interapp.InterAppStartupStatus ALREADY_RUNNING_COULDNT_CONTACT -> ALREADY_RUNNING_COULDNT_CONTACT
    celtech.roboxbase.comms.interapp.InterAppStartupStatus ALREADY_RUNNING_CONTACT_MADE -> ALREADY_RUNNING_CONTACT_MADE
    celtech.roboxbase.comms.interapp.InterAppStartupStatus OTHER_ERROR -> OTHER_ERROR
    celtech.roboxbase.comms.interapp.InterAppStartupStatus[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.comms.interapp.InterAppStartupStatus[] values() -> values
    7:7:celtech.roboxbase.comms.interapp.InterAppStartupStatus valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:12:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.BusyStatus -> celtech.roboxbase.comms.remote.BusyStatus:
    celtech.roboxbase.comms.remote.BusyStatus NOT_BUSY -> NOT_BUSY
    celtech.roboxbase.comms.remote.BusyStatus BUSY -> BUSY
    celtech.roboxbase.comms.remote.BusyStatus LOADING_FILAMENT_E -> LOADING_FILAMENT_E
    celtech.roboxbase.comms.remote.BusyStatus UNLOADING_FILAMENT_E -> UNLOADING_FILAMENT_E
    celtech.roboxbase.comms.remote.BusyStatus LOADING_FILAMENT_D -> LOADING_FILAMENT_D
    celtech.roboxbase.comms.remote.BusyStatus UNLOADING_FILAMENT_D -> UNLOADING_FILAMENT_D
    int value -> value
    java.lang.String i18nString -> i18nString
    celtech.roboxbase.comms.remote.BusyStatus[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.comms.remote.BusyStatus[] values() -> values
    7:7:celtech.roboxbase.comms.remote.BusyStatus valueOf(java.lang.String) -> valueOf
    42:53:celtech.roboxbase.comms.remote.BusyStatus modeFromValue(java.lang.Integer) -> modeFromValue
    60:63:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    71:71:int getValue() -> getValue
    80:80:java.lang.String getI18nString() -> getI18nString
    7:33:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.Configuration -> celtech.roboxbase.comms.remote.Configuration:
    int remotePort -> remotePort
    java.lang.String discoveryService -> discoveryService
    java.lang.String adminAPIService -> adminAPIService
    java.lang.String shutdown -> shutdown
    java.lang.String lowLevelAPIService -> lowLevelAPIService
    java.lang.String connectService -> connectService
    java.lang.String disconnectService -> disconnectService
    java.lang.String writeDataService -> writeDataService
    7:7:void <init>() -> <init>
celtech.roboxbase.comms.remote.EEPROMState -> celtech.roboxbase.comms.remote.EEPROMState:
    celtech.roboxbase.comms.remote.EEPROMState NOT_PRESENT -> NOT_PRESENT
    celtech.roboxbase.comms.remote.EEPROMState NOT_PROGRAMMED -> NOT_PROGRAMMED
    celtech.roboxbase.comms.remote.EEPROMState PROGRAMMED -> PROGRAMMED
    int value -> value
    celtech.roboxbase.comms.remote.EEPROMState[] $VALUES -> $VALUES
    13:13:celtech.roboxbase.comms.remote.EEPROMState[] values() -> values
    13:13:celtech.roboxbase.comms.remote.EEPROMState valueOf(java.lang.String) -> valueOf
    38:49:celtech.roboxbase.comms.remote.EEPROMState modeFromValue(java.lang.Integer) -> modeFromValue
    55:57:void <init>(java.lang.String,int,int) -> <init>
    65:65:int getValue() -> getValue
    13:29:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.EnumStringConverter -> celtech.roboxbase.comms.remote.EnumStringConverter:
    int CHAR_A_VAL -> CHAR_A_VAL
    boolean $assertionsDisabled -> $assertionsDisabled
    13:13:void <init>() -> <init>
    23:28:java.lang.String intToString(int) -> intToString
    36:37:int stringToInt(java.lang.String) -> stringToInt
    13:13:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.FixedDecimalFloatFormat -> celtech.roboxbase.comms.remote.FixedDecimalFloatFormat:
    libertysystems.stenographer.Stenographer steno -> steno
    int fieldLength -> fieldLength
    java.lang.String decimalSeparator -> decimalSeparator
    34:42:void <init>() -> <init>
    46:66:java.lang.StringBuffer padResult(java.lang.StringBuffer) -> padResult
    72:74:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    80:82:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    88:95:java.lang.Number parse(java.lang.String) -> parse
    33:33:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.ListPrintersResponse -> celtech.roboxbase.comms.remote.ListPrintersResponse:
    java.util.List printerIDs -> printerIDs
    15:17:void <init>() -> <init>
    20:22:void <init>(java.util.List) -> <init>
    27:27:java.util.List getPrinterIDs() -> getPrinterIDs
    33:34:void setPrinterIDs(java.util.List) -> setPrinterIDs
    39:50:java.lang.String toString() -> toString
    45:47:void lambda$toString$0(java.lang.StringBuilder,java.lang.String) -> lambda$toString$0
celtech.roboxbase.comms.remote.LowLevelInterface -> celtech.roboxbase.comms.remote.LowLevelInterface:
    boolean connect(java.lang.String) -> connect
    void disconnect(java.lang.String) -> disconnect
    celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinter(java.lang.String,celtech.roboxbase.comms.tx.RoboxTxPacket) -> writeToPrinter
celtech.roboxbase.comms.remote.LowLevelInterfaceException -> celtech.roboxbase.comms.remote.LowLevelInterfaceException:
    16:17:void <init>() -> <init>
    27:28:void <init>(java.lang.String) -> <init>
celtech.roboxbase.comms.remote.PauseStatus -> celtech.roboxbase.comms.remote.PauseStatus:
    celtech.roboxbase.comms.remote.PauseStatus NOT_PAUSED -> NOT_PAUSED
    celtech.roboxbase.comms.remote.PauseStatus PAUSE_PENDING -> PAUSE_PENDING
    celtech.roboxbase.comms.remote.PauseStatus PAUSED -> PAUSED
    celtech.roboxbase.comms.remote.PauseStatus RESUME_PENDING -> RESUME_PENDING
    int value -> value
    java.lang.String i18nString -> i18nString
    celtech.roboxbase.comms.remote.PauseStatus[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.comms.remote.PauseStatus[] values() -> values
    7:7:celtech.roboxbase.comms.remote.PauseStatus valueOf(java.lang.String) -> valueOf
    34:45:celtech.roboxbase.comms.remote.PauseStatus modeFromValue(java.lang.Integer) -> modeFromValue
    52:55:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    63:63:int getValue() -> getValue
    72:72:java.lang.String getI18nString() -> getI18nString
    82:82:java.lang.String toString() -> toString
    7:25:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.PrinterIDDataStructure -> celtech.roboxbase.comms.remote.PrinterIDDataStructure:
    int modelBytes -> modelBytes
    int editionBytes -> editionBytes
    int weekOfManufactureBytes -> weekOfManufactureBytes
    int yearOfManufactureBytes -> yearOfManufactureBytes
    int poNumberBytes -> poNumberBytes
    int serialNumberBytes -> serialNumberBytes
    int checkByteBytes -> checkByteBytes
    int printerFriendlyNameBytes -> printerFriendlyNameBytes
    int colourBytes -> colourBytes
    12:12:void <init>() -> <init>
celtech.roboxbase.comms.remote.RemoteClient -> celtech.roboxbase.comms.remote.RemoteClient:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.comms.RemoteDetectedPrinter remotePrinterHandle -> remotePrinterHandle
    java.lang.String baseAPIString -> baseAPIString
    java.lang.String connectUrlString -> connectUrlString
    java.lang.String disconnectUrlString -> disconnectUrlString
    java.lang.String writeToPrinterUrlString -> writeToPrinterUrlString
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    20:36:void <init>(celtech.roboxbase.comms.RemoteDetectedPrinter) -> <init>
    41:50:boolean connect(java.lang.String) -> connect
    58:64:void disconnect(java.lang.String) -> disconnect
    69:81:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinter(java.lang.String,celtech.roboxbase.comms.tx.RoboxTxPacket) -> writeToPrinter
celtech.roboxbase.comms.remote.RoboxRemoteCommandInterface -> celtech.roboxbase.comms.remote.RoboxRemoteCommandInterface:
    celtech.roboxbase.comms.remote.RemoteClient remoteClient -> remoteClient
    27:30:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.RemoteDetectedPrinter,boolean,int) -> <init>
    35:44:boolean connectToPrinterImpl() -> connectToPrinterImpl
    52:57:void disconnectPrinterImpl() -> disconnectPrinterImpl
    63:76:celtech.roboxbase.comms.rx.RoboxRxPacket writeToPrinterImpl(celtech.roboxbase.comms.tx.RoboxTxPacket,boolean) -> writeToPrinterImpl
    82:84:void actionOnCommsFailure() -> actionOnCommsFailure
    89:90:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> setPrinterToUse
    99:100:void setSleepBetweenStatusChecks(int) -> setSleepBetweenStatusChecks
celtech.roboxbase.comms.remote.StringToBase64Encoder -> celtech.roboxbase.comms.remote.StringToBase64Encoder:
    19:19:void <init>() -> <init>
    29:29:java.lang.String encode(java.lang.String) -> encode
    40:41:java.lang.String decode(java.lang.String) -> decode
    58:62:java.lang.String encode(java.lang.String,int) -> encode
    77:82:boolean isEncodedData(java.lang.String) -> isEncodedData
celtech.roboxbase.comms.remote.WhoAreYouResponse -> celtech.roboxbase.comms.remote.WhoAreYouResponse:
    java.lang.String name -> name
    java.lang.String serverVersion -> serverVersion
    java.lang.String serverIP -> serverIP
    17:19:void <init>() -> <init>
    24:28:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    33:33:java.lang.String getName() -> getName
    39:40:void setName(java.lang.String) -> setName
    45:45:java.lang.String getServerVersion() -> getServerVersion
    51:52:void setServerVersion(java.lang.String) -> setServerVersion
    57:57:java.lang.String getServerIP() -> getServerIP
    63:64:void setServerIP(java.lang.String) -> setServerIP
celtech.roboxbase.comms.remote.WhyAreWeWaitingState -> celtech.roboxbase.comms.remote.WhyAreWeWaitingState:
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState NOT_WAITING -> NOT_WAITING
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState COOLING -> COOLING
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState BED_HEATING -> BED_HEATING
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState NOZZLE_HEATING -> NOZZLE_HEATING
    int value -> value
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState[] $VALUES -> $VALUES
    12:12:celtech.roboxbase.comms.remote.WhyAreWeWaitingState[] values() -> values
    12:12:celtech.roboxbase.comms.remote.WhyAreWeWaitingState valueOf(java.lang.String) -> valueOf
    42:53:celtech.roboxbase.comms.remote.WhyAreWeWaitingState modeFromValue(java.lang.Integer) -> modeFromValue
    59:61:void <init>(java.lang.String,int,int) -> <init>
    69:69:int getValue() -> getValue
    12:33:void <clinit>() -> <clinit>
celtech.roboxbase.comms.remote.types.SerializableColour -> celtech.roboxbase.comms.remote.types.SerializableColour:
    java.lang.String webColour -> webColour
    15:16:void <init>() -> <init>
    20:20:java.lang.String getWebColour() -> getWebColour
    25:26:void setWebColour(java.lang.String) -> setWebColour
    31:33:int hashCode() -> hashCode
    39:52:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.rx.AckResponse -> celtech.roboxbase.comms.rx.AckResponse:
    java.lang.String charsetToUse -> charsetToUse
    java.util.List firmwareErrors -> firmwareErrors
    27:27:boolean isError() -> isError
    16:39:void <init>() -> <init>
    49:61:boolean populatePacket(byte[],float) -> populatePacket
    66:66:java.util.List getFirmwareErrors() -> getFirmwareErrors
    71:72:void setFirmwareErrors(java.util.List) -> setFirmwareErrors
    81:97:java.lang.String toString() -> toString
    103:108:int packetLength(float) -> packetLength
    115:117:int hashCode() -> hashCode
    123:136:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.rx.DebugDataResponse -> celtech.roboxbase.comms.rx.DebugDataResponse:
    java.lang.String charsetToUse -> charsetToUse
    java.util.List debugResponse -> debugResponse
    15:25:void <init>() -> <init>
    35:52:boolean populatePacket(byte[],float) -> populatePacket
    62:72:java.lang.String toString() -> toString
    81:81:java.util.List getDebugData() -> getDebugData
    87:87:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.FirmwareError -> celtech.roboxbase.comms.rx.FirmwareError:
    celtech.roboxbase.comms.rx.FirmwareError SD_CARD -> SD_CARD
    celtech.roboxbase.comms.rx.FirmwareError CHUNK_SEQUENCE -> CHUNK_SEQUENCE
    celtech.roboxbase.comms.rx.FirmwareError FILE_TOO_LARGE -> FILE_TOO_LARGE
    celtech.roboxbase.comms.rx.FirmwareError GCODE_LINE_TOO_LONG -> GCODE_LINE_TOO_LONG
    celtech.roboxbase.comms.rx.FirmwareError USB_RX -> USB_RX
    celtech.roboxbase.comms.rx.FirmwareError USB_TX -> USB_TX
    celtech.roboxbase.comms.rx.FirmwareError BAD_COMMAND -> BAD_COMMAND
    celtech.roboxbase.comms.rx.FirmwareError HEAD_EEPROM -> HEAD_EEPROM
    celtech.roboxbase.comms.rx.FirmwareError BAD_FIRMWARE_FILE -> BAD_FIRMWARE_FILE
    celtech.roboxbase.comms.rx.FirmwareError FLASH_CHECKSUM -> FLASH_CHECKSUM
    celtech.roboxbase.comms.rx.FirmwareError GCODE_BUFFER_OVERRUN -> GCODE_BUFFER_OVERRUN
    celtech.roboxbase.comms.rx.FirmwareError FILE_READ_CLOBBERED -> FILE_READ_CLOBBERED
    celtech.roboxbase.comms.rx.FirmwareError MAX_GANTRY_ADJUSTMENT -> MAX_GANTRY_ADJUSTMENT
    celtech.roboxbase.comms.rx.FirmwareError REEL0_EEPROM -> REEL0_EEPROM
    celtech.roboxbase.comms.rx.FirmwareError E_FILAMENT_SLIP -> E_FILAMENT_SLIP
    celtech.roboxbase.comms.rx.FirmwareError D_FILAMENT_SLIP -> D_FILAMENT_SLIP
    celtech.roboxbase.comms.rx.FirmwareError NOZZLE_FLUSH_NEEDED -> NOZZLE_FLUSH_NEEDED
    celtech.roboxbase.comms.rx.FirmwareError Z_TOP_SWITCH -> Z_TOP_SWITCH
    celtech.roboxbase.comms.rx.FirmwareError B_STUCK -> B_STUCK
    celtech.roboxbase.comms.rx.FirmwareError REEL1_EEPROM -> REEL1_EEPROM
    celtech.roboxbase.comms.rx.FirmwareError HEAD_POWER_EEPROM -> HEAD_POWER_EEPROM
    celtech.roboxbase.comms.rx.FirmwareError HEAD_POWER_OVERTEMP -> HEAD_POWER_OVERTEMP
    celtech.roboxbase.comms.rx.FirmwareError BED_THERMISTOR -> BED_THERMISTOR
    celtech.roboxbase.comms.rx.FirmwareError NOZZLE0_THERMISTOR -> NOZZLE0_THERMISTOR
    celtech.roboxbase.comms.rx.FirmwareError NOZZLE1_THERMISTOR -> NOZZLE1_THERMISTOR
    celtech.roboxbase.comms.rx.FirmwareError B_POSITION_LOST -> B_POSITION_LOST
    celtech.roboxbase.comms.rx.FirmwareError E_LOAD_ERROR -> E_LOAD_ERROR
    celtech.roboxbase.comms.rx.FirmwareError D_LOAD_ERROR -> D_LOAD_ERROR
    celtech.roboxbase.comms.rx.FirmwareError E_UNLOAD_ERROR -> E_UNLOAD_ERROR
    celtech.roboxbase.comms.rx.FirmwareError D_UNLOAD_ERROR -> D_UNLOAD_ERROR
    celtech.roboxbase.comms.rx.FirmwareError ERROR_POWEROFF_WHILST_HOT -> ERROR_POWEROFF_WHILST_HOT
    celtech.roboxbase.comms.rx.FirmwareError ERROR_E_NO_FILAMENT -> ERROR_E_NO_FILAMENT
    celtech.roboxbase.comms.rx.FirmwareError ERROR_D_NO_FILAMENT -> ERROR_D_NO_FILAMENT
    celtech.roboxbase.comms.rx.FirmwareError B_POSITION_WARNING -> B_POSITION_WARNING
    celtech.roboxbase.comms.rx.FirmwareError UNKNOWN -> UNKNOWN
    celtech.roboxbase.comms.rx.FirmwareError PSEUDO_E_FILAMENT_SLIP_WHILST_PAUSED -> PSEUDO_E_FILAMENT_SLIP_WHILST_PAUSED
    celtech.roboxbase.comms.rx.FirmwareError PSEUDO_D_FILAMENT_SLIP_WHILST_PAUSED -> PSEUDO_D_FILAMENT_SLIP_WHILST_PAUSED
    celtech.roboxbase.comms.rx.FirmwareError ALL_ERRORS -> ALL_ERRORS
    java.lang.String errorText -> errorText
    int bytePosition -> bytePosition
    boolean requireUserToClear -> requireUserToClear
    java.util.Set options -> options
    celtech.roboxbase.comms.rx.FirmwareError[] $VALUES -> $VALUES
    13:13:celtech.roboxbase.comms.rx.FirmwareError[] values() -> values
    13:13:celtech.roboxbase.comms.rx.FirmwareError valueOf(java.lang.String) -> valueOf
    100:105:void <init>(java.lang.String,int,java.lang.String,int,boolean,celtech.roboxbase.SystemErrorHandlerOptions[]) -> <init>
    109:109:java.lang.String getErrorTitleKey() -> getErrorTitleKey
    114:114:java.lang.String getErrorMessageKey() -> getErrorMessageKey
    119:119:java.util.Set getOptions() -> getOptions
    124:124:int getBytePosition() -> getBytePosition
    129:140:celtech.roboxbase.comms.rx.FirmwareError fromBytePosition(int) -> fromBytePosition
    145:145:boolean isRequireUserToClear() -> isRequireUserToClear
    13:89:void <clinit>() -> <clinit>
celtech.roboxbase.comms.rx.FirmwareResponse -> celtech.roboxbase.comms.rx.FirmwareResponse:
    java.lang.String charsetToUse -> charsetToUse
    java.lang.String firmwareRevision -> firmwareRevision
    int firmwareRevisionBytes -> firmwareRevisionBytes
    float firmwareRevisionFloat -> firmwareRevisionFloat
    java.lang.String firmwareRevisionString -> firmwareRevisionString
    26:26:java.lang.String getFirmwareRevision() -> getFirmwareRevision
    35:35:float getFirmwareRevisionFloat() -> getFirmwareRevisionFloat
    40:40:java.lang.String getFirmwareRevisionString() -> getFirmwareRevisionString
    49:51:void setFirmwareRevision(java.lang.String) -> setFirmwareRevision
    14:59:void <init>() -> <init>
    69:94:boolean populatePacket(byte[],float) -> populatePacket
    104:114:java.lang.String toString() -> toString
    120:120:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.GCodeDataResponse -> celtech.roboxbase.comms.rx.GCodeDataResponse:
    java.lang.String charsetToUse -> charsetToUse
    int lengthFieldBytes -> lengthFieldBytes
    java.lang.String GCodeResponse -> GCodeResponse
    13:26:void <init>() -> <init>
    36:60:boolean populatePacket(byte[],float) -> populatePacket
    70:80:java.lang.String toString() -> toString
    89:89:java.lang.String getGCodeResponse() -> getGCodeResponse
    94:95:void setGCodeResponse(java.lang.String) -> setGCodeResponse
    100:100:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.HeadEEPROMDataResponse -> celtech.roboxbase.comms.rx.HeadEEPROMDataResponse:
    java.lang.String charsetToUse -> charsetToUse
    int decimalFloatFormatBytes -> decimalFloatFormatBytes
    int headTypeCodeBytes -> headTypeCodeBytes
    int uniqueIDBytes -> uniqueIDBytes
    celtech.roboxbase.printerControl.model.HeadEEPROMData headEEPROMData -> headEEPROMData
    39:54:void <init>() -> <init>
    59:263:boolean populatePacket(byte[],float) -> populatePacket
    269:279:java.lang.String toString() -> toString
    285:285:float getMaximumTemperature() -> getMaximumTemperature
    291:291:float getNozzle1XOffset() -> getNozzle1XOffset
    297:297:float getNozzle1YOffset() -> getNozzle1YOffset
    303:303:float getNozzle1ZOffset() -> getNozzle1ZOffset
    309:309:float getNozzle1BOffset() -> getNozzle1BOffset
    315:315:float getNozzle2XOffset() -> getNozzle2XOffset
    321:321:float getNozzle2YOffset() -> getNozzle2YOffset
    327:327:float getNozzle2ZOffset() -> getNozzle2ZOffset
    333:333:float getNozzle2BOffset() -> getNozzle2BOffset
    339:339:float getHeadHours() -> getHeadHours
    345:345:java.lang.String getHeadTypeCode() -> getHeadTypeCode
    351:351:java.lang.String getUniqueID() -> getUniqueID
    357:357:float getThermistorBeta() -> getThermistorBeta
    363:363:float getThermistorTCal() -> getThermistorTCal
    369:369:float getLastFilamentTemperature(int) -> getLastFilamentTemperature
    375:375:java.lang.String getFilament0ID() -> getFilament0ID
    381:381:java.lang.String getFilament1ID() -> getFilament1ID
    387:387:java.lang.String getFilamentID(int) -> getFilamentID
    412:446:void updateContents(java.lang.String,java.lang.String,int,float,float,float,float,java.lang.String,float,java.lang.String,float,int,float,float,float,float,float,float,float,float) -> updateContents
    451:452:void setHeadTypeCode(java.lang.String) -> setHeadTypeCode
    457:458:void setUniqueID(java.lang.String) -> setUniqueID
    463:464:void setMaximumTemperature(float) -> setMaximumTemperature
    469:470:void setThermistorBeta(float) -> setThermistorBeta
    475:476:void setThermistorTCal(float) -> setThermistorTCal
    481:482:void setNozzle1XOffset(float) -> setNozzle1XOffset
    487:488:void setNozzle1YOffset(float) -> setNozzle1YOffset
    493:494:void setNozzle1ZOffset(float) -> setNozzle1ZOffset
    499:500:void setNozzle1BOffset(float) -> setNozzle1BOffset
    505:506:void setNozzle2XOffset(float) -> setNozzle2XOffset
    511:512:void setNozzle2YOffset(float) -> setNozzle2YOffset
    517:518:void setNozzle2ZOffset(float) -> setNozzle2ZOffset
    523:524:void setNozzle2BOffset(float) -> setNozzle2BOffset
    529:530:void setLastFilamentTemperature0(float) -> setLastFilamentTemperature0
    535:536:void setLastFilamentTemperature1(float) -> setLastFilamentTemperature1
    541:542:void setFilament0ID(java.lang.String) -> setFilament0ID
    547:548:void setFilament1ID(java.lang.String) -> setFilament1ID
    553:554:void setHeadHours(float) -> setHeadHours
    559:559:java.lang.String getWeekNumber() -> getWeekNumber
    565:566:void setWeekNumber(java.lang.String) -> setWeekNumber
    571:571:java.lang.String getYearNumber() -> getYearNumber
    577:578:void setYearNumber(java.lang.String) -> setYearNumber
    583:583:java.lang.String getPONumber() -> getPONumber
    589:590:void setPONumber(java.lang.String) -> setPONumber
    595:595:java.lang.String getSerialNumber() -> getSerialNumber
    601:602:void setSerialNumber(java.lang.String) -> setSerialNumber
    607:607:java.lang.String getChecksum() -> getChecksum
    613:614:void setChecksum(java.lang.String) -> setChecksum
    626:647:void updateFromWrite(celtech.roboxbase.comms.tx.WriteHeadEEPROM) -> updateFromWrite
    651:651:celtech.roboxbase.printerControl.model.HeadEEPROMData getHeadEEPROMData() -> getHeadEEPROMData
    657:657:int packetLength(float) -> packetLength
    663:665:int hashCode() -> hashCode
    671:684:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.rx.HoursCounterResponse -> celtech.roboxbase.comms.rx.HoursCounterResponse:
    java.lang.String charsetToUse -> charsetToUse
    int bytesUsed -> bytesUsed
    float hoursCounterFloat -> hoursCounterFloat
    24:24:float getHoursCounter() -> getHoursCounter
    14:33:void <init>() -> <init>
    43:64:boolean populatePacket(byte[],float) -> populatePacket
    74:84:java.lang.String toString() -> toString
    90:90:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.ListFilesResponse -> celtech.roboxbase.comms.rx.ListFilesResponse:
    22:23:void <init>() -> <init>
    boolean populatePacket(byte[],float) -> populatePacket
    java.util.ArrayList getPrintJobIDs() -> getPrintJobIDs
celtech.roboxbase.comms.rx.ListFilesResponseImpl -> celtech.roboxbase.comms.rx.ListFilesResponseImpl:
    java.lang.String charsetToUse -> charsetToUse
    int lengthFieldBytes -> lengthFieldBytes
    java.util.ArrayList printJobIDs -> printJobIDs
    10:17:void <init>() -> <init>
    27:55:boolean populatePacket(byte[],float) -> populatePacket
    65:75:java.lang.String toString() -> toString
    84:84:java.util.ArrayList getPrintJobIDs() -> getPrintJobIDs
    90:90:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.NullPacket -> celtech.roboxbase.comms.rx.NullPacket:
    12:13:void <init>() -> <init>
    23:23:boolean populatePacket(byte[],float) -> populatePacket
    29:29:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.PrinterIDResponse -> celtech.roboxbase.comms.rx.PrinterIDResponse:
    java.lang.String charsetToUse -> charsetToUse
    java.lang.String model -> model
    java.lang.String edition -> edition
    java.lang.String weekOfManufacture -> weekOfManufacture
    java.lang.String yearOfManufacture -> yearOfManufacture
    java.lang.String poNumber -> poNumber
    java.lang.String serialNumber -> serialNumber
    java.lang.String checkByte -> checkByte
    java.lang.String printerFriendlyName -> printerFriendlyName
    java.lang.String printerColourWebString -> printerColourWebString
    20:38:void <init>() -> <init>
    48:111:boolean populatePacket(byte[],float) -> populatePacket
    121:131:java.lang.String toString() -> toString
    140:140:java.lang.String getPrinterColourWebString() -> getPrinterColourWebString
    146:146:javafx.scene.paint.Color getPrinterColor() -> getPrinterColor
    155:155:java.lang.String getModel() -> getModel
    164:164:java.lang.String getEdition() -> getEdition
    173:173:java.lang.String getWeekOfManufacture() -> getWeekOfManufacture
    182:182:java.lang.String getYearOfManufacture() -> getYearOfManufacture
    191:191:java.lang.String getPoNumber() -> getPoNumber
    200:200:java.lang.String getSerialNumber() -> getSerialNumber
    209:209:java.lang.String getCheckByte() -> getCheckByte
    218:218:java.lang.String getPrinterFriendlyName() -> getPrinterFriendlyName
    223:224:void setModel(java.lang.String) -> setModel
    228:229:void setEdition(java.lang.String) -> setEdition
    233:234:void setWeekOfManufacture(java.lang.String) -> setWeekOfManufacture
    238:239:void setYearOfManufacture(java.lang.String) -> setYearOfManufacture
    243:244:void setPoNumber(java.lang.String) -> setPoNumber
    248:249:void setSerialNumber(java.lang.String) -> setSerialNumber
    253:254:void setPrinterColour(java.lang.String) -> setPrinterColour
    259:260:void setPrinterColourFromColor(javafx.scene.paint.Color) -> setPrinterColourFromColor
    264:265:void setPrinterFriendlyName(java.lang.String) -> setPrinterFriendlyName
    270:270:int packetLength(float) -> packetLength
    276:286:int hashCode() -> hashCode
    292:313:boolean equals(java.lang.Object) -> equals
    319:333:java.lang.String getAsFormattedString() -> getAsFormattedString
celtech.roboxbase.comms.rx.PrinterNotFound -> celtech.roboxbase.comms.rx.PrinterNotFound:
    14:15:void <init>() -> <init>
    25:27:boolean populatePacket(byte[],float) -> populatePacket
    37:45:java.lang.String toString() -> toString
    51:51:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.ReelEEPROM0DataResponse -> celtech.roboxbase.comms.rx.ReelEEPROM0DataResponse:
    14:15:void <init>() -> <init>
celtech.roboxbase.comms.rx.ReelEEPROM1DataResponse -> celtech.roboxbase.comms.rx.ReelEEPROM1DataResponse:
    14:15:void <init>() -> <init>
celtech.roboxbase.comms.rx.ReelEEPROMDataResponse -> celtech.roboxbase.comms.rx.ReelEEPROMDataResponse:
    java.lang.String charsetToUse -> charsetToUse
    int decimalFloatFormatBytes -> decimalFloatFormatBytes
    int materialTypeCodeBytes -> materialTypeCodeBytes
    int uniqueIDBytes -> uniqueIDBytes
    int colourBytes -> colourBytes
    java.lang.String filamentID -> filamentID
    int firstLayerNozzleTemperature -> firstLayerNozzleTemperature
    int nozzleTemperature -> nozzleTemperature
    int firstLayerBedTemperature -> firstLayerBedTemperature
    int bedTemperature -> bedTemperature
    int ambientTemperature -> ambientTemperature
    float filamentDiameter -> filamentDiameter
    float filamentMultiplier -> filamentMultiplier
    float feedRateMultiplier -> feedRateMultiplier
    float remainingFilament -> remainingFilament
    celtech.roboxbase.MaterialType reelMaterialType -> reelMaterialType
    java.lang.String displayColourString -> displayColourString
    java.lang.String friendlyName -> friendlyName
    int reelNumber -> reelNumber
    25:56:void <init>(celtech.roboxbase.comms.rx.RxPacketTypeEnum,boolean,boolean) -> <init>
    66:213:boolean populatePacket(byte[],float) -> populatePacket
    223:233:java.lang.String toString() -> toString
    243:243:java.lang.String getFilamentID() -> getFilamentID
    249:249:java.lang.String getFriendlyName() -> getFriendlyName
    259:259:int getFirstLayerNozzleTemperature() -> getFirstLayerNozzleTemperature
    269:269:int getNozzleTemperature() -> getNozzleTemperature
    279:279:int getFirstLayerBedTemperature() -> getFirstLayerBedTemperature
    289:289:int getBedTemperature() -> getBedTemperature
    299:299:int getAmbientTemperature() -> getAmbientTemperature
    309:309:float getFilamentDiameter() -> getFilamentDiameter
    319:319:float getFilamentMultiplier() -> getFilamentMultiplier
    329:329:float getFeedRateMultiplier() -> getFeedRateMultiplier
    339:339:float getRemainingFilament() -> getRemainingFilament
    348:348:celtech.roboxbase.MaterialType getMaterialType() -> getMaterialType
    354:354:java.lang.String getDisplayColourString() -> getDisplayColourString
    389:402:void updateContents(java.lang.String,int,int,int,int,int,float,float,float,float,celtech.roboxbase.MaterialType,java.lang.String,java.lang.String) -> updateContents
    407:408:void setFilamentID(java.lang.String) -> setFilamentID
    413:414:void setFirstLayerNozzleTemperature(int) -> setFirstLayerNozzleTemperature
    419:420:void setNozzleTemperature(int) -> setNozzleTemperature
    425:426:void setFirstLayerBedTemperature(int) -> setFirstLayerBedTemperature
    431:432:void setBedTemperature(int) -> setBedTemperature
    437:438:void setAmbientTemperature(int) -> setAmbientTemperature
    443:444:void setFilamentDiameter(float) -> setFilamentDiameter
    449:450:void setFilamentMultiplier(float) -> setFilamentMultiplier
    455:456:void setFeedRateMultiplier(float) -> setFeedRateMultiplier
    461:462:void setRemainingFilament(float) -> setRemainingFilament
    467:468:void setMaterialType(celtech.roboxbase.MaterialType) -> setMaterialType
    472:473:void setDisplayColourString(java.lang.String) -> setDisplayColourString
    478:479:void setFriendlyName(java.lang.String) -> setFriendlyName
    484:485:void setReelNumber(int) -> setReelNumber
    490:490:int getReelNumber() -> getReelNumber
    496:496:int packetLength(float) -> packetLength
    502:517:int hashCode() -> hashCode
    523:549:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.rx.RoboxRxPacket -> celtech.roboxbase.comms.rx.RoboxRxPacket:
    celtech.roboxbase.comms.rx.RxPacketTypeEnum packetType -> packetType
    java.lang.String messagePayload -> messagePayload
    java.lang.Integer sequenceNumber -> sequenceNumber
    java.lang.Boolean includeSequenceNumber -> includeSequenceNumber
    java.lang.Boolean includeCharsOfDataInOutput -> includeCharsOfDataInOutput
    int sequenceNumberLength -> sequenceNumberLength
    int charsOfDataLength -> charsOfDataLength
    libertysystems.stenographer.Stenographer steno -> steno
    16:41:void <init>(celtech.roboxbase.comms.rx.RxPacketTypeEnum,boolean,boolean) -> <init>
    49:49:celtech.roboxbase.comms.rx.RxPacketTypeEnum getPacketType() -> getPacketType
    54:55:void setPacketType(celtech.roboxbase.comms.rx.RxPacketTypeEnum) -> setPacketType
    64:64:java.lang.String getMessagePayload() -> getMessagePayload
    73:74:void setMessagePayload(java.lang.String) -> setMessagePayload
    82:83:void setMessagePayloadBytes(byte[]) -> setMessagePayloadBytes
    87:87:java.lang.Integer getSequenceNumber() -> getSequenceNumber
    96:97:void setSequenceNumber(int) -> setSequenceNumber
    101:101:java.lang.Boolean isIncludeSequenceNumber() -> isIncludeSequenceNumber
    106:107:void setIncludeSequenceNumber(boolean) -> setIncludeSequenceNumber
    111:111:java.lang.Boolean isIncludeCharsOfDataInOutput() -> isIncludeCharsOfDataInOutput
    116:117:void setIncludeCharsOfDataInOutput(boolean) -> setIncludeCharsOfDataInOutput
    126:136:java.lang.String toString() -> toString
    145:201:byte[] toByteArray() -> toByteArray
    boolean populatePacket(byte[],float) -> populatePacket
    int packetLength(float) -> packetLength
    28:28:void <clinit>() -> <clinit>
celtech.roboxbase.comms.rx.RoboxRxPacketFactory -> celtech.roboxbase.comms.rx.RoboxRxPacketFactory:
    byte commandByteMask -> commandByteMask
    float USE_LATEST_FIRMWARE_VERSION -> USE_LATEST_FIRMWARE_VERSION
    21:22:void <init>() -> <init>
    26:26:celtech.roboxbase.comms.rx.RoboxRxPacket createNullPacket() -> createNullPacket
    36:86:celtech.roboxbase.comms.rx.RoboxRxPacket createPacket(celtech.roboxbase.comms.rx.RxPacketTypeEnum) -> createPacket
    99:99:celtech.roboxbase.comms.rx.RoboxRxPacket createPacket(byte[]) -> createPacket
    112:197:celtech.roboxbase.comms.rx.RoboxRxPacket createPacket(byte[],float) -> createPacket
celtech.roboxbase.comms.rx.RoboxRxPacketFactory$1 -> celtech.roboxbase.comms.rx.RoboxRxPacketFactory$1:
    int[] $SwitchMap$celtech$roboxbase$comms$rx$RxPacketTypeEnum -> $SwitchMap$celtech$roboxbase$comms$rx$RxPacketTypeEnum
    40:40:void <clinit>() -> <clinit>
celtech.roboxbase.comms.rx.RxPacketTypeEnum -> celtech.roboxbase.comms.rx.RxPacketTypeEnum:
    celtech.roboxbase.comms.rx.RxPacketTypeEnum NULL_PACKET -> NULL_PACKET
    celtech.roboxbase.comms.rx.RxPacketTypeEnum STATUS_RESPONSE -> STATUS_RESPONSE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum FIRMWARE_RESPONSE -> FIRMWARE_RESPONSE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum ACK_WITH_ERRORS -> ACK_WITH_ERRORS
    celtech.roboxbase.comms.rx.RxPacketTypeEnum PRINTER_ID_RESPONSE -> PRINTER_ID_RESPONSE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum REEL_0_EEPROM_DATA -> REEL_0_EEPROM_DATA
    celtech.roboxbase.comms.rx.RxPacketTypeEnum REEL_1_EEPROM_DATA -> REEL_1_EEPROM_DATA
    celtech.roboxbase.comms.rx.RxPacketTypeEnum HEAD_EEPROM_DATA -> HEAD_EEPROM_DATA
    celtech.roboxbase.comms.rx.RxPacketTypeEnum GCODE_RESPONSE -> GCODE_RESPONSE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum LIST_FILES_RESPONSE -> LIST_FILES_RESPONSE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum SEND_FILE -> SEND_FILE
    celtech.roboxbase.comms.rx.RxPacketTypeEnum HOURS_COUNTER -> HOURS_COUNTER
    celtech.roboxbase.comms.rx.RxPacketTypeEnum DEBUG_DATA -> DEBUG_DATA
    celtech.roboxbase.comms.rx.RxPacketTypeEnum PRINTER_NOT_FOUND -> PRINTER_NOT_FOUND
    byte commandByte -> commandByte
    boolean containsLengthField -> containsLengthField
    int lengthFieldSize -> lengthFieldSize
    celtech.roboxbase.comms.rx.RxPacketTypeEnum[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.comms.rx.RxPacketTypeEnum[] values() -> values
    7:7:celtech.roboxbase.comms.rx.RxPacketTypeEnum valueOf(java.lang.String) -> valueOf
    65:69:void <init>(java.lang.String,int,byte,boolean,int) -> <init>
    77:77:byte getCommandByte() -> getCommandByte
    86:86:boolean containsLengthField() -> containsLengthField
    95:95:int getLengthFieldSize() -> getLengthFieldSize
    105:116:celtech.roboxbase.comms.rx.RxPacketTypeEnum getEnumForCommand(byte) -> getEnumForCommand
    7:58:void <clinit>() -> <clinit>
celtech.roboxbase.comms.rx.SendFile -> celtech.roboxbase.comms.rx.SendFile:
    java.lang.String charsetToUse -> charsetToUse
    java.lang.String fileID -> fileID
    int fileIDBytes -> fileIDBytes
    int expectedSequenceNumber -> expectedSequenceNumber
    int expectedSequenceNumberBytes -> expectedSequenceNumberBytes
    26:26:java.lang.String getFileID() -> getFileID
    35:35:int getExpectedSequenceNumber() -> getExpectedSequenceNumber
    14:44:void <init>() -> <init>
    54:84:boolean populatePacket(byte[],float) -> populatePacket
    94:106:java.lang.String toString() -> toString
    112:112:int packetLength(float) -> packetLength
celtech.roboxbase.comms.rx.StatusResponse -> celtech.roboxbase.comms.rx.StatusResponse:
    java.lang.String charsetToUse -> charsetToUse
    java.lang.String runningPrintJobID -> runningPrintJobID
    int runningPrintJobIDBytes -> runningPrintJobIDBytes
    java.lang.String printJobLineNumberString -> printJobLineNumberString
    int printJobLineNumber -> printJobLineNumber
    int printJobLineNumberBytes -> printJobLineNumberBytes
    boolean xSwitchStatus -> xSwitchStatus
    boolean ySwitchStatus -> ySwitchStatus
    boolean zSwitchStatus -> zSwitchStatus
    celtech.roboxbase.comms.remote.PauseStatus pauseStatus -> pauseStatus
    celtech.roboxbase.comms.remote.BusyStatus busyStatus -> busyStatus
    boolean filament1SwitchStatus -> filament1SwitchStatus
    boolean filament2SwitchStatus -> filament2SwitchStatus
    boolean nozzleSwitchStatus -> nozzleSwitchStatus
    boolean doorOpen -> doorOpen
    boolean reelButtonPressed -> reelButtonPressed
    boolean EIndexStatus -> EIndexStatus
    boolean DIndexStatus -> DIndexStatus
    boolean topZSwitchStatus -> topZSwitchStatus
    boolean extruderEPresent -> extruderEPresent
    boolean extruderDPresent -> extruderDPresent
    celtech.roboxbase.printerControl.model.HeaterMode nozzle0HeaterMode -> nozzle0HeaterMode
    java.lang.String nozzle0HeaterModeString -> nozzle0HeaterModeString
    java.lang.String nozzle0TemperatureString -> nozzle0TemperatureString
    int nozzle0Temperature -> nozzle0Temperature
    java.lang.String nozzle0TargetTemperatureString -> nozzle0TargetTemperatureString
    int nozzle0TargetTemperature -> nozzle0TargetTemperature
    java.lang.String nozzle0FirstLayerTargetTemperatureString -> nozzle0FirstLayerTargetTemperatureString
    int nozzle0FirstLayerTargetTemperature -> nozzle0FirstLayerTargetTemperature
    celtech.roboxbase.printerControl.model.HeaterMode nozzle1HeaterMode -> nozzle1HeaterMode
    java.lang.String nozzle1HeaterModeString -> nozzle1HeaterModeString
    java.lang.String nozzle1TemperatureString -> nozzle1TemperatureString
    int nozzle1Temperature -> nozzle1Temperature
    java.lang.String nozzle1TargetTemperatureString -> nozzle1TargetTemperatureString
    int nozzle1TargetTemperature -> nozzle1TargetTemperature
    java.lang.String nozzle1FirstLayerTargetTemperatureString -> nozzle1FirstLayerTargetTemperatureString
    int nozzle1FirstLayerTargetTemperature -> nozzle1FirstLayerTargetTemperature
    celtech.roboxbase.printerControl.model.HeaterMode bedHeaterMode -> bedHeaterMode
    java.lang.String bedHeaterModeString -> bedHeaterModeString
    java.lang.String bedTemperatureString -> bedTemperatureString
    int bedTemperature -> bedTemperature
    java.lang.String bedTargetTemperatureString -> bedTargetTemperatureString
    int bedTargetTemperature -> bedTargetTemperature
    java.lang.String bedFirstLayerTargetTemperatureString -> bedFirstLayerTargetTemperatureString
    int bedFirstLayerTargetTemperature -> bedFirstLayerTargetTemperature
    boolean ambientFanOn -> ambientFanOn
    int ambientTemperature -> ambientTemperature
    java.lang.String ambientTemperatureString -> ambientTemperatureString
    java.lang.String ambientTargetTemperatureString -> ambientTargetTemperatureString
    int ambientTargetTemperature -> ambientTargetTemperature
    boolean headFanOn -> headFanOn
    celtech.roboxbase.comms.remote.EEPROMState headEEPROMState -> headEEPROMState
    celtech.roboxbase.comms.remote.EEPROMState reel0EEPROMState -> reel0EEPROMState
    celtech.roboxbase.comms.remote.EEPROMState reel1EEPROMState -> reel1EEPROMState
    boolean dualReelAdaptorPresent -> dualReelAdaptorPresent
    boolean sdCardPresent -> sdCardPresent
    int decimalFloatFormatBytes -> decimalFloatFormatBytes
    float headXPosition -> headXPosition
    float headYPosition -> headYPosition
    float headZPosition -> headZPosition
    float BPosition -> BPosition
    int nozzleInUse -> nozzleInUse
    float EFilamentDiameter -> EFilamentDiameter
    float EFilamentMultiplier -> EFilamentMultiplier
    float DFilamentDiameter -> DFilamentDiameter
    float DFilamentMultiplier -> DFilamentMultiplier
    float feedRateEMultiplier -> feedRateEMultiplier
    float feedRateDMultiplier -> feedRateDMultiplier
    celtech.roboxbase.comms.remote.WhyAreWeWaitingState whyAreWeWaitingState -> whyAreWeWaitingState
    boolean headPowerOn -> headPowerOn
    162:162:java.lang.String getRunningPrintJobID() -> getRunningPrintJobID
    171:171:int getPrintJobLineNumber() -> getPrintJobLineNumber
    180:180:boolean isxSwitchStatus() -> isxSwitchStatus
    189:189:boolean isySwitchStatus() -> isySwitchStatus
    198:198:boolean iszSwitchStatus() -> iszSwitchStatus
    207:207:celtech.roboxbase.comms.remote.PauseStatus getPauseStatus() -> getPauseStatus
    216:216:celtech.roboxbase.comms.remote.BusyStatus getBusyStatus() -> getBusyStatus
    225:225:boolean isFilament1SwitchStatus() -> isFilament1SwitchStatus
    234:234:boolean isFilament2SwitchStatus() -> isFilament2SwitchStatus
    243:243:boolean isNozzleSwitchStatus() -> isNozzleSwitchStatus
    252:252:boolean isDoorOpen() -> isDoorOpen
    261:261:boolean isReelButtonPressed() -> isReelButtonPressed
    270:270:boolean isEIndexStatus() -> isEIndexStatus
    279:279:boolean isDIndexStatus() -> isDIndexStatus
    288:288:boolean isTopZSwitchStatus() -> isTopZSwitchStatus
    297:297:boolean isExtruderEPresent() -> isExtruderEPresent
    306:306:boolean isExtruderDPresent() -> isExtruderDPresent
    315:315:celtech.roboxbase.printerControl.model.HeaterMode getNozzle0HeaterMode() -> getNozzle0HeaterMode
    324:324:int getNozzle0Temperature() -> getNozzle0Temperature
    333:333:int getNozzle0TargetTemperature() -> getNozzle0TargetTemperature
    342:342:int getNozzle0FirstLayerTargetTemperature() -> getNozzle0FirstLayerTargetTemperature
    351:351:celtech.roboxbase.printerControl.model.HeaterMode getNozzle1HeaterMode() -> getNozzle1HeaterMode
    360:360:int getNozzle1Temperature() -> getNozzle1Temperature
    369:369:int getNozzle1TargetTemperature() -> getNozzle1TargetTemperature
    378:378:int getNozzle1FirstLayerTargetTemperature() -> getNozzle1FirstLayerTargetTemperature
    387:387:celtech.roboxbase.printerControl.model.HeaterMode getBedHeaterMode() -> getBedHeaterMode
    396:396:int getBedTemperature() -> getBedTemperature
    405:405:int getBedTargetTemperature() -> getBedTargetTemperature
    414:414:int getBedFirstLayerTargetTemperature() -> getBedFirstLayerTargetTemperature
    423:423:boolean isAmbientFanOn() -> isAmbientFanOn
    432:432:int getAmbientTemperature() -> getAmbientTemperature
    441:441:int getAmbientTargetTemperature() -> getAmbientTargetTemperature
    450:450:boolean isHeadFanOn() -> isHeadFanOn
    459:459:celtech.roboxbase.comms.remote.EEPROMState getHeadEEPROMState() -> getHeadEEPROMState
    464:464:celtech.roboxbase.comms.remote.EEPROMState getReel0EEPROMState() -> getReel0EEPROMState
    469:469:celtech.roboxbase.comms.remote.EEPROMState getReel1EEPROMState() -> getReel1EEPROMState
    474:475:void setReelButtonPressed(boolean) -> setReelButtonPressed
    479:480:void setDoorOpen(boolean) -> setDoorOpen
    484:485:void setNozzle1FirstLayerTargetTemperature(int) -> setNozzle1FirstLayerTargetTemperature
    489:490:void setNozzleInUse(int) -> setNozzleInUse
    498:509:celtech.roboxbase.comms.remote.EEPROMState getReelEEPROMState(int) -> getReelEEPROMState
    518:518:boolean isDualReelAdaptorPresent() -> isDualReelAdaptorPresent
    527:527:boolean issdCardPresent() -> issdCardPresent
    536:536:float getHeadXPosition() -> getHeadXPosition
    545:545:float getHeadYPosition() -> getHeadYPosition
    554:554:float getHeadZPosition() -> getHeadZPosition
    563:563:float getBPosition() -> getBPosition
    572:572:int getNozzleInUse() -> getNozzleInUse
    581:581:float getEFilamentDiameter() -> getEFilamentDiameter
    590:590:float getEFilamentMultiplier() -> getEFilamentMultiplier
    599:599:float getDFilamentDiameter() -> getDFilamentDiameter
    608:608:float getDFilamentMultiplier() -> getDFilamentMultiplier
    617:617:float getFeedRateEMultiplier() -> getFeedRateEMultiplier
    626:626:float getFeedRateDMultiplier() -> getFeedRateDMultiplier
    635:635:celtech.roboxbase.comms.remote.WhyAreWeWaitingState getWhyAreWeWaitingState() -> getWhyAreWeWaitingState
    644:644:boolean isHeadPowerOn() -> isHeadPowerOn
    649:650:void setHeadPowerOn(boolean) -> setHeadPowerOn
    654:655:void setRunningPrintJobID(java.lang.String) -> setRunningPrintJobID
    659:660:void setPrintJobLineNumberString(java.lang.String) -> setPrintJobLineNumberString
    664:665:void setPrintJobLineNumber(int) -> setPrintJobLineNumber
    669:670:void setxSwitchStatus(boolean) -> setxSwitchStatus
    674:675:void setySwitchStatus(boolean) -> setySwitchStatus
    679:680:void setzSwitchStatus(boolean) -> setzSwitchStatus
    684:685:void setPauseStatus(celtech.roboxbase.comms.remote.PauseStatus) -> setPauseStatus
    689:690:void setBusyStatus(celtech.roboxbase.comms.remote.BusyStatus) -> setBusyStatus
    694:695:void setFilament1SwitchStatus(boolean) -> setFilament1SwitchStatus
    699:700:void setFilament2SwitchStatus(boolean) -> setFilament2SwitchStatus
    704:705:void setNozzleSwitchStatus(boolean) -> setNozzleSwitchStatus
    709:710:void setEIndexStatus(boolean) -> setEIndexStatus
    714:715:void setDIndexStatus(boolean) -> setDIndexStatus
    719:720:void setTopZSwitchStatus(boolean) -> setTopZSwitchStatus
    724:725:void setExtruderEPresent(boolean) -> setExtruderEPresent
    729:730:void setExtruderDPresent(boolean) -> setExtruderDPresent
    734:735:void setNozzle0HeaterMode(celtech.roboxbase.printerControl.model.HeaterMode) -> setNozzle0HeaterMode
    739:740:void setNozzle1HeaterMode(celtech.roboxbase.printerControl.model.HeaterMode) -> setNozzle1HeaterMode
    744:745:void setNozzle0HeaterModeString(java.lang.String) -> setNozzle0HeaterModeString
    749:750:void setNozzle0TemperatureString(java.lang.String) -> setNozzle0TemperatureString
    754:755:void setNozzle0Temperature(int) -> setNozzle0Temperature
    759:760:void setNozzle1Temperature(int) -> setNozzle1Temperature
    764:765:void setNozzle0TargetTemperatureString(java.lang.String) -> setNozzle0TargetTemperatureString
    769:770:void setNozzle0TargetTemperature(int) -> setNozzle0TargetTemperature
    774:775:void setNozzle1TargetTemperature(int) -> setNozzle1TargetTemperature
    780:781:void setNozzle0FirstLayerTargetTemperatureString(java.lang.String) -> setNozzle0FirstLayerTargetTemperatureString
    785:786:void setNozzle0FirstLayerTargetTemperature(int) -> setNozzle0FirstLayerTargetTemperature
    790:791:void setBedHeaterMode(celtech.roboxbase.printerControl.model.HeaterMode) -> setBedHeaterMode
    795:796:void setBedHeaterModeString(java.lang.String) -> setBedHeaterModeString
    800:801:void setBedTemperatureString(java.lang.String) -> setBedTemperatureString
    805:806:void setBedTemperature(int) -> setBedTemperature
    810:811:void setBedTargetTemperatureString(java.lang.String) -> setBedTargetTemperatureString
    815:816:void setBedTargetTemperature(int) -> setBedTargetTemperature
    820:821:void setBedFirstLayerTargetTemperatureString(java.lang.String) -> setBedFirstLayerTargetTemperatureString
    825:826:void setBedFirstLayerTargetTemperature(int) -> setBedFirstLayerTargetTemperature
    830:831:void setAmbientFanOn(boolean) -> setAmbientFanOn
    835:836:void setAmbientTemperature(int) -> setAmbientTemperature
    840:841:void setAmbientTemperatureString(java.lang.String) -> setAmbientTemperatureString
    845:846:void setAmbientTargetTemperatureString(java.lang.String) -> setAmbientTargetTemperatureString
    850:851:void setAmbientTargetTemperature(int) -> setAmbientTargetTemperature
    855:856:void setHeadFanOn(boolean) -> setHeadFanOn
    860:861:void setHeadEEPROMState(celtech.roboxbase.comms.remote.EEPROMState) -> setHeadEEPROMState
    865:866:void setReel0EEPROMState(celtech.roboxbase.comms.remote.EEPROMState) -> setReel0EEPROMState
    870:871:void setReel1EEPROMState(celtech.roboxbase.comms.remote.EEPROMState) -> setReel1EEPROMState
    875:876:void setDualReelAdaptorPresent(boolean) -> setDualReelAdaptorPresent
    880:881:void setsdCardPresent(boolean) -> setsdCardPresent
    885:886:void setHeadXPosition(float) -> setHeadXPosition
    890:891:void setHeadYPosition(float) -> setHeadYPosition
    895:896:void setHeadZPosition(float) -> setHeadZPosition
    900:901:void setBPosition(float) -> setBPosition
    905:906:void setEFilamentDiameter(float) -> setEFilamentDiameter
    910:911:void setDFilamentDiameter(float) -> setDFilamentDiameter
    915:916:void setEFilamentMultiplier(float) -> setEFilamentMultiplier
    920:921:void setDFilamentMultiplier(float) -> setDFilamentMultiplier
    925:926:void setFeedRateEMultiplier(float) -> setFeedRateEMultiplier
    930:931:void setFeedRateDMultiplier(float) -> setFeedRateDMultiplier
    935:936:void setWhyAreWeWaitingState(celtech.roboxbase.comms.remote.WhyAreWeWaitingState) -> setWhyAreWeWaitingState
    81:947:void <init>() -> <init>
    957:1369:boolean populatePacket(byte[],float) -> populatePacket
    1379:1490:java.lang.String toString() -> toString
    1496:1507:int packetLength(float) -> packetLength
    1514:1581:int hashCode() -> hashCode
    1587:1664:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.comms.tx.AbortPrint -> celtech.roboxbase.comms.tx.AbortPrint:
    15:16:void <init>() -> <init>
    26:26:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.FormatHeadEEPROM -> celtech.roboxbase.comms.tx.FormatHeadEEPROM:
    19:20:void <init>() -> <init>
    30:30:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.FormatReel0EEPROM -> celtech.roboxbase.comms.tx.FormatReel0EEPROM:
    19:20:void <init>() -> <init>
    30:30:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.FormatReel1EEPROM -> celtech.roboxbase.comms.tx.FormatReel1EEPROM:
    15:16:void <init>() -> <init>
    26:26:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.InitiatePrint -> celtech.roboxbase.comms.tx.InitiatePrint:
    20:21:void <init>() -> <init>
    31:31:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ListFiles -> celtech.roboxbase.comms.tx.ListFiles:
    19:20:void <init>() -> <init>
    30:30:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.PausePrint -> celtech.roboxbase.comms.tx.PausePrint:
    15:16:void <init>() -> <init>
    26:27:boolean populatePacket(byte[]) -> populatePacket
    35:36:void setPause() -> setPause
    43:44:void setResume() -> setResume
celtech.roboxbase.comms.tx.QueryFirmwareVersion -> celtech.roboxbase.comms.tx.QueryFirmwareVersion:
    16:17:void <init>() -> <init>
    27:27:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadDebugData -> celtech.roboxbase.comms.tx.ReadDebugData:
    18:19:void <init>() -> <init>
    29:29:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadHeadEEPROM -> celtech.roboxbase.comms.tx.ReadHeadEEPROM:
    22:23:void <init>() -> <init>
    33:33:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadHoursCounter -> celtech.roboxbase.comms.tx.ReadHoursCounter:
    18:19:void <init>() -> <init>
    29:29:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadPrinterID -> celtech.roboxbase.comms.tx.ReadPrinterID:
    23:24:void <init>() -> <init>
    34:34:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadReel0EEPROM -> celtech.roboxbase.comms.tx.ReadReel0EEPROM:
    15:16:void <init>() -> <init>
    26:26:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadReel1EEPROM -> celtech.roboxbase.comms.tx.ReadReel1EEPROM:
    18:19:void <init>() -> <init>
    29:29:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReadSendFileReport -> celtech.roboxbase.comms.tx.ReadSendFileReport:
    18:19:void <init>() -> <init>
    29:29:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.ReportErrors -> celtech.roboxbase.comms.tx.ReportErrors:
    22:23:void <init>() -> <init>
    33:33:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.RoboxTxPacket -> celtech.roboxbase.comms.tx.RoboxTxPacket:
    celtech.roboxbase.comms.tx.TxPacketTypeEnum packetType -> packetType
    java.lang.String messagePayload -> messagePayload
    java.lang.Integer sequenceNumber -> sequenceNumber
    java.lang.Boolean includeSequenceNumber -> includeSequenceNumber
    java.lang.Boolean includeCharsOfDataInOutput -> includeCharsOfDataInOutput
    int sequenceNumberLength -> sequenceNumberLength
    int charsOfDataLength -> charsOfDataLength
    libertysystems.stenographer.Stenographer steno -> steno
    38:58:void <init>() -> <init>
    38:71:void <init>(celtech.roboxbase.comms.tx.TxPacketTypeEnum,boolean,boolean) -> <init>
    79:79:celtech.roboxbase.comms.tx.TxPacketTypeEnum getPacketType() -> getPacketType
    84:85:void setPacketType(celtech.roboxbase.comms.tx.TxPacketTypeEnum) -> setPacketType
    93:93:java.lang.String getMessagePayload() -> getMessagePayload
    102:103:void setMessagePayload(java.lang.String) -> setMessagePayload
    111:112:void setMessagePayloadBytes(byte[]) -> setMessagePayloadBytes
    116:116:java.lang.Integer getSequenceNumber() -> getSequenceNumber
    125:126:void setSequenceNumber(int) -> setSequenceNumber
    130:130:java.lang.Boolean getIncludeSequenceNumber() -> getIncludeSequenceNumber
    135:136:void setIncludeSequenceNumber(boolean) -> setIncludeSequenceNumber
    140:140:java.lang.Boolean getIncludeCharsOfDataInOutput() -> getIncludeCharsOfDataInOutput
    145:146:void setIncludeCharsOfDataInOutput(boolean) -> setIncludeCharsOfDataInOutput
    155:165:java.lang.String toString() -> toString
    174:215:byte[] toByteArray() -> toByteArray
    220:233:java.lang.String constructPayloadString() -> constructPayloadString
    boolean populatePacket(byte[]) -> populatePacket
    246:252:int hashCode() -> hashCode
    258:275:boolean equals(java.lang.Object) -> equals
    54:54:void <clinit>() -> <clinit>
celtech.roboxbase.comms.tx.RoboxTxPacketFactory -> celtech.roboxbase.comms.tx.RoboxTxPacketFactory:
    byte commandByteMask -> commandByteMask
    35:36:void <init>() -> <init>
    40:152:celtech.roboxbase.comms.tx.RoboxTxPacket instantiatePacket(celtech.roboxbase.comms.tx.TxPacketTypeEnum) -> instantiatePacket
    162:169:celtech.roboxbase.comms.tx.RoboxTxPacket createPacket(celtech.roboxbase.comms.tx.TxPacketTypeEnum) -> createPacket
celtech.roboxbase.comms.tx.RoboxTxPacketFactory$1 -> celtech.roboxbase.comms.tx.RoboxTxPacketFactory$1:
    int[] $SwitchMap$celtech$roboxbase$comms$tx$TxPacketTypeEnum -> $SwitchMap$celtech$roboxbase$comms$tx$TxPacketTypeEnum
    42:42:void <clinit>() -> <clinit>
celtech.roboxbase.comms.tx.SendDataFileChunk -> celtech.roboxbase.comms.tx.SendDataFileChunk:
    15:16:void <init>() -> <init>
    26:27:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SendDataFileEnd -> celtech.roboxbase.comms.tx.SendDataFileEnd:
    22:23:void <init>() -> <init>
    33:34:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SendDataFileStart -> celtech.roboxbase.comms.tx.SendDataFileStart:
    22:23:void <init>() -> <init>
    33:34:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SendGCodeRequest -> celtech.roboxbase.comms.tx.SendGCodeRequest:
    22:23:void <init>() -> <init>
    33:34:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SendPrintFileStart -> celtech.roboxbase.comms.tx.SendPrintFileStart:
    18:19:void <init>() -> <init>
    29:30:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SendResetErrors -> celtech.roboxbase.comms.tx.SendResetErrors:
    22:23:void <init>() -> <init>
    33:33:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.SetAmbientLEDColour -> celtech.roboxbase.comms.tx.SetAmbientLEDColour:
    15:16:void <init>() -> <init>
    26:27:boolean populatePacket(byte[]) -> populatePacket
    36:41:void setLEDColour(java.lang.String) -> setLEDColour
celtech.roboxbase.comms.tx.SetDFeedRateMultiplier -> celtech.roboxbase.comms.tx.SetDFeedRateMultiplier:
    17:18:void <init>() -> <init>
    28:29:boolean populatePacket(byte[]) -> populatePacket
    38:45:void setFeedRateMultiplier(double) -> setFeedRateMultiplier
celtech.roboxbase.comms.tx.SetDFilamentInfo -> celtech.roboxbase.comms.tx.SetDFilamentInfo:
    17:18:void <init>() -> <init>
    28:29:boolean populatePacket(byte[]) -> populatePacket
    39:47:void setFilamentInfo(double,double) -> setFilamentInfo
celtech.roboxbase.comms.tx.SetEFeedRateMultiplier -> celtech.roboxbase.comms.tx.SetEFeedRateMultiplier:
    17:18:void <init>() -> <init>
    28:29:boolean populatePacket(byte[]) -> populatePacket
    38:45:void setFeedRateMultiplier(double) -> setFeedRateMultiplier
celtech.roboxbase.comms.tx.SetEFilamentInfo -> celtech.roboxbase.comms.tx.SetEFilamentInfo:
    17:18:void <init>() -> <init>
    28:29:boolean populatePacket(byte[]) -> populatePacket
    39:47:void setFilamentInfo(double,double) -> setFilamentInfo
celtech.roboxbase.comms.tx.SetReelLEDColour -> celtech.roboxbase.comms.tx.SetReelLEDColour:
    15:16:void <init>() -> <init>
    26:27:boolean populatePacket(byte[]) -> populatePacket
    36:41:void setLEDColour(java.lang.String) -> setLEDColour
celtech.roboxbase.comms.tx.SetTemperatures -> celtech.roboxbase.comms.tx.SetTemperatures:
    17:18:void <init>() -> <init>
    28:29:boolean populatePacket(byte[]) -> populatePacket
    46:59:void setTemperatures(double,double,double,double,double,double,double) -> setTemperatures
celtech.roboxbase.comms.tx.StatusRequest -> celtech.roboxbase.comms.tx.StatusRequest:
    22:23:void <init>() -> <init>
    33:33:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.TxPacketTypeEnum -> celtech.roboxbase.comms.tx.TxPacketTypeEnum:
    celtech.roboxbase.comms.tx.TxPacketTypeEnum STATUS_REQUEST -> STATUS_REQUEST
    celtech.roboxbase.comms.tx.TxPacketTypeEnum EXECUTE_GCODE -> EXECUTE_GCODE
    celtech.roboxbase.comms.tx.TxPacketTypeEnum START_OF_DATA_FILE -> START_OF_DATA_FILE
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SEND_PRINT_FILE_START -> SEND_PRINT_FILE_START
    celtech.roboxbase.comms.tx.TxPacketTypeEnum DATA_FILE_CHUNK -> DATA_FILE_CHUNK
    celtech.roboxbase.comms.tx.TxPacketTypeEnum END_OF_DATA_FILE -> END_OF_DATA_FILE
    celtech.roboxbase.comms.tx.TxPacketTypeEnum INITIATE_PRINT -> INITIATE_PRINT
    celtech.roboxbase.comms.tx.TxPacketTypeEnum ABORT_PRINT -> ABORT_PRINT
    celtech.roboxbase.comms.tx.TxPacketTypeEnum PAUSE_RESUME_PRINT -> PAUSE_RESUME_PRINT
    celtech.roboxbase.comms.tx.TxPacketTypeEnum REPORT_ERRORS -> REPORT_ERRORS
    celtech.roboxbase.comms.tx.TxPacketTypeEnum RESET_ERRORS -> RESET_ERRORS
    celtech.roboxbase.comms.tx.TxPacketTypeEnum QUERY_FIRMWARE_VERSION -> QUERY_FIRMWARE_VERSION
    celtech.roboxbase.comms.tx.TxPacketTypeEnum UPDATE_FIRMWARE -> UPDATE_FIRMWARE
    celtech.roboxbase.comms.tx.TxPacketTypeEnum WRITE_PRINTER_ID -> WRITE_PRINTER_ID
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_PRINTER_ID -> READ_PRINTER_ID
    celtech.roboxbase.comms.tx.TxPacketTypeEnum WRITE_REEL_0_EEPROM -> WRITE_REEL_0_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum WRITE_REEL_1_EEPROM -> WRITE_REEL_1_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum WRITE_HEAD_EEPROM -> WRITE_HEAD_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_REEL_0_EEPROM -> READ_REEL_0_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_REEL_1_EEPROM -> READ_REEL_1_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_HEAD_EEPROM -> READ_HEAD_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum FORMAT_REEL_0_EEPROM -> FORMAT_REEL_0_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum FORMAT_REEL_1_EEPROM -> FORMAT_REEL_1_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum FORMAT_HEAD_EEPROM -> FORMAT_HEAD_EEPROM
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_AMBIENT_LED_COLOUR -> SET_AMBIENT_LED_COLOUR
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_REEL_LED_COLOUR -> SET_REEL_LED_COLOUR
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_TEMPERATURES -> SET_TEMPERATURES
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_E_FEED_RATE_MULTIPLIER -> SET_E_FEED_RATE_MULTIPLIER
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_D_FEED_RATE_MULTIPLIER -> SET_D_FEED_RATE_MULTIPLIER
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_E_FILAMENT_INFO -> SET_E_FILAMENT_INFO
    celtech.roboxbase.comms.tx.TxPacketTypeEnum SET_D_FILAMENT_INFO -> SET_D_FILAMENT_INFO
    celtech.roboxbase.comms.tx.TxPacketTypeEnum LIST_FILES -> LIST_FILES
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_SEND_FILE_REPORT -> READ_SEND_FILE_REPORT
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_HOURS_COUNTER -> READ_HOURS_COUNTER
    celtech.roboxbase.comms.tx.TxPacketTypeEnum READ_DEBUG_DATA -> READ_DEBUG_DATA
    byte commandByte -> commandByte
    int packetSize -> packetSize
    boolean containsLengthField -> containsLengthField
    celtech.roboxbase.comms.rx.RxPacketTypeEnum expectsResponse -> expectsResponse
    celtech.roboxbase.comms.tx.TxPacketTypeEnum[] $VALUES -> $VALUES
    9:9:celtech.roboxbase.comms.tx.TxPacketTypeEnum[] values() -> values
    9:9:celtech.roboxbase.comms.tx.TxPacketTypeEnum valueOf(java.lang.String) -> valueOf
    189:194:void <init>(java.lang.String,int,byte,int,boolean,celtech.roboxbase.comms.rx.RxPacketTypeEnum) -> <init>
    202:202:byte getCommandByte() -> getCommandByte
    211:211:int getPacketSize() -> getPacketSize
    220:220:boolean containsLengthField() -> containsLengthField
    229:229:celtech.roboxbase.comms.rx.RxPacketTypeEnum getExpectedResponse() -> getExpectedResponse
    239:250:celtech.roboxbase.comms.tx.TxPacketTypeEnum getEnumForCommand(byte) -> getEnumForCommand
    9:181:void <clinit>() -> <clinit>
celtech.roboxbase.comms.tx.UpdateFirmware -> celtech.roboxbase.comms.tx.UpdateFirmware:
    22:23:void <init>() -> <init>
    33:33:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.WriteHeadEEPROM -> celtech.roboxbase.comms.tx.WriteHeadEEPROM:
    java.lang.String headTypeCode -> headTypeCode
    java.lang.String headUniqueID -> headUniqueID
    float maximumTemperature -> maximumTemperature
    float thermistorBeta -> thermistorBeta
    float thermistorTCal -> thermistorTCal
    float nozzle1XOffset -> nozzle1XOffset
    float nozzle1YOffset -> nozzle1YOffset
    float nozzle1ZOffset -> nozzle1ZOffset
    float nozzle1BOffset -> nozzle1BOffset
    java.lang.String filament0ID -> filament0ID
    java.lang.String filament1ID -> filament1ID
    float nozzle2XOffset -> nozzle2XOffset
    float nozzle2YOffset -> nozzle2YOffset
    float nozzle2ZOffset -> nozzle2ZOffset
    float nozzle2BOffset -> nozzle2BOffset
    float lastFilamentTemperature0 -> lastFilamentTemperature0
    float lastFilamentTemperature1 -> lastFilamentTemperature1
    float hourCounter -> hourCounter
    36:37:void <init>() -> <init>
    47:100:void populateEEPROM(java.lang.String,java.lang.String,float,float,float,float,float,float,float,java.lang.String,java.lang.String,float,float,float,float,float,float,float) -> populateEEPROM
    124:215:void populateEEPROM(java.lang.String,java.lang.String,int,float,float,float,float,java.lang.String,float,java.lang.String,float,int,float,float,float,float,float,float,float,float) -> populateEEPROM
    220:262:byte[] toByteArray() -> toByteArray
    268:269:boolean populatePacket(byte[]) -> populatePacket
    274:274:java.lang.String getHeadTypeCode() -> getHeadTypeCode
    279:279:java.lang.String getHeadUniqueID() -> getHeadUniqueID
    284:284:float getMaximumTemperature() -> getMaximumTemperature
    289:289:float getThermistorBeta() -> getThermistorBeta
    294:294:float getThermistorTCal() -> getThermistorTCal
    299:299:float getNozzle1XOffset() -> getNozzle1XOffset
    304:304:float getNozzle1YOffset() -> getNozzle1YOffset
    309:309:float getNozzle1ZOffset() -> getNozzle1ZOffset
    314:314:float getNozzle1BOffset() -> getNozzle1BOffset
    319:319:float getNozzle2XOffset() -> getNozzle2XOffset
    324:324:float getNozzle2YOffset() -> getNozzle2YOffset
    329:329:float getNozzle2ZOffset() -> getNozzle2ZOffset
    334:334:float getNozzle2BOffset() -> getNozzle2BOffset
    339:339:float getLastFilamentTemperature0() -> getLastFilamentTemperature0
    344:344:float getLastFilamentTemperature1() -> getLastFilamentTemperature1
    349:349:java.lang.String getFilament0ID() -> getFilament0ID
    354:354:java.lang.String getFilament1ID() -> getFilament1ID
    359:359:float getHourCounter() -> getHourCounter
celtech.roboxbase.comms.tx.WritePrinterID -> celtech.roboxbase.comms.tx.WritePrinterID:
    int BYTES_FOR_NAME -> BYTES_FOR_NAME
    int BYTES_FOR_FIRST_PAD -> BYTES_FOR_FIRST_PAD
    int BYTES_FOR_SECOND_PAD -> BYTES_FOR_SECOND_PAD
    char[] firstPad -> firstPad
    char[] secondPad -> secondPad
    java.lang.String model -> model
    java.lang.String edition -> edition
    java.lang.String weekOfManufacture -> weekOfManufacture
    java.lang.String yearOfManufacture -> yearOfManufacture
    java.lang.String poNumber -> poNumber
    java.lang.String serialNumber -> serialNumber
    java.lang.String checkByte -> checkByte
    java.lang.String printerFriendlyName -> printerFriendlyName
    java.lang.String colourWebString -> colourWebString
    18:49:void <init>() -> <init>
    37:38:boolean populatePacket(byte[]) -> populatePacket
    68:108:void setIDAndColour(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setIDAndColour
    123:132:void populatePacket(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> populatePacket
    136:136:java.lang.String getModel() -> getModel
    141:141:java.lang.String getEdition() -> getEdition
    146:146:java.lang.String getWeekOfManufacture() -> getWeekOfManufacture
    151:151:java.lang.String getYearOfManufacture() -> getYearOfManufacture
    156:156:java.lang.String getPoNumber() -> getPoNumber
    161:161:java.lang.String getSerialNumber() -> getSerialNumber
    166:166:java.lang.String getCheckByte() -> getCheckByte
    171:171:java.lang.String getPrinterFriendlyName() -> getPrinterFriendlyName
    176:176:java.lang.String getColourWebString() -> getColourWebString
    181:182:void setCheckByte(java.lang.String) -> setCheckByte
    186:187:void setEdition(java.lang.String) -> setEdition
    191:192:void setModel(java.lang.String) -> setModel
    196:197:void setPoNumber(java.lang.String) -> setPoNumber
    201:202:void setPrinterColourWebString(java.lang.String) -> setPrinterColourWebString
    206:207:void setPrinterFriendlyName(java.lang.String) -> setPrinterFriendlyName
    211:212:void setSerialNumber(java.lang.String) -> setSerialNumber
    216:217:void setWeekOfManufacture(java.lang.String) -> setWeekOfManufacture
    221:222:void setYearOfManufacture(java.lang.String) -> setYearOfManufacture
celtech.roboxbase.comms.tx.WriteReel0EEPROM -> celtech.roboxbase.comms.tx.WriteReel0EEPROM:
    libertysystems.stenographer.Stenographer steno -> steno
    int FRIENDLY_NAME_LENGTH -> FRIENDLY_NAME_LENGTH
    int MATERIAL_TYPE_LENGTH -> MATERIAL_TYPE_LENGTH
    int DISPLAY_COLOUR_LENGTH -> DISPLAY_COLOUR_LENGTH
    int REEL_EEPROM_PADDING_LENGTH -> REEL_EEPROM_PADDING_LENGTH
    18:29:void <init>() -> <init>
    33:34:java.lang.String formatString(java.lang.String,int) -> formatString
    44:90:void populateEEPROM(java.lang.String,float,float,float,float,float,float,float,float,float,java.lang.String,celtech.roboxbase.MaterialType,java.lang.String) -> populateEEPROM
    95:137:byte[] toByteArray() -> toByteArray
    148:149:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.comms.tx.WriteReel1EEPROM -> celtech.roboxbase.comms.tx.WriteReel1EEPROM:
    libertysystems.stenographer.Stenographer steno -> steno
    int FRIENDLY_NAME_LENGTH -> FRIENDLY_NAME_LENGTH
    int MATERIAL_TYPE_LENGTH -> MATERIAL_TYPE_LENGTH
    int DISPLAY_COLOUR_LENGTH -> DISPLAY_COLOUR_LENGTH
    int REEL_EEPROM_PADDING_LENGTH -> REEL_EEPROM_PADDING_LENGTH
    18:29:void <init>() -> <init>
    33:34:java.lang.String formatString(java.lang.String,int) -> formatString
    44:90:void populateEEPROM(java.lang.String,float,float,float,float,float,float,float,float,float,java.lang.String,celtech.roboxbase.MaterialType,java.lang.String) -> populateEEPROM
    95:137:byte[] toByteArray() -> toByteArray
    148:149:boolean populatePacket(byte[]) -> populatePacket
celtech.roboxbase.configuration.BaseConfiguration -> celtech.roboxbase.configuration.a:
    libertysystems.stenographer.Stenographer steno -> G
    int NUMBER_OF_TEMPERATURE_POINTS_TO_KEEP -> a
    float maxTempToDisplayOnGraph -> b
    float minTempToDisplayOnGraph -> c
    float filamentDiameterToYieldVolumetricExtrusion -> d
    int maxPermittedTempDifferenceForPurge -> e
    java.lang.String applicationName -> H
    java.lang.String applicationShortName -> I
    libertysystems.configuration.Configuration configuration -> J
    java.lang.String applicationInstallDirectory -> K
    java.lang.String commonApplicationDirectory -> L
    java.lang.String applicationConfigComponent -> f
    java.lang.String userStorageDirectory -> M
    java.lang.String userStorageDirectoryComponent -> g
    java.lang.String applicationStorageDirectory -> N
    java.lang.String applicationStorageDirectoryComponent -> h
    java.lang.String printerFileDirectory -> O
    java.lang.String printerDirectoryPath -> i
    java.lang.String printerFileExtension -> j
    java.lang.String headFileDirectory -> P
    java.lang.String headDirectoryPath -> k
    java.lang.String headFileExtension -> l
    java.lang.String modelStorageDirectoryPath -> m
    java.lang.String userTempDirectoryPath -> n
    java.lang.String userTempFileDirectory -> Q
    java.lang.String filamentDirectoryPath -> o
    java.lang.String filamentFileExtension -> p
    java.lang.String filamentFileDirectory -> R
    java.lang.String userFilamentFileDirectory -> S
    celtech.roboxbase.configuration.MachineType machineType -> T
    boolean autoRepairHeads -> U
    boolean autoRepairReels -> V
    java.util.Properties installationProperties -> W
    java.lang.String applicationVersion -> X
    java.lang.String applicationTitleAndVersion -> Y
    java.lang.String printFileSpoolDirectory -> Z
    java.lang.String printSpoolStorageDirectoryPath -> q
    int mmOfFilamentOnAReel -> r
    java.lang.String statisticsFileExtension -> s
    java.lang.String gcodeTempFileExtension -> t
    java.lang.String stlTempFileExtension -> u
    java.lang.String amfTempFileExtension -> v
    java.lang.String gcodePostProcessedFileHandle -> w
    java.lang.String printProfileFileExtension -> x
    java.lang.String customSettingsProfileName -> y
    java.lang.String draftSettingsProfileName -> z
    java.lang.String normalSettingsProfileName -> A
    java.lang.String fineSettingsProfileName -> B
    java.lang.String macroFileExtension -> C
    java.lang.String macroFileSubpath -> D
    java.lang.String printProfileFileDirectory -> aa
    java.lang.String userPrintProfileFileDirectory -> ab
    java.lang.String printProfileDirectoryPath -> E
    int maxPrintSpoolFiles -> F
    java.lang.String applicationLanguageRaw -> ac
    celtech.roboxbase.configuration.CoreMemory coreMemory -> ad
    java.util.Properties applicationMemoryProperties -> ae
    java.lang.String fileMemoryItem -> af
    java.util.Set applicationFeatures -> ag
    32:32:void <init>() -> <init>
    140:142:void initialise(java.lang.Class) -> a
    146:147:void shutdown() -> a
    159:163:void setInstallationProperties(java.util.Properties,java.lang.String,java.lang.String) -> a
    167:215:celtech.roboxbase.configuration.MachineType getMachineType() -> b
    220:244:java.lang.String getApplicationName() -> c
    249:274:java.lang.String getApplicationShortName() -> d
    279:346:java.lang.String getApplicationInstallDirectory(java.lang.Class) -> b
    351:356:java.lang.String getCommonApplicationDirectory() -> e
    361:366:java.lang.String getApplicationHeadDirectory() -> f
    371:376:java.lang.String getApplicationPrinterDirectory() -> g
    381:381:boolean isAutoRepairHeads() -> h
    386:387:void setAutoRepairHeads(boolean) -> a
    391:391:boolean isAutoRepairReels() -> i
    396:397:void setAutoRepairReels(boolean) -> b
    401:426:void loadProjectProperties() -> y
    430:440:java.lang.String getApplicationVersion() -> j
    445:446:void setTitleAndVersion(java.lang.String) -> a
    450:450:java.lang.String getTitleAndVersion() -> k
    455:468:java.lang.String getPrintSpoolDirectory() -> l
    473:536:java.lang.String getUserStorageDirectory() -> m
    541:547:java.lang.String getApplicationPrintProfileDirectory() -> n
    552:562:java.lang.String getUserPrintProfileDirectory() -> o
    567:577:java.lang.String getUserTempDirectory() -> p
    582:607:java.lang.String getApplicationStorageDirectory() -> q
    612:612:java.lang.String getApplicationModelDirectory() -> r
    617:617:java.util.Properties getInstallationProperties() -> s
    622:627:java.lang.String getApplicationFilamentDirectory() -> t
    632:641:java.lang.String getUserFilamentDirectory() -> u
    646:657:java.lang.String getApplicationInstallationLanguage() -> v
    662:662:java.lang.String getBinariesDirectory() -> w
    667:668:void enableApplicationFeature(celtech.roboxbase.ApplicationFeature) -> a
    672:673:void disableApplicationFeature(celtech.roboxbase.ApplicationFeature) -> b
    677:677:boolean isApplicationFeatureEnabled(celtech.roboxbase.ApplicationFeature) -> c
    682:716:void loadApplicationMemoryProperties() -> z
    720:724:java.lang.String getApplicationMemory(java.lang.String) -> b
    729:736:void setApplicationMemory(java.lang.String,java.lang.String) -> a
    743:772:void writeApplicationMemory() -> x
    35:136:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.CoreMemory -> celtech.roboxbase.configuration.b:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.configuration.CoreMemory instance -> c
    com.fasterxml.jackson.databind.ObjectMapper mapper -> d
    java.lang.String filename -> e
    celtech.roboxbase.configuration.CoreMemoryData coreMemoryData -> a
    java.io.File coreMemoryFile -> f
    20:50:void <init>() -> <init>
    54:59:celtech.roboxbase.configuration.CoreMemory getInstance() -> a
    64:72:void writeNewCoreMemory(java.io.File) -> a
    78:83:void writeCoreMemory() -> f
    87:87:java.util.List getActiveRoboxRoots() -> b
    92:94:void clearActiveRoboxRoots() -> c
    98:103:void activateRoboxRoot(celtech.roboxbase.comms.DetectedServer) -> a
    107:109:void deactivateRoboxRoot(celtech.roboxbase.comms.DetectedServer) -> b
    113:113:float getLastPrinterFirmwareVersion() -> d
    118:120:void setLastPrinterFirmwareVersion(float) -> a
    124:124:java.lang.String getLastPrinterSerial() -> e
    129:131:void setLastPrinterSerial(java.lang.String) -> a
    21:22:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.CoreMemoryData -> celtech.roboxbase.configuration.CoreMemoryData:
    java.lang.String lastPrinterSerial -> lastPrinterSerial
    float lastPrinterFirmwareVersion -> lastPrinterFirmwareVersion
    java.util.List activeRoboxRoots -> activeRoboxRoots
    14:20:void <init>() -> <init>
    24:24:java.lang.String getLastPrinterSerial() -> getLastPrinterSerial
    29:30:void setLastPrinterSerial(java.lang.String) -> setLastPrinterSerial
    34:34:float getLastPrinterFirmwareVersion() -> getLastPrinterFirmwareVersion
    39:40:void setLastPrinterFirmwareVersion(float) -> setLastPrinterFirmwareVersion
    44:44:java.util.List getActiveRoboxRoots() -> getActiveRoboxRoots
    49:50:void setActiveRoboxRoots(java.util.List) -> setActiveRoboxRoots
celtech.roboxbase.configuration.Filament -> celtech.roboxbase.configuration.Filament:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.beans.property.BooleanProperty mutable -> mutable
    javafx.beans.property.StringProperty friendlyFilamentName -> friendlyFilamentName
    javafx.beans.property.ObjectProperty material -> material
    javafx.beans.property.StringProperty filamentID -> filamentID
    javafx.beans.property.StringProperty category -> category
    javafx.beans.property.FloatProperty diameter -> diameter
    javafx.beans.property.FloatProperty filamentMultiplier -> filamentMultiplier
    javafx.beans.property.FloatProperty feedRateMultiplier -> feedRateMultiplier
    javafx.beans.property.IntegerProperty requiredAmbientTemperature -> requiredAmbientTemperature
    javafx.beans.property.IntegerProperty requiredFirstLayerBedTemperature -> requiredFirstLayerBedTemperature
    javafx.beans.property.IntegerProperty requiredBedTemperature -> requiredBedTemperature
    javafx.beans.property.IntegerProperty requiredFirstLayerNozzleTemperature -> requiredFirstLayerNozzleTemperature
    javafx.beans.property.IntegerProperty requiredNozzleTemperature -> requiredNozzleTemperature
    javafx.beans.property.ObjectProperty displayColour -> displayColour
    javafx.beans.property.FloatProperty remainingFilament -> remainingFilament
    javafx.beans.property.FloatProperty costGBPPerKG -> costGBPPerKG
    javafx.beans.property.IntegerProperty defaultLength_m -> defaultLength_m
    java.util.Comparator BY_MATERIAL -> BY_MATERIAL
    java.util.Comparator BY_NAME -> BY_NAME
    int charsToDiscardInIDComparisonFinal -> charsToDiscardInIDComparisonFinal
    int charsToRetainInIDComparisonInitial -> charsToRetainInIDComparisonInitial
    65:97:int compareByFilamentID(celtech.roboxbase.configuration.Filament,celtech.roboxbase.configuration.Filament) -> a
    35:137:void <init>(java.lang.String,celtech.roboxbase.MaterialType,java.lang.String,java.lang.String,float,float,float,int,int,int,int,int,javafx.scene.paint.Color,float,int,boolean) -> <init>
    35:154:void <init>(celtech.roboxbase.comms.rx.ReelEEPROMDataResponse) -> <init>
    35:171:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    176:191:int hashCode() -> hashCode
    197:222:boolean equals(java.lang.Object) -> equals
    227:227:java.lang.String getFileName() -> a
    232:232:javafx.beans.property.StringProperty getFriendlyFilamentNameProperty() -> b
    237:237:java.lang.String getFriendlyFilamentName() -> c
    242:242:java.lang.String getFilamentID() -> d
    247:247:javafx.beans.property.StringProperty getFilamentIDProperty() -> e
    252:252:java.lang.String getCategory() -> f
    257:257:javafx.beans.property.StringProperty getCategoryProperty() -> g
    262:262:javafx.beans.property.ObjectProperty getMaterialProperty() -> h
    267:267:celtech.roboxbase.MaterialType getMaterial() -> i
    272:272:javafx.beans.property.FloatProperty getDiameterProperty() -> j
    277:277:float getDiameter() -> k
    282:282:javafx.beans.property.FloatProperty getFilamentMultiplierProperty() -> l
    287:287:float getFilamentMultiplier() -> m
    292:292:javafx.beans.property.FloatProperty getFeedRateMultiplierProperty() -> n
    297:297:float getFeedRateMultiplier() -> o
    302:302:javafx.beans.property.IntegerProperty getAmbientTemperatureProperty() -> p
    307:307:int getAmbientTemperature() -> q
    312:312:javafx.beans.property.IntegerProperty getFirstLayerBedTemperatureProperty() -> r
    317:317:int getFirstLayerBedTemperature() -> s
    322:322:javafx.beans.property.IntegerProperty getBedTemperatureProperty() -> t
    327:327:int getBedTemperature() -> u
    332:332:javafx.beans.property.IntegerProperty getFirstLayerNozzleTemperatureProperty() -> v
    337:337:int getFirstLayerNozzleTemperature() -> w
    342:342:javafx.beans.property.IntegerProperty getNozzleTemperatureProperty() -> x
    347:347:int getNozzleTemperature() -> y
    352:352:javafx.beans.property.ObjectProperty getDisplayColourProperty() -> z
    357:357:javafx.scene.paint.Color getDisplayColour() -> A
    362:362:javafx.beans.property.FloatProperty getRemainingFilamentProperty() -> B
    367:367:float getRemainingFilament() -> C
    372:373:void setFriendlyFilamentName(java.lang.String) -> a
    377:379:void setFilamentID(java.lang.String) -> b
    383:384:void setCategory(java.lang.String) -> c
    388:389:void setMaterial(celtech.roboxbase.MaterialType) -> a
    393:394:void setFilamentDiameter(float) -> a
    398:399:void setFilamentMultiplier(float) -> b
    403:404:void setFeedRateMultiplier(float) -> c
    408:409:void setAmbientTemperature(int) -> a
    413:414:void setFirstLayerBedTemperature(int) -> b
    418:419:void setBedTemperature(int) -> c
    423:424:void setFirstLayerNozzleTemperature(int) -> d
    428:429:void setNozzleTemperature(int) -> e
    433:434:void setDisplayColour(javafx.scene.paint.Color) -> a
    438:439:void setRemainingFilament(float) -> d
    443:443:boolean isMutable() -> D
    448:449:void setMutable(boolean) -> a
    453:453:javafx.beans.property.BooleanProperty getMutableProperty() -> E
    458:458:javafx.beans.property.IntegerProperty getDefaultLength_mProperty() -> F
    463:463:int getDefaultLength_m() -> G
    468:469:void setDefaultLength_m(int) -> f
    476:481:java.lang.String getLongFriendlyName() -> H
    489:491:double getWeightForLength(double) -> a
    499:500:double getWeightForVolume(double) -> b
    508:510:double getCostForVolume(double) -> c
    516:523:java.lang.String toString() -> toString
    528:532:java.lang.String generateUserFilamentID() -> I
    538:556:celtech.roboxbase.configuration.Filament clone() -> J
    561:561:float getCostGBPPerKG() -> K
    566:567:void setCostGBPPerKG(float) -> e
    576:584:void detectAndSetMutable() -> L
    29:29:java.lang.Object clone() -> clone
    55:55:int lambda$static$0(celtech.roboxbase.configuration.Filament,celtech.roboxbase.configuration.Filament) -> b
    32:61:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.FilamentFileFilter -> celtech.roboxbase.configuration.c:
    10:10:void <init>() -> <init>
    21:27:boolean accept(java.io.File) -> accept
celtech.roboxbase.configuration.HeadFileFilter -> celtech.roboxbase.configuration.d:
    10:10:void <init>() -> <init>
    21:26:boolean accept(java.io.File) -> accept
celtech.roboxbase.configuration.MachineType -> celtech.roboxbase.configuration.MachineType:
    celtech.roboxbase.configuration.MachineType WINDOWS_95 -> WINDOWS_95
    celtech.roboxbase.configuration.MachineType WINDOWS -> WINDOWS
    celtech.roboxbase.configuration.MachineType MAC -> MAC
    celtech.roboxbase.configuration.MachineType LINUX_X86 -> LINUX_X86
    celtech.roboxbase.configuration.MachineType LINUX_X64 -> LINUX_X64
    celtech.roboxbase.configuration.MachineType UNKNOWN -> UNKNOWN
    celtech.roboxbase.configuration.MachineType[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.configuration.MachineType[] values() -> values
    7:7:celtech.roboxbase.configuration.MachineType valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:38:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.Macro -> celtech.roboxbase.configuration.Macro:
    celtech.roboxbase.configuration.Macro CANCEL_PRINT -> CANCEL_PRINT
    celtech.roboxbase.configuration.Macro HOME_ALL -> HOME_ALL
    celtech.roboxbase.configuration.Macro LEVEL_GANTRY -> LEVEL_GANTRY
    celtech.roboxbase.configuration.Macro LEVEL_GANTRY_TWO_POINTS -> LEVEL_GANTRY_TWO_POINTS
    celtech.roboxbase.configuration.Macro SPEED_TEST -> SPEED_TEST
    celtech.roboxbase.configuration.Macro TEST_X -> TEST_X
    celtech.roboxbase.configuration.Macro TEST_Y -> TEST_Y
    celtech.roboxbase.configuration.Macro TEST_Z -> TEST_Z
    celtech.roboxbase.configuration.Macro LEVEL_Y -> LEVEL_Y
    celtech.roboxbase.configuration.Macro CLEAN_NOZZLE -> CLEAN_NOZZLE
    celtech.roboxbase.configuration.Macro PURGE_MATERIAL -> PURGE_MATERIAL
    celtech.roboxbase.configuration.Macro EJECT_STUCK_MATERIAL -> EJECT_STUCK_MATERIAL
    celtech.roboxbase.configuration.Macro REMOVE_HEAD -> REMOVE_HEAD
    celtech.roboxbase.configuration.Macro MINI_PURGE -> MINI_PURGE
    celtech.roboxbase.configuration.Macro BEFORE_NOZZLE_CALIBRATION -> BEFORE_NOZZLE_CALIBRATION
    celtech.roboxbase.configuration.Macro COMMISSIONING_XMOTOR -> COMMISSIONING_XMOTOR
    celtech.roboxbase.configuration.Macro COMMISSIONING_YMOTOR -> COMMISSIONING_YMOTOR
    celtech.roboxbase.configuration.Macro COMMISSIONING_ZMOTOR_DIRECTION -> COMMISSIONING_ZMOTOR_DIRECTION
    celtech.roboxbase.configuration.Macro COMMISSIONING_HEAD_FLUSH -> COMMISSIONING_HEAD_FLUSH
    celtech.roboxbase.configuration.Macro COMMISSIONING_EJECT_STUCK_MATERIAL -> COMMISSIONING_EJECT_STUCK_MATERIAL
    celtech.roboxbase.configuration.Macro COMMISSIONING_EJECT -> COMMISSIONING_EJECT
    celtech.roboxbase.configuration.Macro COMMISSIONING_ARTICULATE -> COMMISSIONING_ARTICULATE
    java.lang.String macroFileName -> macroFileName
    java.lang.String i18nKey -> i18nKey
    java.lang.String macroJobNumber -> macroJobNumber
    celtech.roboxbase.configuration.Macro[] $VALUES -> $VALUES
    10:10:celtech.roboxbase.configuration.Macro[] values() -> values
    10:10:celtech.roboxbase.configuration.Macro valueOf(java.lang.String) -> valueOf
    45:49:void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    53:53:java.lang.String getMacroFileName() -> getMacroFileName
    58:58:java.lang.String getFriendlyName() -> getFriendlyName
    63:64:java.lang.String getMacroJobNumber() -> getMacroJobNumber
    69:80:java.util.Optional getMacroForPrintJobID(java.lang.String) -> getMacroForPrintJobID
    10:36:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.OperatingVoltage -> celtech.roboxbase.configuration.OperatingVoltage:
    celtech.roboxbase.configuration.OperatingVoltage UNKNOWN -> UNKNOWN
    celtech.roboxbase.configuration.OperatingVoltage _240V -> _240V
    celtech.roboxbase.configuration.OperatingVoltage _110V -> _110V
    celtech.roboxbase.configuration.OperatingVoltage[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.configuration.OperatingVoltage[] values() -> values
    7:7:celtech.roboxbase.configuration.OperatingVoltage valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.PrintProfileFileFilter -> celtech.roboxbase.configuration.e:
    10:10:void <init>() -> <init>
    21:27:boolean accept(java.io.File) -> accept
celtech.roboxbase.configuration.PrinterFileFilter -> celtech.roboxbase.configuration.f:
    10:10:void <init>() -> <init>
    21:26:boolean accept(java.io.File) -> accept
celtech.roboxbase.configuration.SlicerType -> celtech.roboxbase.configuration.SlicerType:
    celtech.roboxbase.configuration.SlicerType Slic3r -> Slic3r
    celtech.roboxbase.configuration.SlicerType Cura -> Cura
    int enumPosition -> enumPosition
    celtech.roboxbase.configuration.SlicerType[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.configuration.SlicerType[] values() -> values
    7:7:celtech.roboxbase.configuration.SlicerType valueOf(java.lang.String) -> valueOf
    15:17:void <init>(java.lang.String,int,int) -> <init>
    25:25:int getEnumPosition() -> getEnumPosition
    35:46:celtech.roboxbase.configuration.SlicerType fromEnumPosition(int) -> fromEnumPosition
    52:52:java.lang.String toString() -> toString
    7:10:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.WindowsRegistry -> celtech.roboxbase.configuration.g:
    int KEY_READ -> a
    6:6:void <init>() -> <init>
    15:57:void currentMachine(java.lang.String) -> a
    62:110:java.lang.String currentUser(java.lang.String,java.lang.String) -> a
    116:122:byte[] toByteEncodedString(java.lang.String) -> b
celtech.roboxbase.configuration.datafileaccessors.FilamentContainer -> celtech.roboxbase.configuration.datafileaccessors.FilamentContainer:
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer instance -> instance
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.collections.ObservableList appFilamentList -> appFilamentList
    javafx.collections.ObservableList userFilamentList -> userFilamentList
    javafx.collections.ObservableList completeFilamentList -> completeFilamentList
    javafx.collections.ObservableList completeFilamentListNoDuplicates -> completeFilamentListNoDuplicates
    javafx.collections.ObservableMap completeFilamentMapByID -> completeFilamentMapByID
    javafx.collections.ObservableMap completeFilamentNameByID -> completeFilamentNameByID
    celtech.roboxbase.configuration.Filament createNewFilament -> createNewFilament
    celtech.roboxbase.configuration.Filament UNKNOWN_FILAMENT -> UNKNOWN_FILAMENT
    java.lang.String nameProperty -> nameProperty
    java.lang.String materialProperty -> materialProperty
    java.lang.String filamentIDProperty -> filamentIDProperty
    java.lang.String categoryProperty -> categoryProperty
    java.lang.String diameterProperty -> diameterProperty
    java.lang.String costGBPPerKGProperty -> costGBPPerKGProperty
    java.lang.String filamentMultiplierProperty -> filamentMultiplierProperty
    java.lang.String feedRateMultiplierProperty -> feedRateMultiplierProperty
    java.lang.String ambientTempProperty -> ambientTempProperty
    java.lang.String firstLayerBedTempProperty -> firstLayerBedTempProperty
    java.lang.String bedTempProperty -> bedTempProperty
    java.lang.String firstLayerNozzleTempProperty -> firstLayerNozzleTempProperty
    java.lang.String nozzleTempProperty -> nozzleTempProperty
    java.lang.String displayColourProperty -> displayColourProperty
    java.lang.String defaultLengthProperty -> defaultLengthProperty
    java.util.List filamentDatabaseChangesListeners -> filamentDatabaseChangesListeners
    boolean $assertionsDisabled -> $assertionsDisabled
    36:90:void <init>() -> <init>
    94:98:celtech.roboxbase.configuration.datafileaccessors.FilamentContainer getInstance() -> getInstance
    103:104:void addFilamentDatabaseChangesListener(celtech.roboxbase.configuration.datafileaccessors.FilamentContainer$FilamentDatabaseChangesListener) -> addFilamentDatabaseChangesListener
    108:109:void removeFilamentDatabaseChangesListener(celtech.roboxbase.configuration.datafileaccessors.FilamentContainer$FilamentDatabaseChangesListener) -> removeFilamentDatabaseChangesListener
    113:117:void notifyFilamentDatabaseChangesListeners(java.lang.String) -> notifyFilamentDatabaseChangesListeners
    121:122:java.lang.String constructFilePath(celtech.roboxbase.configuration.Filament) -> constructFilePath
    128:167:void loadFilamentData() -> loadFilamentData
    171:294:java.util.ArrayList ingestFilaments(java.io.File[],boolean) -> ingestFilaments
    302:307:java.lang.String suggestNonDuplicateName(java.lang.String) -> suggestNonDuplicateName
    317:334:void saveFilament(celtech.roboxbase.configuration.Filament) -> saveFilament
    338:343:void addNewFilament(celtech.roboxbase.configuration.Filament) -> addNewFilament
    347:396:void saveEditedUserFilament(celtech.roboxbase.configuration.Filament) -> saveEditedUserFilament
    400:414:void deleteFilament(celtech.roboxbase.configuration.Filament) -> deleteFilament
    418:436:void deleteFilamentUsingOldName(celtech.roboxbase.configuration.Filament) -> deleteFilamentUsingOldName
    440:449:boolean isFilamentIDValid(java.lang.String) -> isFilamentIDValid
    454:462:boolean isFilamentIDInDatabase(java.lang.String) -> isFilamentIDInDatabase
    467:478:celtech.roboxbase.configuration.Filament getFilamentByID(java.lang.String) -> getFilamentByID
    486:490:void addFilamentToUserFilamentList(celtech.roboxbase.configuration.Filament) -> addFilamentToUserFilamentList
    494:494:javafx.collections.ObservableList getCompleteFilamentList() -> getCompleteFilamentList
    499:499:javafx.collections.ObservableList getUserFilamentList() -> getUserFilamentList
    504:504:javafx.collections.ObservableList getAppFilamentList() -> getAppFilamentList
    512:513:void reload() -> reload
    305:306:void lambda$suggestNonDuplicateName$0(java.util.List,celtech.roboxbase.configuration.Filament) -> lambda$suggestNonDuplicateName$0
    30:46:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.datafileaccessors.FilamentContainer$FilamentDatabaseChangesListener -> celtech.roboxbase.configuration.datafileaccessors.FilamentContainer$FilamentDatabaseChangesListener:
    void whenFilamentChanges(java.lang.String) -> whenFilamentChanges
celtech.roboxbase.configuration.datafileaccessors.HeadContainer -> celtech.roboxbase.configuration.datafileaccessors.HeadContainer:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.datafileaccessors.HeadContainer instance -> instance
    javafx.collections.ObservableList completeHeadList -> completeHeadList
    javafx.collections.ObservableMap completeHeadMap -> completeHeadMap
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    java.lang.String defaultHeadID -> defaultHeadID
    celtech.roboxbase.printerControl.model.Head$HeadType defaultHeadType -> defaultHeadType
    34:40:void <init>() -> <init>
    44:61:java.util.ArrayList ingestHeads(java.io.File[]) -> ingestHeads
    66:71:celtech.roboxbase.configuration.datafileaccessors.HeadContainer getInstance() -> getInstance
    76:82:celtech.roboxbase.configuration.fileRepresentation.HeadFile getHeadByID(java.lang.String) -> getHeadByID
    87:92:javafx.collections.ObservableList getCompleteHeadList() -> getCompleteHeadList
    25:31:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.datafileaccessors.PrinterContainer -> celtech.roboxbase.configuration.datafileaccessors.PrinterContainer:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.datafileaccessors.PrinterContainer instance -> instance
    javafx.collections.ObservableList completePrinterList -> completePrinterList
    javafx.collections.ObservableMap completePrinterMap -> completePrinterMap
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    java.lang.String defaultPrinterID -> defaultPrinterID
    33:41:void <init>() -> <init>
    45:62:java.util.ArrayList ingestPrinters(java.io.File[]) -> ingestPrinters
    67:72:celtech.roboxbase.configuration.datafileaccessors.PrinterContainer getInstance() -> getInstance
    77:83:celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile getPrinterByID(java.lang.String) -> getPrinterByID
    88:93:javafx.collections.ObservableList getCompletePrinterList() -> getCompletePrinterList
    24:28:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.datafileaccessors.SlicerMappingsContainer -> celtech.roboxbase.configuration.datafileaccessors.SlicerMappingsContainer:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.datafileaccessors.SlicerMappingsContainer instance -> instance
    celtech.roboxbase.configuration.fileRepresentation.SlicerMappings slicerMappingsFile -> slicerMappingsFile
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    java.lang.String defaultSlicerMappingsFileName -> defaultSlicerMappingsFileName
    28:54:void <init>() -> <init>
    62:67:celtech.roboxbase.configuration.datafileaccessors.SlicerMappingsContainer getInstance() -> getInstance
    76:81:celtech.roboxbase.configuration.fileRepresentation.SlicerMappings getSlicerMappings() -> getSlicerMappings
    20:23:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer -> celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer instance -> instance
    javafx.collections.ObservableList appProfileList -> appProfileList
    javafx.collections.ObservableList userProfileList -> userProfileList
    javafx.collections.ObservableList completeProfileList -> completeProfileList
    javafx.collections.ObservableMap profileMap -> profileMap
    com.fasterxml.jackson.databind.ObjectMapper mapper -> mapper
    java.util.List changesListeners -> changesListeners
    boolean $assertionsDisabled -> $assertionsDisabled
    49:49:java.util.Set getProfileNames() -> getProfileNames
    53:56:void <init>() -> <init>
    60:60:java.lang.String getSettingsKey(java.lang.String,java.lang.String) -> getSettingsKey
    65:65:java.lang.String constructFilePath(java.lang.String,java.lang.String) -> constructFilePath
    71:93:void loadProfileData() -> loadProfileData
    97:129:java.util.ArrayList ingestProfiles(java.io.File[]) -> ingestProfiles
    135:161:void convertToCurrentVersion(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> convertToCurrentVersion
    165:184:void saveProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> saveProfile
    192:212:void doSaveAndChangeUserProfileName(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> doSaveAndChangeUserProfileName
    219:231:java.lang.String getOriginalProfileName(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> getOriginalProfileName
    241:245:void doAddNewUserProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> doAddNewUserProfile
    254:260:void doSaveEditedUserProfile(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> doSaveEditedUserProfile
    264:278:void deleteUserProfile(java.lang.String,java.lang.String) -> deleteUserProfile
    282:287:celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer getInstance() -> getInstance
    292:297:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile getSettings(java.lang.String,java.lang.String) -> getSettings
    302:307:javafx.collections.ObservableList getCompleteProfileList() -> getCompleteProfileList
    312:317:javafx.collections.ObservableList getUserProfileList() -> getUserProfileList
    322:327:javafx.collections.ObservableList getApplicationProfileList() -> getApplicationProfileList
    332:333:boolean applicationProfileListContainsProfile(java.lang.String) -> applicationProfileListContainsProfile
    338:339:void addChangesListener(celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer$SlicerParametersChangesListener) -> addChangesListener
    343:344:void removeChangesListener(celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer$SlicerParametersChangesListener) -> removeChangesListener
    351:352:void reload() -> reload
    333:333:boolean lambda$applicationProfileListContainsProfile$0(java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> lambda$applicationProfileListContainsProfile$0
    26:45:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer$SlicerParametersChangesListener -> celtech.roboxbase.configuration.datafileaccessors.SlicerParametersContainer$SlicerParametersChangesListener:
    void whenSlicerParametersSaved(java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> whenSlicerParametersSaved
    void whenSlicerParametersDeleted(java.lang.String) -> whenSlicerParametersDeleted
celtech.roboxbase.configuration.fileRepresentation.HeadFile -> celtech.roboxbase.configuration.fileRepresentation.HeadFile:
    int version -> version
    java.lang.String typeCode -> typeCode
    celtech.roboxbase.printerControl.model.Head$HeadType type -> type
    celtech.roboxbase.printerControl.model.Head$ValveType valves -> valves
    java.util.List nozzleHeaters -> nozzleHeaters
    java.util.List nozzles -> nozzles
    15:24:void <init>() -> <init>
    28:28:celtech.roboxbase.printerControl.model.Head$HeadType getType() -> getType
    33:34:void setType(celtech.roboxbase.printerControl.model.Head$HeadType) -> setType
    38:39:void setValves(celtech.roboxbase.printerControl.model.Head$ValveType) -> setValves
    43:43:celtech.roboxbase.printerControl.model.Head$ValveType getValves() -> getValves
    48:48:int getVersion() -> getVersion
    53:54:void setVersion(int) -> setVersion
    58:58:java.lang.String getTypeCode() -> getTypeCode
    63:64:void setTypeCode(java.lang.String) -> setTypeCode
    68:68:java.util.List getNozzleHeaters() -> getNozzleHeaters
    73:74:void setNozzleHeaters(java.util.List) -> setNozzleHeaters
    78:78:java.util.List getNozzles() -> getNozzles
    83:84:void setNozzles(java.util.List) -> setNozzles
    89:89:java.lang.String toString() -> toString
    95:105:java.util.Optional getNozzleNumberForExtruderNumber(int) -> getNozzleNumberForExtruderNumber
celtech.roboxbase.configuration.fileRepresentation.NozzleData -> celtech.roboxbase.configuration.fileRepresentation.NozzleData:
    float diameter -> diameter
    float defaultXOffset -> defaultXOffset
    float minXOffset -> minXOffset
    float maxXOffset -> maxXOffset
    float defaultYOffset -> defaultYOffset
    float minYOffset -> minYOffset
    float maxYOffset -> maxYOffset
    float defaultZOffset -> defaultZOffset
    float minZOffset -> minZOffset
    float maxZOffset -> maxZOffset
    float defaultBOffset -> defaultBOffset
    float minBOffset -> minBOffset
    float maxBOffset -> maxBOffset
    java.lang.String associatedExtruder -> associatedExtruder
    7:7:void <init>() -> <init>
    27:27:float getDiameter() -> getDiameter
    32:33:void setDiameter(float) -> setDiameter
    37:37:float getDefaultXOffset() -> getDefaultXOffset
    42:43:void setDefaultXOffset(float) -> setDefaultXOffset
    47:47:float getMinXOffset() -> getMinXOffset
    52:53:void setMinXOffset(float) -> setMinXOffset
    57:57:float getMaxXOffset() -> getMaxXOffset
    62:63:void setMaxXOffset(float) -> setMaxXOffset
    67:67:float getDefaultYOffset() -> getDefaultYOffset
    72:73:void setDefaultYOffset(float) -> setDefaultYOffset
    77:77:float getMinYOffset() -> getMinYOffset
    82:83:void setMinYOffset(float) -> setMinYOffset
    87:87:float getMaxYOffset() -> getMaxYOffset
    92:93:void setMaxYOffset(float) -> setMaxYOffset
    97:97:float getDefaultZOffset() -> getDefaultZOffset
    102:103:void setDefaultZOffset(float) -> setDefaultZOffset
    107:107:float getMinZOffset() -> getMinZOffset
    112:113:void setMinZOffset(float) -> setMinZOffset
    117:117:float getMaxZOffset() -> getMaxZOffset
    122:123:void setMaxZOffset(float) -> setMaxZOffset
    127:127:float getDefaultBOffset() -> getDefaultBOffset
    132:133:void setDefaultBOffset(float) -> setDefaultBOffset
    137:137:float getMinBOffset() -> getMinBOffset
    142:143:void setMinBOffset(float) -> setMinBOffset
    147:147:float getMaxBOffset() -> getMaxBOffset
    152:153:void setMaxBOffset(float) -> setMaxBOffset
    157:157:java.lang.String getAssociatedExtruder() -> getAssociatedExtruder
    162:163:void setAssociatedExtruder(java.lang.String) -> setAssociatedExtruder
celtech.roboxbase.configuration.fileRepresentation.NozzleHeaterData -> celtech.roboxbase.configuration.fileRepresentation.NozzleHeaterData:
    int maximum_temperature_C -> maximum_temperature_C
    float beta -> beta
    float tcal -> tcal
    7:7:void <init>() -> <init>
    16:16:int getMaximum_temperature_C() -> getMaximum_temperature_C
    21:22:void setMaximum_temperature_C(int) -> setMaximum_temperature_C
    26:26:float getBeta() -> getBeta
    31:32:void setBeta(float) -> setBeta
    36:36:float getTcal() -> getTcal
    41:42:void setTcal(float) -> setTcal
celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile -> celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile:
    int version -> version
    java.lang.String typeCode -> typeCode
    java.lang.String friendlyName -> friendlyName
    java.util.List editions -> editions
    java.util.List compatibleHeads -> compatibleHeads
    int printVolumeWidth -> printVolumeWidth
    int printVolumeDepth -> printVolumeDepth
    int printVolumeHeight -> printVolumeHeight
    10:13:void <init>() -> <init>
    24:24:int getVersion() -> getVersion
    29:30:void setVersion(int) -> setVersion
    34:34:java.lang.String getTypeCode() -> getTypeCode
    39:40:void setTypeCode(java.lang.String) -> setTypeCode
    44:44:java.lang.String getFriendlyName() -> getFriendlyName
    49:50:void setFriendlyName(java.lang.String) -> setFriendlyName
    54:54:java.util.List getEditions() -> getEditions
    59:60:void setEditions(java.util.List) -> setEditions
    64:64:java.util.List getCompatibleHeads() -> getCompatibleHeads
    69:70:void setCompatibleHeads(java.util.List) -> setCompatibleHeads
    74:74:int getPrintVolumeWidth() -> getPrintVolumeWidth
    79:80:void setPrintVolumeWidth(int) -> setPrintVolumeWidth
    84:84:int getPrintVolumeDepth() -> getPrintVolumeDepth
    89:90:void setPrintVolumeDepth(int) -> setPrintVolumeDepth
    94:94:int getPrintVolumeHeight() -> getPrintVolumeHeight
    99:100:void setPrintVolumeHeight(int) -> setPrintVolumeHeight
celtech.roboxbase.configuration.fileRepresentation.PrinterEdition -> celtech.roboxbase.configuration.fileRepresentation.PrinterEdition:
    java.lang.String typeCode -> typeCode
    java.lang.String friendlyName -> friendlyName
    7:7:void <init>() -> <init>
    14:14:java.lang.String getTypeCode() -> getTypeCode
    19:20:void setTypeCode(java.lang.String) -> setTypeCode
    24:24:java.lang.String getFriendlyName() -> getFriendlyName
    29:30:void setFriendlyName(java.lang.String) -> setFriendlyName
celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides -> celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides:
    libertysystems.stenographer.Stenographer steno -> steno
    javafx.beans.property.StringProperty customSettingsName -> customSettingsName
    javafx.beans.property.ObjectProperty printQuality -> printQuality
    javafx.beans.property.BooleanProperty dataChanged -> dataChanged
    int brimOverride -> brimOverride
    float fillDensityOverride -> fillDensityOverride
    javafx.beans.property.BooleanProperty printSupportOverride -> printSupportOverride
    javafx.beans.property.BooleanProperty printSupportGapEnabledOverride -> printSupportGapEnabledOverride
    javafx.beans.property.ObjectProperty printSupportTypeOverride -> printSupportTypeOverride
    boolean raftOverride -> raftOverride
    boolean spiralPrintOverride -> spiralPrintOverride
    27:72:void <init>() -> <init>
    76:77:void toggleDataChanged() -> toggleDataChanged
    81:81:javafx.beans.property.ReadOnlyBooleanProperty getDataChanged() -> getDataChanged
    86:91:void setPrintQuality(celtech.roboxbase.services.slicer.PrintQualityEnumeration) -> setPrintQuality
    95:95:celtech.roboxbase.services.slicer.PrintQualityEnumeration getPrintQuality() -> getPrintQuality
    100:100:javafx.beans.property.ObjectProperty printQualityProperty() -> printQualityProperty
    105:110:void setSettingsName(java.lang.String) -> setSettingsName
    114:114:java.lang.String getSettingsName() -> getSettingsName
    119:119:javafx.beans.property.StringProperty getSettingsNameProperty() -> getSettingsNameProperty
    124:149:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile getSettings(java.lang.String) -> getSettings
    160:173:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile applyOverrides(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> applyOverrides
    178:178:int getBrimOverride() -> getBrimOverride
    183:188:void setBrimOverride(int) -> setBrimOverride
    192:192:float getFillDensityOverride() -> getFillDensityOverride
    197:202:void setFillDensityOverride(float) -> setFillDensityOverride
    206:206:boolean getPrintSupportOverride() -> getPrintSupportOverride
    211:211:javafx.beans.property.BooleanProperty getPrintSupportOverrideProperty() -> getPrintSupportOverrideProperty
    216:218:void setPrintSupportOverride(boolean) -> setPrintSupportOverride
    222:222:boolean getPrintSupportGapEnabledOverride() -> getPrintSupportGapEnabledOverride
    227:227:javafx.beans.property.BooleanProperty getPrintSupportGapEnabledOverrideProperty() -> getPrintSupportGapEnabledOverrideProperty
    232:234:void setPrintSupportGapEnabledOverride(boolean) -> setPrintSupportGapEnabledOverride
    238:238:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType getPrintSupportTypeOverride() -> getPrintSupportTypeOverride
    243:243:javafx.beans.property.ObjectProperty getPrintSupportTypeOverrideProperty() -> getPrintSupportTypeOverrideProperty
    248:253:void setPrintSupportTypeOverride(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType) -> setPrintSupportTypeOverride
    257:257:boolean getRaftOverride() -> getRaftOverride
    262:267:void setRaftOverride(boolean) -> setRaftOverride
    271:271:boolean getSpiralPrintOverride() -> getSpiralPrintOverride
    276:281:void setSpiralPrintOverride(boolean) -> setSpiralPrintOverride
    24:24:javafx.beans.property.StringProperty access$000(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> access$000
    24:24:void access$100(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> access$100
celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides$1 -> celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides$1:
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides this$0 -> this$0
    53:53:void <init>(celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides) -> <init>
    59:64:void whenSlicerParametersSaved(java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> whenSlicerParametersSaved
    69:69:void whenSlicerParametersDeleted(java.lang.String) -> whenSlicerParametersDeleted
celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides$2 -> celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides$2:
    int[] $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration -> $SwitchMap$celtech$roboxbase$services$slicer$PrintQualityEnumeration
    125:125:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.fileRepresentation.SlicerMappingData -> celtech.roboxbase.configuration.fileRepresentation.SlicerMappingData:
    java.util.ArrayList defaults -> defaults
    java.util.HashMap mappingData -> mappingData
    10:10:void <init>() -> <init>
    17:17:java.util.ArrayList getDefaults() -> getDefaults
    22:23:void setDefaults(java.util.ArrayList) -> setDefaults
    27:27:java.util.HashMap getMappingData() -> getMappingData
    32:33:void setMappingData(java.util.HashMap) -> setMappingData
celtech.roboxbase.configuration.fileRepresentation.SlicerMappings -> celtech.roboxbase.configuration.fileRepresentation.SlicerMappings:
    java.util.Map mappings -> mappings
    10:10:void <init>() -> <init>
    17:17:java.util.Map getMappings() -> getMappings
    22:23:void setMappings(java.util.Map) -> setMappings
    27:41:boolean isMapped(celtech.roboxbase.configuration.SlicerType,java.lang.String) -> isMapped
celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile -> celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile:
    int version -> version
    java.lang.String profileName -> profileName
    java.lang.String headType -> headType
    celtech.roboxbase.configuration.SlicerType slicerOverride -> slicerOverride
    float firstLayerHeight_mm -> firstLayerHeight_mm
    float layerHeight_mm -> layerHeight_mm
    float fillDensity_normalised -> fillDensity_normalised
    celtech.roboxbase.configuration.slicer.FillPattern fillPattern -> fillPattern
    int fillEveryNLayers -> fillEveryNLayers
    int solidLayersAtTop -> solidLayersAtTop
    int solidLayersAtBottom -> solidLayersAtBottom
    int numberOfPerimeters -> numberOfPerimeters
    int brimWidth_mm -> brimWidth_mm
    boolean spiralPrint -> spiralPrint
    boolean supportGapEnabled -> supportGapEnabled
    float supportXYDistance_mm -> supportXYDistance_mm
    float supportZDistance_mm -> supportZDistance_mm
    float firstLayerExtrusionWidth_mm -> firstLayerExtrusionWidth_mm
    float perimeterExtrusionWidth_mm -> perimeterExtrusionWidth_mm
    float fillExtrusionWidth_mm -> fillExtrusionWidth_mm
    float solidFillExtrusionWidth_mm -> solidFillExtrusionWidth_mm
    float topSolidFillExtrusionWidth_mm -> topSolidFillExtrusionWidth_mm
    float supportExtrusionWidth_mm -> supportExtrusionWidth_mm
    java.util.ArrayList nozzleParameters -> nozzleParameters
    int firstLayerNozzle -> firstLayerNozzle
    int perimeterNozzle -> perimeterNozzle
    int fillNozzle -> fillNozzle
    int supportNozzle -> supportNozzle
    int supportInterfaceNozzle -> supportInterfaceNozzle
    int maxClosesBeforeNozzleReselect -> maxClosesBeforeNozzleReselect
    float zHopHeight -> zHopHeight
    float zHopDistance -> zHopDistance
    boolean generateSupportMaterial -> generateSupportMaterial
    int supportOverhangThreshold_degrees -> supportOverhangThreshold_degrees
    int forcedSupportForFirstNLayers -> forcedSupportForFirstNLayers
    celtech.roboxbase.configuration.slicer.SupportPattern supportPattern -> supportPattern
    float supportPatternSpacing_mm -> supportPatternSpacing_mm
    int supportPatternAngle_degrees -> supportPatternAngle_degrees
    int firstLayerSpeed_mm_per_s -> firstLayerSpeed_mm_per_s
    int perimeterSpeed_mm_per_s -> perimeterSpeed_mm_per_s
    int smallPerimeterSpeed_mm_per_s -> smallPerimeterSpeed_mm_per_s
    int externalPerimeterSpeed_mm_per_s -> externalPerimeterSpeed_mm_per_s
    int fillSpeed_mm_per_s -> fillSpeed_mm_per_s
    int solidFillSpeed_mm_per_s -> solidFillSpeed_mm_per_s
    int topSolidFillSpeed_mm_per_s -> topSolidFillSpeed_mm_per_s
    int supportSpeed_mm_per_s -> supportSpeed_mm_per_s
    int bridgeSpeed_mm_per_s -> bridgeSpeed_mm_per_s
    int gapFillSpeed_mm_per_s -> gapFillSpeed_mm_per_s
    int interfaceSpeed_mm_per_s -> interfaceSpeed_mm_per_s
    boolean enableCooling -> enableCooling
    int minFanSpeed_percent -> minFanSpeed_percent
    int maxFanSpeed_percent -> maxFanSpeed_percent
    int bridgeFanSpeed_percent -> bridgeFanSpeed_percent
    int disableFanFirstNLayers -> disableFanFirstNLayers
    int coolIfLayerTimeLessThan_secs -> coolIfLayerTimeLessThan_secs
    int slowDownIfLayerTimeLessThan_secs -> slowDownIfLayerTimeLessThan_secs
    int minPrintSpeed_mm_per_s -> minPrintSpeed_mm_per_s
    boolean printRaft -> printRaft
    float raftBaseLinewidth_mm -> raftBaseLinewidth_mm
    float raftAirGapLayer0_mm -> raftAirGapLayer0_mm
    int interfaceLayers -> interfaceLayers
    float raftBaseThickness_mm -> raftBaseThickness_mm
    java.util.List propertyChangeListeners -> propertyChangeListeners
    18:139:void <init>() -> <init>
    143:143:java.lang.String getProfileKey() -> getProfileKey
    148:149:void addPropertyChangeListener(java.beans.PropertyChangeListener) -> addPropertyChangeListener
    153:154:void removePropertyChangeListener(java.beans.PropertyChangeListener) -> removePropertyChangeListener
    158:158:int getVersion() -> getVersion
    163:165:void setVersion(int) -> setVersion
    169:169:java.lang.String getProfileName() -> getProfileName
    174:176:void setProfileName(java.lang.String) -> setProfileName
    180:180:java.lang.String getHeadType() -> getHeadType
    185:187:void setHeadType(java.lang.String) -> setHeadType
    191:191:celtech.roboxbase.configuration.SlicerType getSlicerOverride() -> getSlicerOverride
    196:198:void setSlicerOverride(celtech.roboxbase.configuration.SlicerType) -> setSlicerOverride
    202:202:float getFirstLayerHeight_mm() -> getFirstLayerHeight_mm
    207:209:void setFirstLayerHeight_mm(float) -> setFirstLayerHeight_mm
    213:213:float getLayerHeight_mm() -> getLayerHeight_mm
    218:220:void setLayerHeight_mm(float) -> setLayerHeight_mm
    224:224:float getFillDensity_normalised() -> getFillDensity_normalised
    229:235:void setFillDensity_normalised(float) -> setFillDensity_normalised
    239:239:celtech.roboxbase.configuration.slicer.FillPattern getFillPattern() -> getFillPattern
    244:246:void setFillPattern(celtech.roboxbase.configuration.slicer.FillPattern) -> setFillPattern
    250:250:int getFillEveryNLayers() -> getFillEveryNLayers
    255:257:void setFillEveryNLayers(int) -> setFillEveryNLayers
    261:261:int getSolidLayersAtTop() -> getSolidLayersAtTop
    266:268:void setSolidLayersAtTop(int) -> setSolidLayersAtTop
    272:272:int getSolidLayersAtBottom() -> getSolidLayersAtBottom
    277:279:void setSolidLayersAtBottom(int) -> setSolidLayersAtBottom
    283:283:int getNumberOfPerimeters() -> getNumberOfPerimeters
    288:290:void setNumberOfPerimeters(int) -> setNumberOfPerimeters
    294:294:int getBrimWidth_mm() -> getBrimWidth_mm
    299:305:void setBrimWidth_mm(int) -> setBrimWidth_mm
    309:309:boolean getSpiralPrint() -> getSpiralPrint
    314:316:void setSpiralPrint(boolean) -> setSpiralPrint
    320:320:float getFirstLayerExtrusionWidth_mm() -> getFirstLayerExtrusionWidth_mm
    325:327:void setFirstLayerExtrusionWidth_mm(float) -> setFirstLayerExtrusionWidth_mm
    331:331:float getPerimeterExtrusionWidth_mm() -> getPerimeterExtrusionWidth_mm
    336:338:void setPerimeterExtrusionWidth_mm(float) -> setPerimeterExtrusionWidth_mm
    342:342:float getFillExtrusionWidth_mm() -> getFillExtrusionWidth_mm
    347:349:void setFillExtrusionWidth_mm(float) -> setFillExtrusionWidth_mm
    353:353:float getSolidFillExtrusionWidth_mm() -> getSolidFillExtrusionWidth_mm
    358:360:void setSolidFillExtrusionWidth_mm(float) -> setSolidFillExtrusionWidth_mm
    364:364:float getTopSolidFillExtrusionWidth_mm() -> getTopSolidFillExtrusionWidth_mm
    369:371:void setTopSolidFillExtrusionWidth_mm(float) -> setTopSolidFillExtrusionWidth_mm
    375:375:float getSupportExtrusionWidth_mm() -> getSupportExtrusionWidth_mm
    380:382:void setSupportExtrusionWidth_mm(float) -> setSupportExtrusionWidth_mm
    386:386:java.util.ArrayList getNozzleParameters() -> getNozzleParameters
    391:393:void setNozzleParameters(java.util.ArrayList) -> setNozzleParameters
    397:397:int getFirstLayerNozzle() -> getFirstLayerNozzle
    402:404:void setFirstLayerNozzle(int) -> setFirstLayerNozzle
    408:408:int getPerimeterNozzle() -> getPerimeterNozzle
    413:415:void setPerimeterNozzle(int) -> setPerimeterNozzle
    419:419:int getFillNozzle() -> getFillNozzle
    424:426:void setFillNozzle(int) -> setFillNozzle
    430:430:int getSupportNozzle() -> getSupportNozzle
    435:437:void setSupportNozzle(int) -> setSupportNozzle
    441:441:int getSupportInterfaceNozzle() -> getSupportInterfaceNozzle
    446:448:void setSupportInterfaceNozzle(int) -> setSupportInterfaceNozzle
    452:452:boolean getGenerateSupportMaterial() -> getGenerateSupportMaterial
    457:463:void setGenerateSupportMaterial(boolean) -> setGenerateSupportMaterial
    467:467:boolean getPrintRaft() -> getPrintRaft
    472:478:void setPrintRaft(boolean) -> setPrintRaft
    482:482:float getRaftBaseLinewidth_mm() -> getRaftBaseLinewidth_mm
    487:493:void setRaftBaseLinewidth_mm(float) -> setRaftBaseLinewidth_mm
    497:497:float getRaftAirGapLayer0_mm() -> getRaftAirGapLayer0_mm
    502:508:void setRaftAirGapLayer0_mm(float) -> setRaftAirGapLayer0_mm
    512:512:int getInterfaceLayers() -> getInterfaceLayers
    517:523:void setInterfaceLayers(int) -> setInterfaceLayers
    527:527:float getRaftBaseThickness_mm() -> getRaftBaseThickness_mm
    532:538:void setRaftBaseThickness_mm(float) -> setRaftBaseThickness_mm
    542:542:int getSupportOverhangThreshold_degrees() -> getSupportOverhangThreshold_degrees
    547:550:void setSupportOverhangThreshold_degrees(int) -> setSupportOverhangThreshold_degrees
    554:554:int getForcedSupportForFirstNLayers() -> getForcedSupportForFirstNLayers
    559:561:void setForcedSupportForFirstNLayers(int) -> setForcedSupportForFirstNLayers
    565:565:celtech.roboxbase.configuration.slicer.SupportPattern getSupportPattern() -> getSupportPattern
    570:572:void setSupportPattern(celtech.roboxbase.configuration.slicer.SupportPattern) -> setSupportPattern
    576:576:float getSupportPatternSpacing_mm() -> getSupportPatternSpacing_mm
    581:583:void setSupportPatternSpacing_mm(float) -> setSupportPatternSpacing_mm
    587:587:int getSupportPatternAngle_degrees() -> getSupportPatternAngle_degrees
    592:594:void setSupportPatternAngle_degrees(int) -> setSupportPatternAngle_degrees
    598:598:int getFirstLayerSpeed_mm_per_s() -> getFirstLayerSpeed_mm_per_s
    603:605:void setFirstLayerSpeed_mm_per_s(int) -> setFirstLayerSpeed_mm_per_s
    609:609:int getPerimeterSpeed_mm_per_s() -> getPerimeterSpeed_mm_per_s
    614:616:void setPerimeterSpeed_mm_per_s(int) -> setPerimeterSpeed_mm_per_s
    620:620:int getSmallPerimeterSpeed_mm_per_s() -> getSmallPerimeterSpeed_mm_per_s
    625:627:void setSmallPerimeterSpeed_mm_per_s(int) -> setSmallPerimeterSpeed_mm_per_s
    631:631:int getExternalPerimeterSpeed_mm_per_s() -> getExternalPerimeterSpeed_mm_per_s
    636:638:void setExternalPerimeterSpeed_mm_per_s(int) -> setExternalPerimeterSpeed_mm_per_s
    642:642:int getFillSpeed_mm_per_s() -> getFillSpeed_mm_per_s
    647:649:void setFillSpeed_mm_per_s(int) -> setFillSpeed_mm_per_s
    653:653:int getSolidFillSpeed_mm_per_s() -> getSolidFillSpeed_mm_per_s
    658:660:void setSolidFillSpeed_mm_per_s(int) -> setSolidFillSpeed_mm_per_s
    664:664:int getTopSolidFillSpeed_mm_per_s() -> getTopSolidFillSpeed_mm_per_s
    669:671:void setTopSolidFillSpeed_mm_per_s(int) -> setTopSolidFillSpeed_mm_per_s
    675:675:int getSupportSpeed_mm_per_s() -> getSupportSpeed_mm_per_s
    680:682:void setSupportSpeed_mm_per_s(int) -> setSupportSpeed_mm_per_s
    686:686:int getBridgeSpeed_mm_per_s() -> getBridgeSpeed_mm_per_s
    691:693:void setBridgeSpeed_mm_per_s(int) -> setBridgeSpeed_mm_per_s
    697:697:int getGapFillSpeed_mm_per_s() -> getGapFillSpeed_mm_per_s
    702:704:void setGapFillSpeed_mm_per_s(int) -> setGapFillSpeed_mm_per_s
    708:708:boolean getEnableCooling() -> getEnableCooling
    713:715:void setEnableCooling(boolean) -> setEnableCooling
    719:719:int getMinFanSpeed_percent() -> getMinFanSpeed_percent
    724:726:void setMinFanSpeed_percent(int) -> setMinFanSpeed_percent
    730:730:int getMaxFanSpeed_percent() -> getMaxFanSpeed_percent
    735:737:void setMaxFanSpeed_percent(int) -> setMaxFanSpeed_percent
    741:741:int getInterfaceSpeed_mm_per_s() -> getInterfaceSpeed_mm_per_s
    746:748:void setInterfaceSpeed_mm_per_s(int) -> setInterfaceSpeed_mm_per_s
    752:752:int getBridgeFanSpeed_percent() -> getBridgeFanSpeed_percent
    757:759:void setBridgeFanSpeed_percent(int) -> setBridgeFanSpeed_percent
    763:763:int getDisableFanFirstNLayers() -> getDisableFanFirstNLayers
    768:770:void setDisableFanFirstNLayers(int) -> setDisableFanFirstNLayers
    774:774:int getCoolIfLayerTimeLessThan_secs() -> getCoolIfLayerTimeLessThan_secs
    779:781:void setCoolIfLayerTimeLessThan_secs(int) -> setCoolIfLayerTimeLessThan_secs
    785:785:int getSlowDownIfLayerTimeLessThan_secs() -> getSlowDownIfLayerTimeLessThan_secs
    790:793:void setSlowDownIfLayerTimeLessThan_secs(int) -> setSlowDownIfLayerTimeLessThan_secs
    797:797:int getMinPrintSpeed_mm_per_s() -> getMinPrintSpeed_mm_per_s
    802:804:void setMinPrintSpeed_mm_per_s(int) -> setMinPrintSpeed_mm_per_s
    808:808:int getMaxClosesBeforeNozzleReselect() -> getMaxClosesBeforeNozzleReselect
    813:815:void setMaxClosesBeforeNozzleReselect(int) -> setMaxClosesBeforeNozzleReselect
    819:819:float getzHopHeight() -> getzHopHeight
    824:826:void setzHopHeight(float) -> setzHopHeight
    830:830:float getzHopDistance() -> getzHopDistance
    835:837:void setzHopDistance(float) -> setzHopDistance
    841:841:float getSupportXYDistance_mm() -> getSupportXYDistance_mm
    846:848:void setSupportXYDistance_mm(float) -> setSupportXYDistance_mm
    852:852:float getSupportZDistance_mm() -> getSupportZDistance_mm
    857:859:void setSupportZDistance_mm(float) -> setSupportZDistance_mm
    863:863:boolean getSupportGapEnabled() -> getSupportGapEnabled
    868:870:void setSupportGapEnabled(boolean) -> setSupportGapEnabled
    875:968:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile clone() -> clone
    973:978:void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object) -> firePropertyChange
    18:18:java.lang.Object clone() -> clone
    909:910:void lambda$clone$0(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.slicer.NozzleParameters) -> lambda$clone$0
celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType -> celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType:
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType MATERIAL_1 -> MATERIAL_1
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType MATERIAL_2 -> MATERIAL_2
    java.lang.String description -> description
    int extruderNumber -> extruderNumber
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType[] $VALUES -> $VALUES
    20:20:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType[] values() -> values
    20:20:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile$SupportType valueOf(java.lang.String) -> valueOf
    35:38:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    43:43:java.lang.String toString() -> toString
    48:48:int getExtruderNumber() -> getExtruderNumber
    20:29:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.slicer.ConfigWriter -> celtech.roboxbase.configuration.slicer.ConfigWriter:
    void generateConfigForSlicer(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,java.lang.String) -> generateConfigForSlicer
    void setPrintCentre(double,double) -> setPrintCentre
celtech.roboxbase.configuration.slicer.CuraConfigWriter -> celtech.roboxbase.configuration.slicer.CuraConfigWriter:
    18:20:void <init>() -> <init>
    25:27:void outputLine(java.io.FileWriter,java.lang.String,boolean) -> outputLine
    32:33:void outputLine(java.io.FileWriter,java.lang.String,int) -> outputLine
    38:39:void outputLine(java.io.FileWriter,java.lang.String,float) -> outputLine
    44:45:void outputLine(java.io.FileWriter,java.lang.String,java.lang.String) -> outputLine
    50:51:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.SlicerType) -> outputLine
    56:57:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.FillPattern) -> outputLine
    62:74:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.SupportPattern) -> outputLine
    79:79:void outputPrintCentre(java.io.FileWriter,float,float) -> outputPrintCentre
    84:86:void outputFilamentDiameter(java.io.FileWriter,float) -> outputFilamentDiameter
    91:91:void bringDataInBounds(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> bringDataInBounds
celtech.roboxbase.configuration.slicer.CuraConfigWriter$1 -> celtech.roboxbase.configuration.slicer.CuraConfigWriter$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$slicer$SupportPattern -> $SwitchMap$celtech$roboxbase$configuration$slicer$SupportPattern
    64:64:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.slicer.FillPattern -> celtech.roboxbase.configuration.slicer.FillPattern:
    celtech.roboxbase.configuration.slicer.FillPattern LINE -> LINE
    celtech.roboxbase.configuration.slicer.FillPattern RECTILINEAR -> RECTILINEAR
    celtech.roboxbase.configuration.slicer.FillPattern HONEYCOMB -> HONEYCOMB
    celtech.roboxbase.configuration.slicer.FillPattern CONCENTRIC -> CONCENTRIC
    java.lang.String displayText -> displayText
    celtech.roboxbase.configuration.slicer.FillPattern[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.configuration.slicer.FillPattern[] values() -> values
    7:7:celtech.roboxbase.configuration.slicer.FillPattern valueOf(java.lang.String) -> valueOf
    18:20:void <init>(java.lang.String,int,java.lang.String) -> <init>
    25:25:java.lang.String toString() -> toString
    7:13:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.slicer.NozzleParameters -> celtech.roboxbase.configuration.slicer.NozzleParameters:
    java.lang.String name -> name
    float closedPosition -> closedPosition
    float openPosition -> openPosition
    float diameter -> diameter
    float openOverVolume -> openOverVolume
    float preejectionVolume -> preejectionVolume
    float ejectionVolume -> ejectionVolume
    float openValueAtMidPoint -> openValueAtMidPoint
    float midPointPercent -> midPointPercent
    float wipeVolume -> wipeVolume
    float partialBMinimum -> partialBMinimum
    float travelBeforeForcedClose -> travelBeforeForcedClose
    27:28:void <init>() -> <init>
    32:32:java.lang.String getName() -> getName
    37:38:void setName(java.lang.String) -> setName
    42:42:float getClosedPosition() -> getClosedPosition
    47:48:void setClosedPosition(float) -> setClosedPosition
    52:52:float getOpenPosition() -> getOpenPosition
    57:58:void setOpenPosition(float) -> setOpenPosition
    62:62:float getDiameter() -> getDiameter
    67:68:void setDiameter(float) -> setDiameter
    72:72:float getOpenOverVolume() -> getOpenOverVolume
    77:78:void setOpenOverVolume(float) -> setOpenOverVolume
    82:82:float getPreejectionVolume() -> getPreejectionVolume
    87:88:void setPreejectionVolume(float) -> setPreejectionVolume
    92:92:float getEjectionVolume() -> getEjectionVolume
    97:98:void setEjectionVolume(float) -> setEjectionVolume
    102:102:float getOpenValueAtMidPoint() -> getOpenValueAtMidPoint
    107:108:void setOpenValueAtMidPoint(float) -> setOpenValueAtMidPoint
    112:112:float getMidPointPercent() -> getMidPointPercent
    117:118:void setMidPointPercent(float) -> setMidPointPercent
    122:122:float getWipeVolume() -> getWipeVolume
    127:128:void setWipeVolume(float) -> setWipeVolume
    132:132:float getPartialBMinimum() -> getPartialBMinimum
    137:138:void setPartialBMinimum(float) -> setPartialBMinimum
    142:142:float getTravelBeforeForcedClose() -> getTravelBeforeForcedClose
    147:148:void setTravelBeforeForcedClose(float) -> setTravelBeforeForcedClose
    153:171:celtech.roboxbase.configuration.slicer.NozzleParameters clone() -> clone
    7:7:java.lang.Object clone() -> clone
celtech.roboxbase.configuration.slicer.Slic3rConfigWriter -> celtech.roboxbase.configuration.slicer.Slic3rConfigWriter:
    18:20:void <init>() -> <init>
    25:30:void bringDataInBounds(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> bringDataInBounds
    35:37:void outputLine(java.io.FileWriter,java.lang.String,boolean) -> outputLine
    42:43:void outputLine(java.io.FileWriter,java.lang.String,int) -> outputLine
    48:49:void outputLine(java.io.FileWriter,java.lang.String,float) -> outputLine
    54:55:void outputLine(java.io.FileWriter,java.lang.String,java.lang.String) -> outputLine
    60:61:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.SlicerType) -> outputLine
    66:67:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.FillPattern) -> outputLine
    72:73:void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.SupportPattern) -> outputLine
    80:80:void outputPrintCentre(java.io.FileWriter,float,float) -> outputPrintCentre
    85:86:void outputFilamentDiameter(java.io.FileWriter,float) -> outputFilamentDiameter
celtech.roboxbase.configuration.slicer.SlicerConfigWriter -> celtech.roboxbase.configuration.slicer.SlicerConfigWriter:
    libertysystems.stenographer.Stenographer steno -> steno
    celtech.roboxbase.configuration.SlicerType slicerType -> slicerType
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    java.text.NumberFormat threeDPformatter -> threeDPformatter
    float centreX -> centreX
    float centreY -> centreY
    java.lang.String parameterDivider -> parameterDivider
    java.lang.String queryDivider -> queryDivider
    java.lang.String optionalDivider -> optionalDivider
    java.lang.String equivalenceDivider -> equivalenceDivider
    java.lang.String optionalNoOutput -> optionalNoOutput
    31:53:void <init>() -> <init>
    58:60:void generateConfigForSlicer(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,java.lang.String) -> generateConfigForSlicer
    66:225:void generateConfigForSlicerWithMappings(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerMappingData) -> generateConfigForSlicerWithMappings
    234:236:void setPrintCentre(float,float) -> setPrintCentre
    void outputLine(java.io.FileWriter,java.lang.String,boolean) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,int) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,float) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,java.lang.String) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.SlicerType) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.FillPattern) -> outputLine
    void outputLine(java.io.FileWriter,java.lang.String,celtech.roboxbase.configuration.slicer.SupportPattern) -> outputLine
    void outputPrintCentre(java.io.FileWriter,float,float) -> outputPrintCentre
    void outputFilamentDiameter(java.io.FileWriter,float) -> outputFilamentDiameter
    259:439:java.util.Optional applyValue(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,float,java.lang.String) -> applyValue
    444:452:java.lang.String extractTargetVariableName(java.lang.String) -> extractTargetVariableName
    457:462:java.lang.reflect.Method getVariableMethod(java.lang.String) -> getVariableMethod
    void bringDataInBounds(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile) -> bringDataInBounds
celtech.roboxbase.configuration.slicer.SlicerConfigWriterFactory -> celtech.roboxbase.configuration.slicer.SlicerConfigWriterFactory:
    9:9:void <init>() -> <init>
    14:25:celtech.roboxbase.configuration.slicer.SlicerConfigWriter getConfigWriter(celtech.roboxbase.configuration.SlicerType) -> getConfigWriter
celtech.roboxbase.configuration.slicer.SlicerConfigWriterFactory$1 -> celtech.roboxbase.configuration.slicer.SlicerConfigWriterFactory$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$SlicerType -> $SwitchMap$celtech$roboxbase$configuration$SlicerType
    16:16:void <clinit>() -> <clinit>
celtech.roboxbase.configuration.slicer.SupportPattern -> celtech.roboxbase.configuration.slicer.SupportPattern:
    celtech.roboxbase.configuration.slicer.SupportPattern RECTILINEAR -> RECTILINEAR
    celtech.roboxbase.configuration.slicer.SupportPattern RECTILINEAR_GRID -> RECTILINEAR_GRID
    celtech.roboxbase.configuration.slicer.SupportPattern PILLARS -> PILLARS
    celtech.roboxbase.configuration.slicer.SupportPattern HONEYCOMB -> HONEYCOMB
    java.lang.String displayText -> displayText
    celtech.roboxbase.configuration.slicer.SupportPattern[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.configuration.slicer.SupportPattern[] values() -> values
    7:7:celtech.roboxbase.configuration.slicer.SupportPattern valueOf(java.lang.String) -> valueOf
    18:20:void <init>(java.lang.String,int,java.lang.String) -> <init>
    25:25:java.lang.String toString() -> toString
    7:13:void <clinit>() -> <clinit>
celtech.roboxbase.crypto.CryptoFileStore -> h.a:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String storeFileName -> b
    int keySize -> c
    java.lang.String password -> d
    java.lang.String salt -> e
    int passwordIterations -> f
    javax.crypto.SecretKeyFactory factory -> g
    javax.crypto.SecretKey secretKey -> h
    javax.crypto.spec.SecretKeySpec secret -> i
    javax.crypto.Cipher cipher -> j
    boolean initialised -> k
    java.io.File storeFile -> l
    java.lang.String cipherType -> m
    javax.crypto.spec.IvParameterSpec iv -> n
    31:61:void <init>(java.lang.String,java.lang.String) -> <init>
    65:80:java.lang.String readFile() -> a
    85:97:void writeFile(java.lang.String) -> a
    101:130:java.lang.String encrypt(java.lang.String) -> b
    135:176:java.lang.String decrypt(java.lang.String) -> c
celtech.roboxbase.events.Event -> celtech.roboxbase.events.Event:
    celtech.roboxbase.events.Event PRINTER_CONNECTED -> PRINTER_CONNECTED
    celtech.roboxbase.events.Event PRINTER_DISCONNECTED -> PRINTER_DISCONNECTED
    celtech.roboxbase.events.Event PRINT_JOB_STARTED -> PRINT_JOB_STARTED
    celtech.roboxbase.events.Event PRINT_JOB_COMPLETE -> PRINT_JOB_COMPLETE
    boolean includeInAudit -> includeInAudit
    celtech.roboxbase.events.Event[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.events.Event[] values() -> values
    7:7:celtech.roboxbase.events.Event valueOf(java.lang.String) -> valueOf
    17:19:void <init>(java.lang.String,int,boolean) -> <init>
    23:23:boolean isIncludeInAudit() -> isIncludeInAudit
    7:12:void <clinit>() -> <clinit>
celtech.roboxbase.i18n.LanguageFileUTF8Control -> i.a:
    21:21:void <init>() -> <init>
    110:191:java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean) -> newBundle
    197:202:java.lang.String toResourceName0(java.lang.String,java.lang.String) -> a
    209:209:java.util.List getFormats(java.lang.String) -> getFormats
celtech.roboxbase.i18n.LanguageFileUTF8Control$1 -> i.a$1:
    boolean val$reloadFlag -> a
    java.lang.ClassLoader val$classLoader -> b
    java.lang.String val$resourceName -> c
    celtech.roboxbase.i18n.LanguageFileUTF8Control this$0 -> d
    147:147:void <init>(celtech.roboxbase.i18n.LanguageFileUTF8Control,boolean,java.lang.ClassLoader,java.lang.String) -> <init>
    150:169:java.io.InputStream run() -> a
    147:147:java.lang.Object run() -> run
celtech.roboxbase.i18n.LanguagePropertiesResourceBundle -> i.b:
    libertysystems.stenographer.Stenographer steno -> steno
    java.lang.String baseName -> baseName
    java.lang.String baseDirectory -> baseDirectory
    java.lang.String terminalDirectoryName -> terminalDirectoryName
    java.lang.String languageFolderName -> languageFolderName
    java.util.Map combined -> combined
    java.util.Set availableLocales -> availableLocales
    61:62:void <init>(java.lang.String) -> <init>
    74:75:void <init>(java.lang.String,java.lang.String) -> <init>
    23:108:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    113:118:java.lang.Object handleGetObject(java.lang.String) -> handleGetObject
    124:126:java.util.Enumeration getKeys() -> getKeys
    132:160:void addBundleData(java.lang.String,java.lang.String) -> addBundleData
    167:186:void loadBundlesOnce() -> loadBundlesOnce
    190:223:void addAvailableLocales(java.lang.String) -> addAvailableLocales
    227:227:java.util.Set getAvailableLocales() -> getAvailableLocales
celtech.roboxbase.i18n.ResourceBundleEnumeration -> i.c:
    java.util.Set set -> a
    java.util.Iterator iterator -> b
    java.util.Enumeration enumeration -> c
    java.lang.String next -> d
    33:48:void <init>(java.util.Set,java.util.Enumeration) -> <init>
    52:64:boolean hasMoreElements() -> hasMoreElements
    68:73:java.lang.String nextElement() -> a
    28:28:java.lang.Object nextElement() -> nextElement
celtech.roboxbase.i18n.UTF8Control -> i.d:
    libertysystems.stenographer.Stenographer steno -> a
    22:24:void <init>() -> <init>
    112:194:java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean) -> newBundle
    200:205:java.lang.String toResourceName0(java.lang.String,java.lang.String) -> a
celtech.roboxbase.i18n.UTF8Control$1 -> i.d$1:
    boolean val$reloadFlag -> a
    java.lang.ClassLoader val$classLoader -> b
    java.lang.String val$resourceName -> c
    celtech.roboxbase.i18n.UTF8Control this$0 -> d
    150:150:void <init>(celtech.roboxbase.i18n.UTF8Control,boolean,java.lang.ClassLoader,java.lang.String) -> <init>
    153:172:java.io.InputStream run() -> a
    150:150:java.lang.Object run() -> run
celtech.roboxbase.i18n.languagedata.LanguageData -> celtech.roboxbase.i18n.languagedata.LanguageData:
    15:16:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageDataFile -> celtech.roboxbase.i18n.languagedata.LanguageDataFile:
    7:7:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_de -> celtech.roboxbase.i18n.languagedata.LanguageData_de:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_en -> celtech.roboxbase.i18n.languagedata.LanguageData_en:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_es -> celtech.roboxbase.i18n.languagedata.LanguageData_es:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_fi -> celtech.roboxbase.i18n.languagedata.LanguageData_fi:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_fr -> celtech.roboxbase.i18n.languagedata.LanguageData_fr:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_ja -> celtech.roboxbase.i18n.languagedata.LanguageData_ja:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_ko -> celtech.roboxbase.i18n.languagedata.LanguageData_ko:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_ru -> celtech.roboxbase.i18n.languagedata.LanguageData_ru:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_sv -> celtech.roboxbase.i18n.languagedata.LanguageData_sv:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_zh_CN -> celtech.roboxbase.i18n.languagedata.LanguageData_zh_CN:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_zh_HK -> celtech.roboxbase.i18n.languagedata.LanguageData_zh_HK:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_zh_SG -> celtech.roboxbase.i18n.languagedata.LanguageData_zh_SG:
    11:12:void <init>() -> <init>
celtech.roboxbase.i18n.languagedata.LanguageData_zh_TW -> celtech.roboxbase.i18n.languagedata.LanguageData_zh_TW:
    11:12:void <init>() -> <init>
celtech.roboxbase.importers.twod.svg.BezierTools -> celtech.roboxbase.importers.twod.svg.a:
    int SEGMENTS_PER_CURVE -> a
    float MINIMUM_SQR_DISTANCE -> b
    float DIVISION_THRESHOLD -> c
    java.util.List controlPoints -> d
    int curveCount -> e
    14:31:void <init>() -> <init>
    39:42:void SetControlPoints(java.util.List) -> a
    49:49:java.util.List GetControlPoints() -> a
    160:167:org.apache.commons.math3.geometry.euclidean.twod.Vector2D CalculateBezierPoint(int,float) -> a
    176:194:java.util.List GetDrawingPoints0() -> b
    205:226:java.util.List GetDrawingPoints1() -> c
    236:251:java.util.List GetDrawingPoints2() -> d
    256:266:java.util.List FindDrawingPoints(int) -> a
    275:303:int FindDrawingPoints(int,float,float,java.util.List,int) -> a
    313:337:org.apache.commons.math3.geometry.euclidean.twod.Vector2D CalculateBezierPoint(float,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> a
celtech.roboxbase.importers.twod.svg.DragKnifeCompensator -> celtech.roboxbase.importers.twod.svg.DragKnifeCompensator:
    libertysystems.stenographer.Stenographer steno -> a
    21:24:void <init>() -> <init>
    28:113:java.util.List doCompensation(java.util.List,double) -> a
    127:150:java.util.List addZMoves(java.util.List) -> a
    155:165:double normaliseAngle(double) -> a
    173:194:java.util.List generateSwivel(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) -> a
celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition -> celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition:
    celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition UNKNOWN -> UNKNOWN
    celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition TRAVEL -> TRAVEL
    celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition CUT -> CUT
    celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition SWIVEL -> SWIVEL
    celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition[] $VALUES -> $VALUES
    116:116:celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition[] values() -> values
    116:116:celtech.roboxbase.importers.twod.svg.DragKnifeCompensator$StylusPosition valueOf(java.lang.String) -> valueOf
    116:116:void <init>(java.lang.String,int) -> <init>
    116:122:void <clinit>() -> <clinit>
celtech.roboxbase.importers.twod.svg.PathParserThing -> celtech.roboxbase.importers.twod.svg.b:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.List metaparts -> b
    26:32:void <init>(java.util.List) -> <init>
    37:38:void startPath() -> startPath
    43:44:void endPath() -> endPath
    49:51:void movetoRel(float,float) -> movetoRel
    56:57:void movetoAbs(float,float) -> movetoAbs
    62:63:void closePath() -> closePath
    68:76:void linetoRel(float,float) -> linetoRel
    81:82:void linetoAbs(float,float) -> linetoAbs
    87:95:void linetoHorizontalRel(float) -> linetoHorizontalRel
    100:101:void linetoHorizontalAbs(float) -> linetoHorizontalAbs
    106:114:void linetoVerticalRel(float) -> linetoVerticalRel
    119:120:void linetoVerticalAbs(float) -> linetoVerticalAbs
    125:135:void curvetoCubicRel(float,float,float,float,float,float) -> curvetoCubicRel
    140:141:void curvetoCubicAbs(float,float,float,float,float,float) -> curvetoCubicAbs
    146:146:void curvetoCubicSmoothRel(float,float,float,float) -> curvetoCubicSmoothRel
    153:153:void curvetoCubicSmoothAbs(float,float,float,float) -> curvetoCubicSmoothAbs
    160:161:void curvetoQuadraticRel(float,float,float,float) -> curvetoQuadraticRel
    166:167:void curvetoQuadraticAbs(float,float,float,float) -> curvetoQuadraticAbs
    172:172:void curvetoQuadraticSmoothRel(float,float) -> curvetoQuadraticSmoothRel
    179:179:void curvetoQuadraticSmoothAbs(float,float) -> curvetoQuadraticSmoothAbs
    186:186:void arcRel(float,float,float,boolean,boolean,float,float) -> arcRel
    193:193:void arcAbs(float,float,float,boolean,boolean,float,float) -> arcAbs
celtech.roboxbase.importers.twod.svg.PointParserThing -> celtech.roboxbase.importers.twod.svg.c:
    java.util.List metaparts -> a
    celtech.roboxbase.importers.twod.svg.metadata.SVGMetaPolygon tempMetaPoly -> b
    20:22:void <init>(java.util.List) -> <init>
    27:28:void startPoints() -> startPoints
    33:35:void point(float,float) -> point
    40:42:void endPoints() -> endPoints
celtech.roboxbase.importers.twod.svg.SVGConverterConfiguration -> celtech.roboxbase.importers.twod.svg.d:
    celtech.roboxbase.importers.twod.svg.SVGConverterConfiguration instance -> a
    int travelFeedrate -> b
    int cuttingFeedrate -> c
    int travelHeight -> d
    float swivelHeight -> e
    int contactHeight -> f
    int plungeFeedrate -> g
    int plungeDepth -> h
    int liftDepth -> i
    float xPointCoefficient -> j
    float yPointCoefficient -> k
    12:25:void <init>() -> <init>
    29:34:celtech.roboxbase.importers.twod.svg.SVGConverterConfiguration getInstance() -> a
    39:40:void setCuttingFeedrate(int) -> a
    44:44:int getCuttingFeedrate() -> b
    49:49:int getPlungeFeedrate() -> c
    54:55:void setPlungeFeedrate(int) -> b
    59:60:void setPlungeDepth(int) -> c
    64:64:int getPlungeDepth() -> d
    69:69:int getContactHeight() -> e
    74:74:float getSwivelHeight() -> f
    79:80:void setContactHeight(int) -> d
    84:84:int getTravelHeight() -> g
    89:90:void setTravelHeight(int) -> e
    94:95:void setLiftDepth(int) -> f
    99:99:int getLiftDepth() -> h
    104:105:void setTravelFeedrate(int) -> g
    109:109:int getTravelFeedrate() -> i
    114:115:void setxPointCoefficient(float) -> a
    119:119:float getxPointCoefficient() -> j
    124:125:void setyPointCoefficient(float) -> b
    129:129:float getyPointCoefficient() -> k
    10:10:void <clinit>() -> <clinit>
celtech.roboxbase.importers.twod.svg.SVGToStylusMetaEngine -> celtech.roboxbase.importers.twod.svg.e:
    libertysystems.stenographer.Stenographer steno -> a
    19:22:void <init>() -> <init>
    26:63:java.util.List convertToStylusMetaParts(java.util.List) -> a
celtech.roboxbase.importers.twod.svg.ShortestArc -> celtech.roboxbase.importers.twod.svg.f:
    libertysystems.stenographer.Stenographer steno -> a
    double stepValue -> b
    double angularDifference -> c
    double targetAngle -> d
    double currentAngle -> e
    13:49:void <init>(double,double) -> <init>
    53:53:double getAngularDifference() -> a
    58:58:double getStepValue() -> b
    63:63:double getCurrentAngle() -> c
    68:68:double getTargetAngle() -> d
celtech.roboxbase.importers.twod.svg.StylusMetaToGCodeEngine -> celtech.roboxbase.importers.twod.svg.g:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String outputFilename -> b
    java.util.List metaparts -> c
    23:32:void <init>(java.lang.String,java.util.List) -> <init>
    36:93:java.util.List generateGCode() -> a
celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult -> celtech.roboxbase.importers.twod.svg.metadata.a:
    java.util.List dragknifemetaparts -> a
    double resultantX -> b
    double resultantY -> c
    13:22:void <init>(double,double,java.util.List) -> <init>
    13:30:void <init>(double,double,celtech.roboxbase.importers.twod.svg.metadata.dragknife.StylusMetaPart) -> <init>
    34:34:java.util.List getDragKnifeMetaParts() -> a
    39:39:double getResultantX() -> b
    44:44:double getResultantY() -> c
celtech.roboxbase.importers.twod.svg.metadata.SVGClosePath -> celtech.roboxbase.importers.twod.svg.metadata.b:
    7:7:void <init>() -> <init>
    12:12:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGEndPath -> celtech.roboxbase.importers.twod.svg.metadata.c:
    7:7:void <init>() -> <init>
    12:12:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaArc -> celtech.roboxbase.importers.twod.svg.metadata.d:
    double rx -> a
    double ry -> b
    double x_axis_rotation -> c
    double x -> d
    double y -> e
    boolean largeArc -> f
    boolean sweep -> g
    boolean isAbsolute -> h
    25:34:void <init>(double,double,double,boolean,boolean,double,double,boolean) -> <init>
    38:38:double getX() -> a
    43:43:double getY() -> b
    48:48:boolean isIsAbsolute() -> c
    56:72:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaCubicBezier -> celtech.roboxbase.importers.twod.svg.metadata.e:
    double x1 -> a
    double y1 -> b
    double x2 -> c
    double y2 -> d
    double x3 -> e
    double y3 -> f
    boolean isAbsolute -> g
    27:35:void <init>(double,double,double,double,double,double,boolean) -> <init>
    41:50:void <init>(double,double,double,double) -> <init>
    54:54:double getX1() -> a
    59:59:double getY1() -> b
    64:64:double getX2() -> c
    69:69:double getY2() -> d
    74:74:double getX3() -> e
    79:79:double getY3() -> f
    84:84:boolean isIsAbsolute() -> g
    90:132:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaLine -> celtech.roboxbase.importers.twod.svg.metadata.f:
    double x -> a
    double y -> b
    boolean isAbsolute -> c
    16:20:void <init>(double,double,boolean) -> <init>
    24:24:double getX() -> a
    29:29:double getY() -> b
    34:34:boolean isIsAbsolute() -> c
    42:57:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaLineHorizontal -> celtech.roboxbase.importers.twod.svg.metadata.g:
    double x -> a
    boolean isAbsolute -> b
    15:18:void <init>(double,boolean) -> <init>
    22:22:double getX() -> a
    27:27:boolean isIsAbsolute() -> b
    35:49:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaLineVertical -> celtech.roboxbase.importers.twod.svg.metadata.h:
    double y -> a
    boolean isAbsolute -> b
    16:19:void <init>(double,boolean) -> <init>
    23:23:double getY() -> a
    28:28:boolean isIsAbsolute() -> b
    36:48:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaMove -> celtech.roboxbase.importers.twod.svg.metadata.i:
    double x -> a
    double y -> b
    boolean isAbsolute -> c
    16:20:void <init>(double,double,boolean) -> <init>
    24:24:double getX() -> a
    29:29:double getY() -> b
    34:34:boolean isIsAbsolute() -> c
    42:57:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaPart -> celtech.roboxbase.importers.twod.svg.metadata.j:
    9:9:void <init>() -> <init>
    celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaPolygon -> celtech.roboxbase.importers.twod.svg.metadata.k:
    java.util.List points -> a
    16:20:void <init>() -> <init>
    24:25:void addPoint(double,double) -> b
    29:29:java.util.List getPoints() -> a
    35:47:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaQuadraticBezier -> celtech.roboxbase.importers.twod.svg.metadata.l:
    double x1 -> a
    double y1 -> b
    double x2 -> c
    double y2 -> d
    boolean isAbsolute -> e
    27:33:void <init>(double,double,double,double,boolean) -> <init>
    39:45:void <init>(double,double,double,double) -> <init>
    49:49:double getX1() -> a
    54:54:double getY1() -> b
    59:59:double getX2() -> c
    64:64:double getY2() -> d
    69:69:boolean isIsAbsolute() -> e
    97:97:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGMetaUnhandled -> celtech.roboxbase.importers.twod.svg.metadata.m:
    java.lang.String message -> a
    14:16:void <init>(java.lang.String) -> <init>
    21:24:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.SVGStartPath -> celtech.roboxbase.importers.twod.svg.metadata.n:
    7:7:void <init>() -> <init>
    12:12:celtech.roboxbase.importers.twod.svg.metadata.RenderSVGToStylusMetaResult renderToDragKnifeMetaParts(double,double) -> a
celtech.roboxbase.importers.twod.svg.metadata.Units -> celtech.roboxbase.importers.twod.svg.metadata.Units:
    celtech.roboxbase.importers.twod.svg.metadata.Units UNKNOWN -> UNKNOWN
    celtech.roboxbase.importers.twod.svg.metadata.Units MM -> MM
    celtech.roboxbase.importers.twod.svg.metadata.Units IN -> IN
    celtech.roboxbase.importers.twod.svg.metadata.Units PX -> PX
    celtech.roboxbase.importers.twod.svg.metadata.Units[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.importers.twod.svg.metadata.Units[] values() -> values
    7:7:celtech.roboxbase.importers.twod.svg.metadata.Units valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    17:25:celtech.roboxbase.importers.twod.svg.metadata.Units getUnitType(java.lang.String) -> getUnitType
    7:13:void <clinit>() -> <clinit>
celtech.roboxbase.importers.twod.svg.metadata.dragknife.DragKnifeMetaCut -> j.a:
    18:19:void <init>() -> <init>
    23:24:void <init>(double,double,double,double,java.lang.String) -> <init>
    29:30:java.lang.String renderToGCode() -> a
    36:44:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.DragKnifeMetaLift -> j.b:
    18:19:void <init>() -> <init>
    23:24:void <init>(double,double,java.lang.String) -> <init>
    29:30:java.lang.String renderToGCode() -> a
    36:44:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.DragKnifeMetaPlunge -> j.c:
    18:19:void <init>() -> <init>
    23:24:void <init>(double,double,java.lang.String) -> <init>
    29:30:java.lang.String renderToGCode() -> a
    36:44:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.DragKnifeMetaTravel -> j.d:
    18:19:void <init>() -> <init>
    23:24:void <init>(double,double,double,double,java.lang.String) -> <init>
    29:30:java.lang.String renderToGCode() -> a
    36:45:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper -> j.e:
    int SMOOTH_ZONE -> a
    java.util.ArrayList segments -> b
    double totalLength -> c
    45:102:void <init>(com.sun.javafx.geom.Path2D,com.sun.javafx.geom.transform.BaseTransform,double) -> <init>
    118:158:javafx.geometry.Point2D getPosition2D(double,boolean) -> a
    167:172:double interpolate(double,double,double) -> a
    180:188:double normalize(double) -> b
    198:209:int findSegment(int,int,double) -> a
    41:41:double access$000(double) -> a
celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment -> j.e$a:
    celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment zeroSegment -> i
    boolean isMoveTo -> a
    double length -> b
    double accumLength -> c
    double toX -> d
    double toY -> e
    double rotateAngle -> f
    celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment prevSeg -> g
    celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment nextSeg -> h
    230:237:void <init>(boolean,double,double,double,double,double) -> <init>
    241:245:celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment getZeroSegment() -> a
    251:251:celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment newMoveTo(double,double,double) -> a
    256:270:celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment newLineTo(celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment,double,double) -> a
    275:280:celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment newClosePath(celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment,celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment) -> a
    285:288:void convertToClosePath(celtech.roboxbase.importers.twod.svg.metadata.dragknife.PathHelper$Segment) -> a
celtech.roboxbase.importers.twod.svg.metadata.dragknife.StylusCubicBezier -> j.f:
    double controlX1 -> a
    double controlY1 -> b
    double controlX2 -> c
    double controlY2 -> d
    18:19:void <init>() -> <init>
    27:32:void <init>(double,double,double,double,double,double,double,double,java.lang.String) -> <init>
    38:38:java.lang.String renderToGCode() -> a
    44:54:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.StylusMetaPart -> j.g:
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D start -> a
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D end -> b
    java.lang.String comment -> c
    java.text.NumberFormat threeDPformatter -> d
    31:40:void <init>(double,double,double,double,java.lang.String) -> <init>
    44:45:void setStart(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> a
    49:49:org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart() -> c
    54:55:void setEnd(org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> b
    59:59:org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd() -> d
    64:65:void setComment(java.lang.String) -> a
    69:69:java.lang.String getComment() -> e
    java.lang.String renderToGCode() -> a
    76:81:java.lang.String generateXYMove(double,double,int,java.lang.String) -> a
    86:90:java.lang.String generateXMove(double,int,java.lang.String) -> a
    95:99:java.lang.String generateYMove(double,int,java.lang.String) -> b
    104:108:java.lang.String generatePlunge(java.lang.String) -> b
    113:116:java.lang.String generateLift(java.lang.String) -> c
    121:141:java.util.List renderShapeToGCodeNode(javafx.scene.shape.Shape) -> a
    java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.StylusMetaUnhandled -> j.h:
    java.lang.String comment -> a
    17:19:void <init>() -> <init>
    23:25:void <init>(double,double,double,double,java.lang.String) -> <init>
    30:30:java.lang.String getComment() -> e
    36:36:java.lang.String renderToGCode() -> a
    42:42:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.importers.twod.svg.metadata.dragknife.StylusQuadraticBezier -> j.i:
    double controlX -> a
    double controlY -> b
    18:19:void <init>() -> <init>
    23:26:void <init>(double,double,double,double,double,double,java.lang.String) -> <init>
    32:32:java.lang.String renderToGCode() -> a
    38:46:java.util.List renderToGCodeNode() -> b
celtech.roboxbase.postprocessor.CannotCloseFromPerimeterException -> celtech.roboxbase.postprocessor.CannotCloseFromPerimeterException:
    11:12:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.DidntFindEventException -> celtech.roboxbase.postprocessor.DidntFindEventException:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.EventIndex -> celtech.roboxbase.postprocessor.a:
    int index -> a
    celtech.roboxbase.postprocessor.EventType eventType -> b
    14:21:void <init>(celtech.roboxbase.postprocessor.EventType,int) -> <init>
    25:25:int getIndex() -> a
    30:31:void setIndex(int) -> a
    35:35:celtech.roboxbase.postprocessor.EventType getEventType() -> b
    40:41:void setEventType(celtech.roboxbase.postprocessor.EventType) -> a
celtech.roboxbase.postprocessor.EventType -> celtech.roboxbase.postprocessor.EventType:
    celtech.roboxbase.postprocessor.EventType NOZZLE_OPEN_END -> NOZZLE_OPEN_END
    celtech.roboxbase.postprocessor.EventType PRE_CLOSE_STARVATION_START -> PRE_CLOSE_STARVATION_START
    celtech.roboxbase.postprocessor.EventType NOZZLE_CLOSE_START -> NOZZLE_CLOSE_START
    celtech.roboxbase.postprocessor.EventType NOZZLE_CLOSE_MIDPOINT -> NOZZLE_CLOSE_MIDPOINT
    celtech.roboxbase.postprocessor.EventType WIPE_START -> WIPE_START
    celtech.roboxbase.postprocessor.EventType[] $VALUES -> $VALUES
    13:13:celtech.roboxbase.postprocessor.EventType[] values() -> values
    13:13:celtech.roboxbase.postprocessor.EventType valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:15:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.ExtruderMix -> celtech.roboxbase.postprocessor.b:
    double eFactor -> a
    double dFactor -> b
    int layerNumber -> c
    15:30:void <init>(double,double,int) -> <init>
    38:38:double getEFactor() -> a
    47:48:void setEFactor(double) -> a
    56:56:double getDFactor() -> b
    65:66:void setDFactor(double) -> b
    74:74:int getLayerNumber() -> c
    83:84:void setLayerNumber(int) -> a
celtech.roboxbase.postprocessor.ExtrusionTask -> celtech.roboxbase.postprocessor.ExtrusionTask:
    celtech.roboxbase.postprocessor.ExtrusionTask Skirt -> Skirt
    celtech.roboxbase.postprocessor.ExtrusionTask Perimeter -> Perimeter
    celtech.roboxbase.postprocessor.ExtrusionTask ExternalPerimeter -> ExternalPerimeter
    celtech.roboxbase.postprocessor.ExtrusionTask Skin -> Skin
    celtech.roboxbase.postprocessor.ExtrusionTask Support -> Support
    celtech.roboxbase.postprocessor.ExtrusionTask Support_Interface -> Support_Interface
    celtech.roboxbase.postprocessor.ExtrusionTask Fill -> Fill
    java.lang.String genericLabelInGCode -> genericLabelInGCode
    java.lang.String slic3rLabelInGCode -> slic3rLabelInGCode
    java.lang.String curaLabelInGCode -> curaLabelInGCode
    celtech.roboxbase.postprocessor.ExtrusionTask[] $VALUES -> $VALUES
    9:9:celtech.roboxbase.postprocessor.ExtrusionTask[] values() -> values
    9:9:celtech.roboxbase.postprocessor.ExtrusionTask valueOf(java.lang.String) -> valueOf
    25:29:void <init>(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    37:37:java.lang.String getGenericLabel() -> getGenericLabel
    47:59:java.lang.String getSlicerSpecificLabel(celtech.roboxbase.configuration.SlicerType) -> getSlicerSpecificLabel
    70:94:celtech.roboxbase.postprocessor.ExtrusionTask lookupExtrusionTaskFromComment(celtech.roboxbase.configuration.SlicerType,java.lang.String) -> lookupExtrusionTaskFromComment
    9:18:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.ExtrusionTask$1 -> celtech.roboxbase.postprocessor.ExtrusionTask$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$SlicerType -> a
    49:49:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.FindEventDirection -> celtech.roboxbase.postprocessor.FindEventDirection:
    celtech.roboxbase.postprocessor.FindEventDirection FORWARDS_FROM_START -> FORWARDS_FROM_START
    celtech.roboxbase.postprocessor.FindEventDirection BACKWARDS_FROM_END -> BACKWARDS_FROM_END
    celtech.roboxbase.postprocessor.FindEventDirection[] $VALUES -> $VALUES
    13:13:celtech.roboxbase.postprocessor.FindEventDirection[] values() -> values
    13:13:celtech.roboxbase.postprocessor.FindEventDirection valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:15:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.GCodeFileParser -> celtech.roboxbase.postprocessor.c:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.ArrayList listeners -> b
    20:25:void <init>() -> <init>
    33:34:void addListener(celtech.roboxbase.postprocessor.GCodeTranslationEventHandler) -> a
    42:43:void removeListener(celtech.roboxbase.postprocessor.GCodeTranslationEventHandler) -> b
    55:455:void parse(java.lang.String,javafx.beans.property.DoubleProperty,celtech.roboxbase.configuration.SlicerType) -> a
celtech.roboxbase.postprocessor.GCodeFileParser$1 -> celtech.roboxbase.postprocessor.c$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$SlicerType -> a
    328:328:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.GCodeOutputWriter -> celtech.roboxbase.postprocessor.d:
    void close() -> a
    void flush() -> b
    int getNumberOfLinesOutput() -> c
    void newLine() -> d
    void writeOutput(java.lang.String) -> a
celtech.roboxbase.postprocessor.GCodeOutputWriterFactory -> celtech.roboxbase.postprocessor.e:
    celtech.roboxbase.postprocessor.GCodeOutputWriter create(java.lang.String) -> create
celtech.roboxbase.postprocessor.GCodeTranslationEventHandler -> celtech.roboxbase.postprocessor.f:
    void processEvent(celtech.roboxbase.postprocessor.events.GCodeParseEvent) -> a
    void unableToParse(java.lang.String) -> a
celtech.roboxbase.postprocessor.GCodeValidator -> celtech.roboxbase.postprocessor.g:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String gcodeFileToValidate -> b
    java.lang.String nozzleControlPatternString -> c
    java.lang.String extrusionPatternString -> d
    java.util.regex.Pattern nozzleControlPattern -> e
    java.util.regex.Pattern extrusionPattern -> f
    19:32:void <init>(java.lang.String) -> <init>
    36:130:boolean validate() -> a
celtech.roboxbase.postprocessor.LegacyExtrusionBuffer -> celtech.roboxbase.postprocessor.LegacyExtrusionBuffer:
    14:14:void <init>() -> <init>
    19:28:boolean containsExtrusionEvents() -> a
    33:43:int getNextExtrusionEventIndex(int) -> a
    48:58:int getNextEventIndex(int,java.lang.Class) -> a
    63:63:int getFinalExtrusionEventIndex() -> b
    68:81:int getPreviousExtrusionEventIndex(int) -> b
    86:99:int getExtrusionEventIndexBackwards(int) -> c
    104:117:int getPreviousMovementEventIndex(int) -> d
    122:133:int getPreviousEventIndex(int,java.lang.Class) -> b
    138:153:int getPreviousExtrusionTask(int,celtech.roboxbase.postprocessor.ExtrusionTask) -> a
    158:177:int getPreviousExtrusionTaskThisLayerOnly(int,celtech.roboxbase.postprocessor.ExtrusionTask) -> b
    182:206:int getStartOfExtrusionEventBoundaryIndex(int) -> e
    211:222:void insertSubsequentLayerTemperatures() -> c
celtech.roboxbase.postprocessor.LiveGCodeOutputWriter -> celtech.roboxbase.postprocessor.h:
    int numberOfLinesOutput -> a
    java.io.BufferedWriter fileWriter -> b
    15:22:void <init>(java.lang.String) -> <init>
    27:34:void writeOutput(java.lang.String) -> a
    39:40:void close() -> a
    45:46:void newLine() -> d
    51:52:void flush() -> b
    60:60:int getNumberOfLinesOutput() -> c
celtech.roboxbase.postprocessor.NoPerimeterToCloseOverException -> celtech.roboxbase.postprocessor.NoPerimeterToCloseOverException:
    11:12:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.NotEnoughAvailableExtrusionException -> celtech.roboxbase.postprocessor.NotEnoughAvailableExtrusionException:
    11:12:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.NozzleCloseSettingsError -> celtech.roboxbase.postprocessor.NozzleCloseSettingsError:
    17:18:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.NozzleProxy -> celtech.roboxbase.postprocessor.i:
    int nozzleReferenceNumber -> a
    celtech.roboxbase.configuration.slicer.NozzleParameters nozzleParameters -> b
    celtech.roboxbase.postprocessor.NozzleState state -> c
    double currentPosition -> d
    11:19:void <init>(celtech.roboxbase.configuration.slicer.NozzleParameters) -> <init>
    27:29:double closeNozzleFully() -> a
    38:40:double openNozzleFully() -> b
    45:45:int getNozzleReferenceNumber() -> c
    50:51:void setNozzleReferenceNumber(int) -> a
    55:55:celtech.roboxbase.configuration.slicer.NozzleParameters getNozzleParameters() -> d
    60:61:void setNozzleParameters(celtech.roboxbase.configuration.slicer.NozzleParameters) -> a
    65:65:celtech.roboxbase.postprocessor.NozzleState getState() -> e
    70:71:void setState(celtech.roboxbase.postprocessor.NozzleState) -> a
    75:75:double getCurrentPosition() -> f
    80:81:void setCurrentPosition(double) -> a
    85:85:boolean isOpen() -> g
    90:90:boolean isClosed() -> h
celtech.roboxbase.postprocessor.NozzleState -> celtech.roboxbase.postprocessor.NozzleState:
    celtech.roboxbase.postprocessor.NozzleState CLOSED -> CLOSED
    celtech.roboxbase.postprocessor.NozzleState CLOSING -> CLOSING
    celtech.roboxbase.postprocessor.NozzleState OPEN -> OPEN
    celtech.roboxbase.postprocessor.NozzleState OPENING -> OPENING
    celtech.roboxbase.postprocessor.NozzleState[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.postprocessor.NozzleState[] values() -> values
    7:7:celtech.roboxbase.postprocessor.NozzleState valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:28:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.PostProcessingBuffer -> celtech.roboxbase.postprocessor.PostProcessingBuffer:
    libertysystems.stenographer.Stenographer steno -> steno
    int indexOfFirstExtrusionEvent -> indexOfFirstExtrusionEvent
    double eExtrusionVolume -> eExtrusionVolume
    double dExtrusionVolume -> dExtrusionVolume
    15:21:void <init>() -> <init>
    25:31:void emptyBufferToOutput(celtech.roboxbase.postprocessor.GCodeOutputWriter) -> a
    36:36:void closeNozzle(java.lang.String,celtech.roboxbase.postprocessor.GCodeOutputWriter) -> a
    44:49:void openNozzleFullyBeforeExtrusion() -> a
    54:65:boolean add(celtech.roboxbase.postprocessor.events.GCodeParseEvent) -> a
    71:75:void clear() -> clear
    79:79:boolean extrusionEventsArePresent() -> b
    15:15:boolean add(java.lang.Object) -> add
celtech.roboxbase.postprocessor.PostProcessingError -> celtech.roboxbase.postprocessor.PostProcessingError:
    11:12:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.PrintJobStatistics -> celtech.roboxbase.postprocessor.PrintJobStatistics:
    libertysystems.stenographer.Stenographer steno -> steno
    java.lang.String printedWithHeadID -> printedWithHeadID
    java.lang.String printedWithHeadType -> printedWithHeadType
    boolean requiresMaterial1 -> requiresMaterial1
    boolean requiresMaterial2 -> requiresMaterial2
    java.lang.String printJobID -> printJobID
    java.lang.String projectName -> projectName
    java.lang.String profileName -> profileName
    float layerHeight -> layerHeight
    int numberOfLines -> numberOfLines
    double eVolumeUsed -> eVolumeUsed
    double dVolumeUsed -> dVolumeUsed
    java.util.List layerNumberToLineNumber -> layerNumberToLineNumber
    java.util.Map layerNumberToPredictedDuration_E_FeedrateDependent -> layerNumberToPredictedDuration_E_FeedrateDependent
    java.util.Map layerNumberToPredictedDuration_D_FeedrateDependent -> layerNumberToPredictedDuration_D_FeedrateDependent
    java.util.Map layerNumberToPredictedDuration_FeedrateIndependent -> layerNumberToPredictedDuration_FeedrateIndependent
    double predictedDuration -> predictedDuration
    int lineNumberOfFirstExtrusion -> lineNumberOfFirstExtrusion
    java.lang.String DATA_PREFIX_IN_FILE -> DATA_PREFIX_IN_FILE
    java.lang.String DATA_SEPARATOR -> DATA_SEPARATOR
    27:69:void <init>() -> <init>
    27:108:void <init>(java.lang.String,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,float,int,double,double,int,java.util.List,java.util.Map,java.util.Map,java.util.Map,double) -> <init>
    112:112:java.lang.String getPrintedWithHeadID() -> getPrintedWithHeadID
    117:118:void setPrintedWithHeadID(java.lang.String) -> setPrintedWithHeadID
    122:122:java.lang.String getPrintedWithHeadType() -> getPrintedWithHeadType
    127:128:void setPrintedWithHeadType(java.lang.String) -> setPrintedWithHeadType
    132:132:boolean getRequiresMaterial1() -> getRequiresMaterial1
    137:138:void setRequiresMaterial1(boolean) -> setRequiresMaterial1
    142:142:boolean getRequiresMaterial2() -> getRequiresMaterial2
    147:148:void setRequiresMaterial2(boolean) -> setRequiresMaterial2
    152:152:java.lang.String getPrintJobID() -> getPrintJobID
    157:158:void setPrintJobID(java.lang.String) -> setPrintJobID
    165:165:int getNumberOfLines() -> getNumberOfLines
    173:173:double geteVolumeUsed() -> geteVolumeUsed
    181:181:double getdVolumeUsed() -> getdVolumeUsed
    189:189:java.util.List getLayerNumberToLineNumber() -> getLayerNumberToLineNumber
    194:194:java.util.Map getLayerNumberToPredictedDuration_E_FeedrateDependent() -> getLayerNumberToPredictedDuration_E_FeedrateDependent
    199:199:java.util.Map getLayerNumberToPredictedDuration_D_FeedrateDependent() -> getLayerNumberToPredictedDuration_D_FeedrateDependent
    204:204:java.util.Map getLayerNumberToPredictedDuration_FeedrateIndependent() -> getLayerNumberToPredictedDuration_FeedrateIndependent
    212:212:int getLineNumberOfFirstExtrusion() -> getLineNumberOfFirstExtrusion
    220:220:double getPredictedDuration() -> getPredictedDuration
    225:225:float getLayerHeight() -> getLayerHeight
    230:231:void setLayerHeight(float) -> setLayerHeight
    235:235:java.lang.String getProjectName() -> getProjectName
    240:241:void setProjectName(java.lang.String) -> setProjectName
    245:245:java.lang.String getProfileName() -> getProfileName
    250:251:void setProfileName(java.lang.String) -> setProfileName
    255:256:void setNumberOfLines(int) -> setNumberOfLines
    260:261:void seteVolumeUsed(double) -> seteVolumeUsed
    265:266:void setdVolumeUsed(double) -> setdVolumeUsed
    270:271:void setLayerNumberToLineNumber(java.util.List) -> setLayerNumberToLineNumber
    275:276:void setLayerNumberToPredictedDuration_E_FeedrateDependent(java.util.Map) -> setLayerNumberToPredictedDuration_E_FeedrateDependent
    280:281:void setLayerNumberToPredictedDuration_D_FeedrateDependent(java.util.Map) -> setLayerNumberToPredictedDuration_D_FeedrateDependent
    285:286:void setLayerNumberToPredictedDuration_FeedrateIndependent(java.util.Map) -> setLayerNumberToPredictedDuration_FeedrateIndependent
    290:291:void setPredictedDuration(double) -> setPredictedDuration
    295:296:void setLineNumberOfFirstExtrusion(int) -> setLineNumberOfFirstExtrusion
    300:324:void updateValueFromStatsString(java.lang.String) -> updateValueFromStatsString
    330:357:void writeStatisticsToFile(celtech.roboxbase.postprocessor.GCodeOutputWriter) -> writeStatisticsToFile
    361:372:celtech.roboxbase.postprocessor.PrintJobStatistics importStatisticsFromGCodeFile(java.lang.String) -> importStatisticsFromGCodeFile
celtech.roboxbase.postprocessor.PrintJobStatistics$1 -> celtech.roboxbase.postprocessor.PrintJobStatistics$1:
    celtech.roboxbase.postprocessor.PrintJobStatistics this$0 -> a
    314:314:void <init>(celtech.roboxbase.postprocessor.PrintJobStatistics) -> <init>
celtech.roboxbase.postprocessor.RoboxiserResult -> celtech.roboxbase.postprocessor.j:
    boolean success -> a
    celtech.roboxbase.postprocessor.PrintJobStatistics printJobStatistics -> b
    14:16:void <init>() -> <init>
    25:25:boolean isSuccess() -> a
    34:35:void setSuccess(boolean) -> a
    42:42:celtech.roboxbase.postprocessor.PrintJobStatistics getPrintJobStatistics() -> b
    51:52:void setRoboxisedStatistics(celtech.roboxbase.postprocessor.PrintJobStatistics) -> a
celtech.roboxbase.postprocessor.Tool -> celtech.roboxbase.postprocessor.Tool:
    celtech.roboxbase.postprocessor.Tool Unknown -> Unknown
    celtech.roboxbase.postprocessor.Tool Extruder_E -> Extruder_E
    celtech.roboxbase.postprocessor.Tool Extruder_D -> Extruder_D
    celtech.roboxbase.postprocessor.Tool[] $VALUES -> $VALUES
    17:17:celtech.roboxbase.postprocessor.Tool[] values() -> values
    17:17:celtech.roboxbase.postprocessor.Tool valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    17:33:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.events.BlankLineEvent -> k.a:
    7:7:void <init>() -> <init>
    17:17:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.CommentEvent -> k.b:
    7:7:void <init>() -> <init>
    17:17:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.EndOfFileEvent -> k.c:
    7:7:void <init>() -> <init>
    17:17:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.ExtrusionEvent -> k.d:
    celtech.roboxbase.postprocessor.ExtrusionTask extrusionTask -> a
    double e -> b
    double d -> c
    boolean dontOutputExtrusion -> d
    17:23:void <init>() -> <init>
    31:31:celtech.roboxbase.postprocessor.ExtrusionTask getExtrusionTask() -> b
    40:41:void setExtrusionTask(celtech.roboxbase.postprocessor.ExtrusionTask) -> a
    49:49:double getE() -> c
    58:59:void setE(double) -> a
    67:67:double getD() -> d
    76:77:void setD(double) -> b
    81:82:void setDontOutputExtrusion(boolean) -> a
    91:128:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.GCodeEvent -> k.e:
    int gNumber -> a
    java.lang.String gString -> b
    7:11:void <init>() -> <init>
    19:19:int getGNumber() -> b
    28:29:void setGNumber(int) -> a
    37:37:java.lang.String getGString() -> c
    46:47:void setGString(java.lang.String) -> a
    56:68:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.GCodeParseEvent -> k.f:
    java.lang.String comment -> a
    double feedRate -> b
    double length -> c
    int linesSoFar -> d
    8:16:void <init>() -> <init>
    24:24:java.lang.String getComment() -> e
    33:34:void setComment(java.lang.String) -> b
    42:42:double getFeedRate() -> f
    51:52:void setFeedRate(double) -> c
    60:60:double getLength() -> g
    69:70:void setLength(double) -> d
    java.lang.String renderForOutput() -> a
    83:83:int getLinesSoFar() -> h
    91:92:void setLinesSoFar(int) -> b
celtech.roboxbase.postprocessor.events.LayerChangeEvent -> k.g:
    double z -> a
    11:11:void <init>() -> <init>
    21:21:double getZ() -> b
    30:31:void setZ(double) -> a
    40:56:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.LayerChangeWithTravelEvent -> k.h:
    double x -> a
    double y -> b
    11:11:void <init>() -> <init>
    23:23:double getX() -> c
    32:33:void setX(double) -> b
    41:41:double getY() -> d
    50:51:void setY(double) -> e
    60:78:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.LayerChangeWithoutTravelEvent -> k.i:
    7:7:void <init>() -> <init>
celtech.roboxbase.postprocessor.events.MCodeEvent -> k.j:
    int mNumber -> a
    boolean sNumberPresent -> b
    int sNumber -> c
    7:10:void <init>() -> <init>
    19:19:int getMNumber() -> b
    28:29:void setMNumber(int) -> a
    37:37:int getSNumber() -> c
    46:48:void setSNumber(int) -> c
    57:69:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.MovementEvent -> k.k:
    double x -> a
    double y -> b
    11:11:void <init>() -> <init>
    23:23:double getX() -> i
    32:33:void setX(double) -> e
    41:41:double getY() -> j
    50:51:void setY(double) -> f
    60:82:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.NozzleChangeBValueEvent -> k.l:
    double b -> a
    double e -> b
    double d -> c
    11:16:void <init>() -> <init>
    24:24:double getB() -> b
    33:34:void setB(double) -> a
    42:42:double getE() -> c
    51:52:void setE(double) -> b
    60:60:double getD() -> d
    69:70:void setD(double) -> e
    79:109:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.NozzleChangeEvent -> k.m:
    int nozzleNumber -> a
    7:7:void <init>() -> <init>
    18:18:int getNozzleNumber() -> b
    27:28:void setNozzleNumber(int) -> a
    37:44:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.NozzleCloseFullyEvent -> k.n:
    7:7:void <init>() -> <init>
    17:24:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.NozzleOpenFullyEvent -> k.o:
    double e -> a
    double d -> b
    11:15:void <init>() -> <init>
    23:23:double getE() -> b
    32:33:void setE(double) -> a
    41:41:double getD() -> c
    50:51:void setD(double) -> b
    60:90:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.NozzlePositionChangeEvent -> k.p:
    double b -> a
    boolean noExtrusion -> b
    11:15:void <init>() -> <init>
    23:23:double getB() -> k
    32:33:void setB(double) -> g
    41:41:boolean getNoExtrusionFlag() -> l
    53:54:void setNoExtrusionFlag(boolean) -> b
    63:95:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.RetractDuringExtrusionEvent -> k.q:
    double e -> a
    16:16:void <init>() -> <init>
    27:27:double getE() -> b
    36:37:void setE(double) -> a
    46:68:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.RetractEvent -> k.r:
    double e -> a
    double d -> b
    11:15:void <init>() -> <init>
    23:23:double getE() -> b
    32:33:void setE(double) -> a
    41:41:double getD() -> c
    50:51:void setD(double) -> b
    60:80:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.SpiralExtrusionEvent -> k.s:
    float z -> a
    float x -> b
    float y -> c
    float e -> d
    11:11:void <init>() -> <init>
    24:24:float getZ() -> b
    33:34:void setZ(float) -> a
    42:42:float getX() -> c
    51:52:void setX(float) -> b
    60:60:float getY() -> d
    69:70:void setY(float) -> c
    78:78:float getE() -> i
    87:88:void setE(float) -> d
    97:117:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.TravelEvent -> k.t:
    11:11:void <init>() -> <init>
    20:42:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.events.UnretractEvent -> k.u:
    double e -> a
    double d -> b
    11:15:void <init>() -> <init>
    23:23:double getE() -> b
    32:33:void setE(double) -> a
    41:41:double getD() -> c
    50:51:void setD(double) -> b
    60:80:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.CloseLogic -> celtech.roboxbase.postprocessor.nouveau.a:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet featureSet -> b
    celtech.roboxbase.postprocessor.nouveau.CloseUtilities closeUtilities -> c
    celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities nodeManagementUtilities -> d
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile settings -> e
    46:62:void <init>(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet,java.lang.String,celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities) -> <init>
    71:187:celtech.roboxbase.postprocessor.nouveau.InScopeEvents extractAvailableMovements(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,java.util.List,boolean,boolean,boolean,boolean) -> a
    194:371:java.util.Optional insertProgressiveNozzleClose(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,java.util.List,celtech.roboxbase.postprocessor.NozzleProxy) -> a
    378:418:boolean replaceOpenNozzleWithPartialOpen(celtech.roboxbase.postprocessor.nouveau.InScopeEvents,double) -> a
    425:456:java.util.Optional partialOpenAndCloseAtEndOfExtrusion(celtech.roboxbase.postprocessor.nouveau.InScopeEvents,celtech.roboxbase.postprocessor.NozzleProxy) -> a
    533:688:java.util.Optional overwriteClose(celtech.roboxbase.postprocessor.nouveau.InScopeEvents,celtech.roboxbase.postprocessor.NozzleProxy,boolean) -> a
    710:978:java.util.Optional copyClose(celtech.roboxbase.postprocessor.nouveau.InScopeEvents,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,java.util.Optional,celtech.roboxbase.postprocessor.NozzleProxy,boolean) -> a
    983:1045:void insertCloseNodes(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult,java.util.List) -> a
    1052:1183:boolean processRetractNode(celtech.roboxbase.postprocessor.nouveau.nodes.RetractNode,celtech.roboxbase.postprocessor.NozzleProxy,celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> a
celtech.roboxbase.postprocessor.nouveau.CloseResult -> celtech.roboxbase.postprocessor.nouveau.b:
    double nozzleStartPosition -> a
    double nozzleCloseOverVolume -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode nodeContainingFinalClose -> c
    17:21:void <init>(double,double,celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode) -> <init>
    25:25:double getNozzleStartPosition() -> a
    30:30:double getNozzleCloseOverVolume() -> b
    35:35:celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode getNodeContainingFinalClose() -> c
celtech.roboxbase.postprocessor.nouveau.CloseUtilities -> celtech.roboxbase.postprocessor.nouveau.c:
    float maxDistanceFromEndPoint -> a
    int maxNumberOfIntersectionsToConsider -> b
    25:29:void <init>(celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,java.lang.String) -> <init>
    37:133:java.util.Optional findClosestMovementNode(celtech.roboxbase.postprocessor.nouveau.SearchSegment,java.util.List,boolean) -> a
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser -> celtech.roboxbase.postprocessor.nouveau.d:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode thisLayer -> c
    int feedrateInForce -> d
    int currentLineNumber -> e
    double currentLayerHeight -> f
    org.parboiled.support.Var currentObject -> a
    celtech.roboxbase.printerControl.model.Printer activePrinter -> g
    double printVolumeWidth -> h
    double printVolumeDepth -> i
    double printVolumeHeight -> j
    double printVolumeHeightTolerance -> k
    40:56:void <init>() -> <init>
    60:60:int getCurrentLineNumber() -> a
    65:66:void setStartingLineNumber(int) -> a
    70:71:void setFeedrateInForce(int) -> b
    75:75:int getFeedrateInForce() -> b
    80:80:celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode getLayerNode() -> c
    85:86:void resetLayer() -> d
    90:95:void validateXPosition(double) -> a
    100:105:void validateYPosition(double) -> b
    110:115:void validateZPosition(double) -> c
    119:132:org.parboiled.Rule Layer() -> e
    154:155:org.parboiled.Rule Preamble() -> f
    176:201:org.parboiled.Rule ObjectSection() -> g
    232:242:org.parboiled.Rule OrphanObjectSection() -> h
    275:277:org.parboiled.Rule OrphanSection() -> i
    300:303:org.parboiled.Rule FillSection() -> j
    326:329:org.parboiled.Rule SkinSection() -> k
    351:354:org.parboiled.Rule SupportSection() -> l
    376:379:org.parboiled.Rule SkirtSection() -> m
    401:404:org.parboiled.Rule SupportInterfaceSection() -> n
    427:430:org.parboiled.Rule OuterPerimeterSection() -> o
    453:456:org.parboiled.Rule InnerPerimeterSection() -> p
    477:483:org.parboiled.Rule NotASection() -> q
    488:496:org.parboiled.Rule AnySection() -> r
    501:508:org.parboiled.Rule IsASection() -> s
    516:519:org.parboiled.Rule Comment(org.parboiled.support.Var) -> a
    535:545:org.parboiled.Rule CommentDirective() -> t
    563:595:org.parboiled.Rule MCode() -> u
    632:636:org.parboiled.Rule GCodeDirective() -> v
    655:674:org.parboiled.Rule RetractDirective() -> w
    705:724:org.parboiled.Rule UnretractDirective() -> x
    756:776:org.parboiled.Rule TravelDirective() -> y
    814:850:org.parboiled.Rule ExtrusionDirective() -> z
    907:932:org.parboiled.Rule LayerChangeDirective() -> A
    976:984:org.parboiled.Rule ChildDirective() -> B
    991:991:org.parboiled.Rule OneOrTwoDigits() -> C
    997:997:org.parboiled.Rule TwoOrThreeDigits() -> D
    1003:1003:org.parboiled.Rule OneToThreeDigits() -> E
    1009:1009:org.parboiled.Rule TwoDigits() -> F
    1015:1015:org.parboiled.Rule ThreeDigits() -> G
    1021:1021:org.parboiled.Rule Digit() -> H
    1027:1029:org.parboiled.Rule IntegerNumber() -> I
    1035:1037:org.parboiled.Rule FloatingPointNumber() -> J
    1045:1048:org.parboiled.Rule PositiveFloatingPointNumber() -> K
    1055:1059:org.parboiled.Rule NegativeFloatingPointNumber() -> L
    1065:1069:org.parboiled.Rule Feedrate(org.parboiled.support.Var) -> b
    1098:1113:org.parboiled.Rule UnrecognisedLine() -> M
    1120:1120:org.parboiled.Rule Newline() -> N
    1134:1134:org.parboiled.Rule NotNewline() -> O
    1141:1144:void setPrintVolumeBounds(double,double,double) -> a
    146:147:boolean lambda$Layer$2(org.parboiled.Context) -> a
    136:141:boolean lambda$Layer$1(org.parboiled.Context) -> b
    122:124:boolean lambda$Layer$0(org.parboiled.Context) -> c
    40:40:int access$004(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> a
    40:40:void access$100(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,double) -> a
    40:40:void access$200(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,double) -> b
    40:40:void access$300(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,double) -> c
    40:40:double access$402(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,double) -> d
    40:40:int access$502(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,int) -> a
    40:40:int access$500(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> b
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$1 -> celtech.roboxbase.postprocessor.nouveau.d$1:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    157:157:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    161:167:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$10 -> celtech.roboxbase.postprocessor.nouveau.d$2:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    356:356:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    360:367:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$11 -> celtech.roboxbase.postprocessor.nouveau.d$3:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    381:381:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    385:392:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$12 -> celtech.roboxbase.postprocessor.nouveau.d$4:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    406:406:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    410:417:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$13 -> celtech.roboxbase.postprocessor.nouveau.d$5:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    432:432:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    436:443:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$14 -> celtech.roboxbase.postprocessor.nouveau.d$6:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    458:458:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    462:469:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$15 -> celtech.roboxbase.postprocessor.nouveau.d$7:
    org.parboiled.support.Var val$commentText -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    521:521:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var) -> <init>
    525:526:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$16 -> celtech.roboxbase.postprocessor.nouveau.d$8:
    org.parboiled.support.Var val$commentValue -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    547:547:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var) -> <init>
    551:554:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$17 -> celtech.roboxbase.postprocessor.nouveau.d$9:
    org.parboiled.support.Var val$mValue -> a
    org.parboiled.support.Var val$sPresent -> b
    org.parboiled.support.Var val$sValue -> c
    org.parboiled.support.Var val$tPresent -> d
    org.parboiled.support.Var val$tValue -> e
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> f
    597:597:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    601:623:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$18 -> celtech.roboxbase.postprocessor.nouveau.d$10:
    org.parboiled.support.Var val$gcodeValue -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    638:638:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var) -> <init>
    642:646:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$19 -> celtech.roboxbase.postprocessor.nouveau.d$11:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> d
    676:676:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    680:695:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$2 -> celtech.roboxbase.postprocessor.nouveau.d$12:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    189:189:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    193:194:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$20 -> celtech.roboxbase.postprocessor.nouveau.d$13:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> d
    726:726:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    731:746:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$21 -> celtech.roboxbase.postprocessor.nouveau.d$14:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> d
    778:778:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    782:804:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$22 -> celtech.roboxbase.postprocessor.nouveau.d$15:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$dValue -> e
    org.parboiled.support.Var val$eValue -> f
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> g
    852:852:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    856:896:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$23 -> celtech.roboxbase.postprocessor.nouveau.d$16:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> e
    934:934:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    938:967:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$24 -> celtech.roboxbase.postprocessor.nouveau.d$17:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    1071:1071:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var) -> <init>
    1075:1076:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$25 -> celtech.roboxbase.postprocessor.nouveau.d$18:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    1081:1081:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,org.parboiled.support.Var) -> <init>
    1085:1086:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$26 -> celtech.roboxbase.postprocessor.nouveau.d$19:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    1102:1102:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    1106:1110:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$27 -> celtech.roboxbase.postprocessor.nouveau.d$20:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    1122:1122:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    1126:1126:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$3 -> celtech.roboxbase.postprocessor.nouveau.d$21:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    203:203:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    207:208:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$4 -> celtech.roboxbase.postprocessor.nouveau.d$22:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    org.parboiled.support.Var val$objectNumber -> b
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> c
    214:214:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass,org.parboiled.support.Var) -> <init>
    219:223:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$5 -> celtech.roboxbase.postprocessor.nouveau.d$23:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    245:245:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    249:250:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$6 -> celtech.roboxbase.postprocessor.nouveau.d$24:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> b
    256:256:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    261:265:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$7 -> celtech.roboxbase.postprocessor.nouveau.d$25:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    279:279:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    283:290:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$8 -> celtech.roboxbase.postprocessor.nouveau.d$26:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    305:305:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    309:316:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser$9 -> celtech.roboxbase.postprocessor.nouveau.d$27:
    celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser this$0 -> a
    331:331:void <init>(celtech.roboxbase.postprocessor.nouveau.CuraGCodeParser) -> <init>
    335:342:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.InScopeEvents -> celtech.roboxbase.postprocessor.nouveau.e:
    java.util.List inScopeEvents -> a
    double availableExtrusion -> b
    17:20:void <init>(java.util.List,double) -> <init>
    24:24:double getAvailableExtrusion() -> a
    29:29:java.util.List getInScopeEvents() -> b
celtech.roboxbase.postprocessor.nouveau.IntersectionResult -> celtech.roboxbase.postprocessor.nouveau.f:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode closestNode -> a
    org.apache.commons.math3.geometry.euclidean.twod.Vector2D intersectionPoint -> b
    int nodeIndex -> c
    17:21:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,int) -> <init>
    25:25:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getClosestNode() -> a
    30:30:org.apache.commons.math3.geometry.euclidean.twod.Vector2D getIntersectionPoint() -> b
    35:35:int getNodeIndex() -> c
celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult -> celtech.roboxbase.postprocessor.nouveau.g:
    celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode layerData -> a
    java.util.Optional lastObjectNumber -> b
    int lastFeedrateInForce -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode lastToolSelectInForce -> d
    celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode lastToolSelectOfSameNumber -> e
    celtech.roboxbase.postprocessor.nouveau.nodes.SectionNode lastSectionNodeInForce -> f
    int lastLineNumber -> g
    15:38:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,int,celtech.roboxbase.postprocessor.nouveau.nodes.SectionNode,celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode,celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode,int,int) -> <init>
    42:42:celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode getLayerData() -> a
    47:47:java.util.Optional getLastObjectNumber() -> b
    52:53:void setLastObjectNumber(int) -> a
    62:63:void setLastFeedrateInForce(int) -> b
    72:72:int getLastFeedrateInForce() -> c
    77:77:celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode getLastToolSelectInForce() -> d
    82:82:celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode getLastToolSelectOfSameNumber() -> e
    87:87:celtech.roboxbase.postprocessor.nouveau.nodes.SectionNode getLastSectionNodeInForce() -> f
    92:92:int getLastLineNumber() -> g
    97:98:void setLastLineNumber(int) -> c
celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities -> celtech.roboxbase.postprocessor.nouveau.h:
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet featureSet -> a
    java.util.List nozzleProxies -> b
    36:39:void <init>(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet,java.util.List) -> <init>
    43:71:void rehabilitateUnretractNodes(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> a
    75:91:java.util.Optional lookForParentSectionNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    96:112:java.util.Optional lookForParentObjectNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> b
    117:127:void recalculateSectionExtrusion(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> b
    131:192:void calculatePerRetractExtrusionAndNode(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> c
    201:263:void rehomeOrphanObjects(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> a
    267:303:java.util.Optional findNextExtrusion(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    308:344:java.util.Optional findNextMovement(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> b
    349:363:java.util.Optional findNextMovement(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> c
    368:406:java.util.Optional findPriorMovementPoints(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> d
    411:425:java.util.Optional findPriorMovement(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> e
    430:444:java.util.Optional findPriorExtrusion(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> f
    449:479:java.util.Optional findPriorMovementInPreviousSection(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> g
    509:534:celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities$AvailableExtrusion findAvailableExtrusion(celtech.roboxbase.postprocessor.nouveau.InScopeEvents,int,boolean) -> a
celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities$AvailableExtrusion -> celtech.roboxbase.postprocessor.nouveau.h$a:
    double availableExtrusion -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode lastNodeExamined -> c
    celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities this$0 -> a
    489:492:void <init>(celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities,double,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    496:496:double getAvailableExtrusion() -> a
    501:501:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getLastNodeExamined() -> b
celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities -> celtech.roboxbase.postprocessor.nouveau.i:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile slicerParametersFile -> b
    celtech.roboxbase.configuration.fileRepresentation.HeadFile headFile -> c
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet featureSet -> d
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode postProcessingMode -> e
    celtech.roboxbase.postprocessor.nouveau.NozzleManagementUtilities nozzleControlUtilities -> f
    java.util.Map objectToNozzleNumberMap -> g
    33:58:void <init>(java.util.List,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.HeadFile,celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet,celtech.roboxbase.postprocessor.nouveau.PostProcessingMode,java.util.Map) -> <init>
    85:132:celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities$ExtrusionAssignmentResult assignExtrusionToCorrectExtruder(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> a
    138:353:int insertNozzleControlSectionsByObject(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> a
celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities$ExtrusionAssignmentResult -> celtech.roboxbase.postprocessor.nouveau.i$a:
    double eVolume -> b
    double dVolume -> c
    celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities this$0 -> a
    67:70:void <init>(celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities,double,double) -> <init>
    74:74:double getEVolume() -> a
    79:79:double getDVolume() -> b
celtech.roboxbase.postprocessor.nouveau.NozzleManagementUtilities -> celtech.roboxbase.postprocessor.nouveau.j:
    java.util.List nozzleProxies -> a
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile slicerParametersFile -> b
    celtech.roboxbase.configuration.fileRepresentation.HeadFile headFile -> c
    37:41:void <init>(java.util.List,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.HeadFile) -> <init>
    47:91:celtech.roboxbase.postprocessor.NozzleProxy chooseNozzleProxyForDifferentialSupportMaterial(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,celtech.roboxbase.postprocessor.NozzleProxy,celtech.roboxbase.postprocessor.NozzleProxy) -> a
    96:153:celtech.roboxbase.postprocessor.NozzleProxy chooseNozzleProxyByTask(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    158:188:java.util.Optional determineNozzleStateAtEndOfLayer(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> a
celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass -> celtech.roboxbase.postprocessor.nouveau.k:
    celtech.roboxbase.postprocessor.nouveau.nodes.ObjectDelineationNode node -> a
    11:13:void <init>() -> <init>
    18:19:boolean run(org.parboiled.Context) -> run
    24:24:celtech.roboxbase.postprocessor.nouveau.nodes.ObjectDelineationNode getNode() -> a
celtech.roboxbase.postprocessor.nouveau.OpenResult -> celtech.roboxbase.postprocessor.nouveau.l:
    double outstandingEReplenish -> a
    double outstandingDReplenish -> b
    boolean nozzleOpen -> c
    int lastToolNumber -> d
    int opensInLastTool -> e
    celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode lastNozzleClose -> f
    26:33:void <init>(double,double,boolean,int,int,celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode) -> <init>
    37:37:double getOutstandingDReplenish() -> a
    42:43:void setOutstandingDReplenish(double) -> a
    47:47:double getOutstandingEReplenish() -> b
    52:53:void setOutstandingEReplenish(double) -> b
    57:57:boolean isNozzleOpen() -> c
    62:62:int getLastToolNumber() -> d
    67:67:int getOpensInLastTool() -> e
    72:72:celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode getLastNozzleClose() -> f
celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass -> celtech.roboxbase.postprocessor.nouveau.m:
    celtech.roboxbase.postprocessor.nouveau.nodes.OrphanObjectDelineationNode node -> a
    11:13:void <init>() -> <init>
    18:19:boolean run(org.parboiled.Context) -> run
    24:24:celtech.roboxbase.postprocessor.nouveau.nodes.OrphanObjectDelineationNode getNode() -> a
celtech.roboxbase.postprocessor.nouveau.OutputUtilities -> celtech.roboxbase.postprocessor.nouveau.n:
    24:24:void <init>() -> <init>
    29:50:void prependPrePrintHeader(celtech.roboxbase.postprocessor.GCodeOutputWriter,java.lang.String,boolean,boolean,boolean) -> a
    58:93:void appendPostPrintFooter(celtech.roboxbase.postprocessor.GCodeOutputWriter,celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalcResult,java.lang.String,boolean,boolean,boolean) -> a
    101:119:void outputSingleMaterialNozzleTemperatureCommands(celtech.roboxbase.postprocessor.GCodeOutputWriter,boolean,boolean,boolean,boolean) -> a
    123:154:void writeLayerToFile(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.GCodeOutputWriter) -> a
    159:182:void outputNodes(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,int) -> a
celtech.roboxbase.postprocessor.nouveau.ParserInputException -> celtech.roboxbase.postprocessor.nouveau.ParserInputException:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.nouveau.PostProcessingMode -> celtech.roboxbase.postprocessor.nouveau.PostProcessingMode:
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode TASK_BASED_NOZZLE_SELECTION -> TASK_BASED_NOZZLE_SELECTION
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode SUPPORT_IN_FIRST_MATERIAL -> SUPPORT_IN_FIRST_MATERIAL
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode SUPPORT_IN_SECOND_MATERIAL -> SUPPORT_IN_SECOND_MATERIAL
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.postprocessor.nouveau.PostProcessingMode[] values() -> values
    7:7:celtech.roboxbase.postprocessor.nouveau.PostProcessingMode valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:11:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.PostProcessor -> celtech.roboxbase.postprocessor.nouveau.o:
    libertysystems.stenographer.Stenographer steno -> d
    java.lang.String unretractTimerName -> e
    java.lang.String orphanTimerName -> f
    java.lang.String nozzleControlTimerName -> g
    java.lang.String perRetractTimerName -> h
    java.lang.String closeTimerName -> i
    java.lang.String unnecessaryToolchangeTimerName -> j
    java.lang.String cameraEventTimerName -> k
    java.lang.String openTimerName -> l
    java.lang.String assignExtrusionTimerName -> m
    java.lang.String layerResultTimerName -> n
    java.lang.String timeAndVolumeCalcTimerName -> o
    java.lang.String heaterSaverTimerName -> p
    java.lang.String parseLayerTimerName -> q
    java.lang.String writeOutputTimerName -> r
    java.lang.String countLinesTimerName -> s
    java.lang.String outputVerifierTimerName -> t
    java.lang.String nameOfPrint -> u
    java.lang.String printJobUUID -> v
    java.util.List usedExtruders -> w
    celtech.roboxbase.printerControl.model.Printer printer -> x
    java.lang.String gcodeFileToProcess -> y
    java.lang.String gcodeOutputFile -> z
    celtech.roboxbase.configuration.fileRepresentation.HeadFile headFile -> A
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile slicerParametersFile -> B
    javafx.beans.property.DoubleProperty taskProgress -> C
    boolean safetyFeaturesRequired -> D
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printerOverrides -> E
    java.util.List nozzleProxies -> F
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet featureSet -> G
    celtech.roboxbase.postprocessor.nouveau.PostProcessingMode postProcessingMode -> H
    java.util.List layerNumberToLineNumber -> a
    java.util.List layerNumberToPredictedDuration -> b
    double predictedDuration -> c
    celtech.roboxbase.postprocessor.nouveau.UtilityMethods postProcessorUtilityMethods -> I
    celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities nodeManagementUtilities -> J
    celtech.roboxbase.postprocessor.nouveau.NozzleAssignmentUtilities nozzleControlUtilities -> K
    celtech.roboxbase.postprocessor.nouveau.CloseLogic closeLogic -> L
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver heaterSaver -> M
    celtech.roboxbase.postprocessor.nouveau.verifier.OutputVerifier outputVerifier -> N
    celtech.roboxbase.utils.TimeUtils timeUtils -> O
    54:172:void <init>(java.lang.String,java.lang.String,java.util.List,celtech.roboxbase.printerControl.model.Printer,java.lang.String,java.lang.String,celtech.roboxbase.configuration.fileRepresentation.HeadFile,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides,celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet,java.lang.String,javafx.beans.property.DoubleProperty,java.util.Map,celtech.roboxbase.services.CameraTriggerData,boolean) -> <init>
    176:483:celtech.roboxbase.postprocessor.RoboxiserResult processInput() -> a
    489:531:celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult parseLayer(java.lang.StringBuilder,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> a
    537:577:celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult postProcess(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> a
    582:641:celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult determineLayerPostProcessResult(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult) -> b
    647:671:void outputPostProcessingTimerReport() -> b
celtech.roboxbase.postprocessor.nouveau.PostProcessor$1 -> celtech.roboxbase.postprocessor.nouveau.o$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$fileRepresentation$SlicerParametersFile$SupportType -> a
    146:146:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature -> celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature:
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature FIRST_LAYER_OVERTRAVEL_CLOSE -> FIRST_LAYER_OVERTRAVEL_CLOSE
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature REMOVE_ALL_UNRETRACTS -> REMOVE_ALL_UNRETRACTS
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature OPEN_NOZZLE_FULLY_AT_START -> OPEN_NOZZLE_FULLY_AT_START
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature REPLENISH_BEFORE_OPEN -> REPLENISH_BEFORE_OPEN
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature OPEN_AND_CLOSE_NOZZLES -> OPEN_AND_CLOSE_NOZZLES
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature INSERT_CAMERA_CONTROL_POINTS -> INSERT_CAMERA_CONTROL_POINTS
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature RETRACT_AT_TOOLCHANGE -> RETRACT_AT_TOOLCHANGE
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature[] values() -> values
    7:7:celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:15:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet -> celtech.roboxbase.postprocessor.nouveau.p:
    java.util.List featureSet -> a
    10:12:void <init>() -> <init>
    16:17:void enableFeature(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature) -> a
    21:22:void disableFeature(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature) -> b
    26:26:boolean isEnabled(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeature) -> c
celtech.roboxbase.postprocessor.nouveau.RetractHolder -> celtech.roboxbase.postprocessor.nouveau.q:
    celtech.roboxbase.postprocessor.nouveau.nodes.RetractNode node -> a
    celtech.roboxbase.postprocessor.NozzleProxy nozzle -> b
    17:20:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.RetractNode,celtech.roboxbase.postprocessor.NozzleProxy) -> <init>
    24:24:celtech.roboxbase.postprocessor.nouveau.nodes.RetractNode getNode() -> a
    29:29:celtech.roboxbase.postprocessor.NozzleProxy getNozzle() -> b
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser -> celtech.roboxbase.postprocessor.nouveau.r:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode thisLayer -> c
    int feedrateInForce -> d
    int startingLineNumber -> e
    int numberOfUnrecognisedElements -> f
    org.parboiled.support.Var currentObject -> a
    40:48:void <init>() -> <init>
    52:53:void setFeedrateInForce(int) -> a
    57:57:int getFeedrateInForce() -> a
    62:62:int getStartingLineNumber() -> b
    67:68:void setStartingLineNumber(int) -> b
    72:72:celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode getLayerNode() -> c
    77:78:void resetLayer() -> d
    82:110:org.parboiled.Rule Layer() -> e
    127:128:org.parboiled.Rule Preamble() -> f
    149:175:org.parboiled.Rule ObjectSection() -> g
    205:215:org.parboiled.Rule OrphanObjectSection() -> h
    247:249:org.parboiled.Rule OrphanSection() -> i
    271:274:org.parboiled.Rule FillSection() -> j
    296:299:org.parboiled.Rule SkinSection() -> k
    320:323:org.parboiled.Rule SupportSection() -> l
    344:347:org.parboiled.Rule SupportInterfaceSection() -> m
    369:372:org.parboiled.Rule OuterPerimeterSection() -> n
    394:397:org.parboiled.Rule InnerPerimeterSection() -> o
    417:423:org.parboiled.Rule NotASection() -> p
    428:435:org.parboiled.Rule AnySection() -> q
    440:446:org.parboiled.Rule IsASection() -> r
    454:457:org.parboiled.Rule Comment(org.parboiled.support.Var) -> a
    473:483:org.parboiled.Rule CommentDirective() -> s
    500:535:org.parboiled.Rule MCode() -> t
    577:581:org.parboiled.Rule GCodeDirective() -> u
    599:620:org.parboiled.Rule RetractDirective() -> v
    656:677:org.parboiled.Rule UnretractDirective() -> w
    712:739:org.parboiled.Rule TravelDirective() -> x
    779:813:org.parboiled.Rule ExtrusionDirective() -> y
    870:885:org.parboiled.Rule NozzleControlDirective() -> z
    912:952:org.parboiled.Rule NozzleControlDuringTravelDirective() -> A
    1003:1032:org.parboiled.Rule LayerChangeDirective() -> B
    1078:1088:org.parboiled.Rule ChildDirective() -> C
    1095:1095:org.parboiled.Rule OneOrTwoDigits() -> D
    1101:1101:org.parboiled.Rule TwoOrThreeDigits() -> E
    1107:1107:org.parboiled.Rule OneToThreeDigits() -> F
    1113:1113:org.parboiled.Rule TwoDigits() -> G
    1119:1119:org.parboiled.Rule ThreeDigits() -> H
    1125:1125:org.parboiled.Rule Digit() -> I
    1131:1133:org.parboiled.Rule FloatingPointNumber() -> J
    1141:1144:org.parboiled.Rule PositiveFloatingPointNumber() -> K
    1151:1155:org.parboiled.Rule NegativeFloatingPointNumber() -> L
    1161:1165:org.parboiled.Rule Feedrate(org.parboiled.support.Var) -> b
    1194:1210:org.parboiled.Rule UnrecognisedLine() -> M
    1217:1218:org.parboiled.Rule Newline() -> N
    1233:1233:org.parboiled.Rule NotNewline() -> O
    114:119:boolean lambda$Layer$1(org.parboiled.Context) -> a
    86:88:boolean lambda$Layer$0(org.parboiled.Context) -> b
    40:40:int access$000(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> a
    40:40:int access$102(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,int) -> a
    40:40:int access$100(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> b
    40:40:int access$208(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> c
    40:40:int access$200(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> d
    40:40:celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode access$300(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> e
    40:40:libertysystems.stenographer.Stenographer access$400(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> f
    40:40:int access$008(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> g
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$1 -> celtech.roboxbase.postprocessor.nouveau.r$1:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    130:130:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    134:140:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$10 -> celtech.roboxbase.postprocessor.nouveau.r$2:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    325:325:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    329:335:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$11 -> celtech.roboxbase.postprocessor.nouveau.r$3:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    349:349:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    353:359:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$12 -> celtech.roboxbase.postprocessor.nouveau.r$4:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    374:374:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    378:384:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$13 -> celtech.roboxbase.postprocessor.nouveau.r$5:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    399:399:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    403:409:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$14 -> celtech.roboxbase.postprocessor.nouveau.r$6:
    org.parboiled.support.Var val$commentText -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    459:459:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    463:464:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$15 -> celtech.roboxbase.postprocessor.nouveau.r$7:
    org.parboiled.support.Var val$commentValue -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    485:485:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    489:491:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$16 -> celtech.roboxbase.postprocessor.nouveau.r$8:
    org.parboiled.support.Var val$mValue -> a
    org.parboiled.support.Var val$sPresent -> b
    org.parboiled.support.Var val$sValue -> c
    org.parboiled.support.Var val$tPresent -> d
    org.parboiled.support.Var val$tValue -> e
    org.parboiled.support.Var val$commentText -> f
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> g
    537:537:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    541:568:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$17 -> celtech.roboxbase.postprocessor.nouveau.r$9:
    org.parboiled.support.Var val$gcodeValue -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    583:583:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    587:590:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$18 -> celtech.roboxbase.postprocessor.nouveau.r$10:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    org.parboiled.support.Var val$commentValue -> d
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> e
    622:622:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    626:646:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$19 -> celtech.roboxbase.postprocessor.nouveau.r$11:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    org.parboiled.support.Var val$commentValue -> d
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> e
    679:679:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    684:702:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$2 -> celtech.roboxbase.postprocessor.nouveau.r$12:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    163:163:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    167:168:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$20 -> celtech.roboxbase.postprocessor.nouveau.r$13:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> e
    741:741:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    745:769:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$21 -> celtech.roboxbase.postprocessor.nouveau.r$14:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$dValue -> e
    org.parboiled.support.Var val$eValue -> f
    org.parboiled.support.Var val$commentValue -> g
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> h
    815:815:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    819:860:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$22 -> celtech.roboxbase.postprocessor.nouveau.r$15:
    org.parboiled.support.Var val$bValue -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    887:887:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    891:902:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$23 -> celtech.roboxbase.postprocessor.nouveau.r$16:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$bValue -> e
    org.parboiled.support.Var val$commentValue -> f
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> g
    954:954:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    958:993:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$24 -> celtech.roboxbase.postprocessor.nouveau.r$17:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$commentValue -> e
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> f
    1034:1034:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    1039:1069:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$25 -> celtech.roboxbase.postprocessor.nouveau.r$18:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    1167:1167:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    1171:1172:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$26 -> celtech.roboxbase.postprocessor.nouveau.r$19:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    1177:1177:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,org.parboiled.support.Var) -> <init>
    1181:1182:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$27 -> celtech.roboxbase.postprocessor.nouveau.r$20:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    1198:1198:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    1202:1207:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$28 -> celtech.roboxbase.postprocessor.nouveau.r$21:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    1220:1220:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    1224:1225:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$3 -> celtech.roboxbase.postprocessor.nouveau.r$22:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    177:177:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    181:182:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$4 -> celtech.roboxbase.postprocessor.nouveau.r$23:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    org.parboiled.support.Var val$objectNumber -> b
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> c
    188:188:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass,org.parboiled.support.Var) -> <init>
    193:196:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$5 -> celtech.roboxbase.postprocessor.nouveau.r$24:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    218:218:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    222:223:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$6 -> celtech.roboxbase.postprocessor.nouveau.r$25:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> b
    229:229:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    234:237:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$7 -> celtech.roboxbase.postprocessor.nouveau.r$26:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    251:251:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    255:261:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$8 -> celtech.roboxbase.postprocessor.nouveau.r$27:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    276:276:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    280:286:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser$9 -> celtech.roboxbase.postprocessor.nouveau.r$28:
    celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser this$0 -> a
    301:301:void <init>(celtech.roboxbase.postprocessor.nouveau.RoboxGCodeParser) -> <init>
    305:311:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.SearchSegment -> celtech.roboxbase.postprocessor.nouveau.s:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider startNode -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider endNode -> b
    15:18:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider,celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> <init>
    22:22:celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider getStartNode() -> a
    27:27:celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider getEndNode() -> b
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser -> celtech.roboxbase.postprocessor.nouveau.t:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode thisLayer -> c
    int feedrateInForce -> d
    org.parboiled.support.Var currentObject -> a
    39:46:void <init>() -> <init>
    50:51:void setFeedrateInForce(int) -> a
    55:55:int getFeedrateInForce() -> a
    60:60:celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode getLayerNode() -> b
    65:66:void resetLayer() -> c
    70:96:org.parboiled.Rule Layer() -> d
    113:114:org.parboiled.Rule Preamble() -> e
    135:162:org.parboiled.Rule ObjectSection() -> f
    192:202:org.parboiled.Rule OrphanObjectSection() -> g
    234:236:org.parboiled.Rule OrphanSection() -> h
    258:261:org.parboiled.Rule FillSection() -> i
    283:286:org.parboiled.Rule SkinSection() -> j
    307:310:org.parboiled.Rule SupportSection() -> k
    331:334:org.parboiled.Rule SupportInterfaceSection() -> l
    356:359:org.parboiled.Rule OuterPerimeterSection() -> m
    381:384:org.parboiled.Rule InnerPerimeterSection() -> n
    404:410:org.parboiled.Rule NotASection() -> o
    415:422:org.parboiled.Rule AnySection() -> p
    427:433:org.parboiled.Rule IsASection() -> q
    439:449:org.parboiled.Rule CommentDirective() -> r
    466:481:org.parboiled.Rule MCode() -> s
    507:513:org.parboiled.Rule GCodeDirective() -> t
    539:560:org.parboiled.Rule RetractDirective() -> u
    594:616:org.parboiled.Rule UnretractDirective() -> v
    651:683:org.parboiled.Rule ExtrusionDirective() -> w
    739:754:org.parboiled.Rule LayerChangeComment(org.parboiled.support.Var) -> a
    762:773:org.parboiled.Rule LayerChangeDirective() -> x
    805:813:org.parboiled.Rule ChildDirective() -> y
    820:820:org.parboiled.Rule OneOrTwoDigits() -> z
    826:826:org.parboiled.Rule TwoOrThreeDigits() -> A
    832:832:org.parboiled.Rule OneToThreeDigits() -> B
    838:838:org.parboiled.Rule TwoDigits() -> C
    844:844:org.parboiled.Rule ThreeDigits() -> D
    850:850:org.parboiled.Rule Digit() -> E
    856:858:org.parboiled.Rule FloatingPointNumber() -> F
    866:869:org.parboiled.Rule PositiveFloatingPointNumber() -> G
    876:880:org.parboiled.Rule NegativeFloatingPointNumber() -> H
    886:904:org.parboiled.Rule Feedrate(org.parboiled.support.Var) -> b
    932:935:org.parboiled.Rule Comment(org.parboiled.support.Var) -> c
    953:966:org.parboiled.Rule UnrecognisedLine() -> I
    973:973:org.parboiled.Rule Newline() -> J
    979:979:org.parboiled.Rule NotNewline() -> K
    987:1012:org.parboiled.Rule TravelDirective() -> L
    100:105:boolean lambda$Layer$1(org.parboiled.Context) -> a
    74:75:boolean lambda$Layer$0(org.parboiled.Context) -> b
    39:39:int access$002(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,int) -> a
    39:39:int access$000(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> a
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$1 -> celtech.roboxbase.postprocessor.nouveau.t$1:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    116:116:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    120:126:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$10 -> celtech.roboxbase.postprocessor.nouveau.t$2:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    312:312:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    316:322:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$11 -> celtech.roboxbase.postprocessor.nouveau.t$3:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    336:336:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    340:346:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$12 -> celtech.roboxbase.postprocessor.nouveau.t$4:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    361:361:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    365:371:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$13 -> celtech.roboxbase.postprocessor.nouveau.t$5:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    386:386:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    390:396:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$14 -> celtech.roboxbase.postprocessor.nouveau.t$6:
    org.parboiled.support.Var val$commentValue -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    451:451:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    455:457:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$15 -> celtech.roboxbase.postprocessor.nouveau.t$7:
    org.parboiled.support.Var val$mValue -> a
    org.parboiled.support.Var val$sValue -> b
    org.parboiled.support.Var val$commentText -> c
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> d
    483:483:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    487:498:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$16 -> celtech.roboxbase.postprocessor.nouveau.t$8:
    org.parboiled.support.Var val$gcodeValue -> a
    org.parboiled.support.Var val$commentText -> b
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> c
    515:515:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    519:528:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$17 -> celtech.roboxbase.postprocessor.nouveau.t$9:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    org.parboiled.support.Var val$commentText -> d
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> e
    562:562:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    566:584:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$18 -> celtech.roboxbase.postprocessor.nouveau.t$10:
    org.parboiled.support.Var val$dValue -> a
    org.parboiled.support.Var val$eValue -> b
    org.parboiled.support.Var val$fValue -> c
    org.parboiled.support.Var val$commentText -> d
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> e
    618:618:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    623:641:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$19 -> celtech.roboxbase.postprocessor.nouveau.t$11:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$dValue -> e
    org.parboiled.support.Var val$eValue -> f
    org.parboiled.support.Var val$commentText -> g
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> h
    685:685:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    689:728:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$2 -> celtech.roboxbase.postprocessor.nouveau.t$12:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    150:150:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    154:155:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$20 -> celtech.roboxbase.postprocessor.nouveau.t$13:
    org.parboiled.support.Var val$layerNumber -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    746:746:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    750:751:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$21 -> celtech.roboxbase.postprocessor.nouveau.t$14:
    org.parboiled.support.Var val$layerNumber -> a
    org.parboiled.support.Var val$zValue -> b
    org.parboiled.support.Var val$fValue -> c
    org.parboiled.support.Var val$commentText -> d
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> e
    775:775:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    779:796:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$22 -> celtech.roboxbase.postprocessor.nouveau.t$15:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    892:892:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    896:897:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$23 -> celtech.roboxbase.postprocessor.nouveau.t$16:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    906:906:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    910:911:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$24 -> celtech.roboxbase.postprocessor.nouveau.t$17:
    org.parboiled.support.Var val$feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    916:916:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    920:921:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$25 -> celtech.roboxbase.postprocessor.nouveau.t$18:
    org.parboiled.support.Var val$commentText -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    937:937:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var) -> <init>
    941:942:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$26 -> celtech.roboxbase.postprocessor.nouveau.t$19:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    957:957:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    961:963:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$27 -> celtech.roboxbase.postprocessor.nouveau.t$20:
    org.parboiled.support.Var val$fValue -> a
    org.parboiled.support.Var val$xValue -> b
    org.parboiled.support.Var val$yValue -> c
    org.parboiled.support.Var val$zValue -> d
    org.parboiled.support.Var val$commentText -> e
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> f
    1014:1014:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var,org.parboiled.support.Var) -> <init>
    1018:1046:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$3 -> celtech.roboxbase.postprocessor.nouveau.t$21:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    164:164:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass) -> <init>
    168:169:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$4 -> celtech.roboxbase.postprocessor.nouveau.t$22:
    celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass val$objectSectionAction -> a
    org.parboiled.support.Var val$objectNumber -> b
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> c
    175:175:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,celtech.roboxbase.postprocessor.nouveau.ObjectSectionActionClass,org.parboiled.support.Var) -> <init>
    180:183:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$5 -> celtech.roboxbase.postprocessor.nouveau.t$23:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    205:205:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    209:210:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$6 -> celtech.roboxbase.postprocessor.nouveau.t$24:
    celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass val$orphanObjectSectionAction -> a
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> b
    216:216:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser,celtech.roboxbase.postprocessor.nouveau.OrphanObjectSectionActionClass) -> <init>
    221:224:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$7 -> celtech.roboxbase.postprocessor.nouveau.t$25:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    238:238:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    242:248:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$8 -> celtech.roboxbase.postprocessor.nouveau.t$26:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    263:263:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    267:273:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser$9 -> celtech.roboxbase.postprocessor.nouveau.t$27:
    celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser this$0 -> a
    288:288:void <init>(celtech.roboxbase.postprocessor.nouveau.Slic3rGCodeParser) -> <init>
    292:298:boolean run(org.parboiled.Context) -> run
celtech.roboxbase.postprocessor.nouveau.StackOperations -> celtech.roboxbase.postprocessor.nouveau.u:
    org.parboiled.Context context -> a
    10:10:void <init>() -> <init>
    18:19:void setContext(org.parboiled.Context) -> setContext
    23:24:boolean push(java.lang.Object) -> a
celtech.roboxbase.postprocessor.nouveau.UnableToFindSectionNodeException -> celtech.roboxbase.postprocessor.nouveau.UnableToFindSectionNodeException:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.postprocessor.nouveau.UtilityMethods -> celtech.roboxbase.postprocessor.nouveau.v:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet ppFeatureSet -> b
    celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities nodeManagementUtilities -> c
    celtech.roboxbase.postprocessor.nouveau.CloseLogic closeLogic -> d
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile settings -> e
    celtech.roboxbase.services.CameraTriggerManager cameraTriggerManager -> f
    celtech.roboxbase.services.CameraTriggerData cameraTriggerData -> g
    44:65:void <init>(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,java.lang.String,celtech.roboxbase.postprocessor.nouveau.NodeManagementUtilities,celtech.roboxbase.services.CameraTriggerData) -> <init>
    71:101:void insertCameraTriggersAndCloses(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult,java.util.List) -> a
    107:157:void suppressUnnecessaryToolChangesAndInsertToolchangeCloses(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult,java.util.List) -> b
    164:234:void closeAtEndOfToolSelectIfNecessary(celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode,java.util.List) -> a
    241:495:celtech.roboxbase.postprocessor.nouveau.OpenResult insertOpens(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode,celtech.roboxbase.postprocessor.nouveau.OpenResult,java.util.List,java.lang.String) -> a
    502:511:void updateLayerToLineNumber(celtech.roboxbase.postprocessor.nouveau.LayerPostProcessResult,java.util.List,celtech.roboxbase.postprocessor.GCodeOutputWriter) -> a
    515:525:void recalculatePerSectionExtrusion(celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode) -> a
    480:493:void lambda$insertOpens$0(java.util.Map,java.util.Map$Entry) -> a
celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver -> celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver:
    libertysystems.stenographer.Stenographer steno -> a
    int layer0MValue -> b
    int otherLayerMValue -> c
    double heatUpTime_secs -> d
    double switchOffTime_secs -> e
    24:34:void <init>(double,double) -> <init>
    47:179:void saveHeaters(java.util.List,boolean,boolean) -> a
    183:199:celtech.roboxbase.postprocessor.nouveau.nodes.MCodeNode generateHeaterOffNode(int,int) -> a
    204:220:celtech.roboxbase.postprocessor.nouveau.nodes.MCodeNode generateHeaterOnNode(int,int) -> b
    229:270:celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$FoundHeatUpNode findNodeToHeatAfter(java.util.List,int,celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode,double) -> a
celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$FoundHeatUpNode -> celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$a:
    int foundInLayer -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode foundNode -> c
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver this$0 -> a
    313:316:void <init>(celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver,int,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    320:320:int getFoundInLayer() -> a
    325:325:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getFoundNode() -> b
    305:305:int access$000(celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$FoundHeatUpNode) -> a
celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState -> celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState:
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState OFF -> OFF
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState ON_FIRST_LAYER -> ON_FIRST_LAYER
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState ON -> ON
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState[] $VALUES -> $VALUES
    36:36:celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState[] values() -> values
    36:36:celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$HeaterState valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:39:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$NodeAddStore -> celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver$b:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode siblingForAddedNode -> b
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode nodeToAdd -> c
    boolean addAfter -> d
    celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver this$0 -> a
    283:287:void <init>(celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaver,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,boolean) -> <init>
    291:291:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getSiblingForAddedNode() -> a
    296:296:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getNodeToAdd() -> b
    301:301:boolean isAddAfter() -> c
celtech.roboxbase.postprocessor.nouveau.filamentSaver.FilamentSaverResult -> celtech.roboxbase.postprocessor.nouveau.filamentSaver.a:
    boolean n1HeaterOn -> a
    double[] toolLastRequiredAt -> b
    boolean n2HeaterOn -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode lastToolSelectNode -> d
    22:27:void <init>(boolean,boolean,double[],celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode) -> <init>
    31:31:double[] getToolLastRequiredAt() -> a
    36:36:celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode getLastToolSelectNode() -> b
    41:41:boolean isN1HeaterOn() -> c
    46:46:boolean isN2HeaterOn() -> d
celtech.roboxbase.postprocessor.nouveau.nodes.CommentNode -> celtech.roboxbase.postprocessor.nouveau.nodes.a:
    15:17:void <init>(java.lang.String) -> <init>
    22:22:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.b:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion extrusion -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> d
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition nozzlePosition -> e
    double elidedExtrusion -> f
    20:28:void <init>() -> <init>
    33:33:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion getExtrusion() -> b
    39:39:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    45:45:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    51:51:celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition getNozzlePosition() -> e
    56:56:double getElidedExtrusion() -> f
    61:62:void setElidedExtrusion(double) -> a
    67:101:java.lang.String renderForOutput() -> a
    107:119:double timeToReach(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> a
    125:132:celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode clone() -> g
    20:20:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.FillSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.c:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    17:21:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeDirectiveNode -> celtech.roboxbase.postprocessor.nouveau.nodes.d:
    int gValue -> a
    boolean sValueSet -> c
    int sValue -> d
    boolean pValueSet -> e
    int pValue -> f
    10:17:void <init>() -> <init>
    21:21:java.lang.Integer getGValue() -> b
    26:27:void setGValue(int) -> a
    31:33:void clearPValue() -> c
    37:39:void setPValue(int) -> b
    43:48:java.util.Optional getPValue() -> d
    54:56:void clearSValue() -> e
    60:62:void setSValue(int) -> c
    66:71:java.util.Optional getSValue() -> f
    78:96:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode -> celtech.roboxbase.postprocessor.nouveau.nodes.e:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Comment comment -> a
    java.util.Optional gCodeLineNumber -> c
    java.util.Optional parent -> d
    java.util.LinkedList children -> b
    java.util.Optional finishTimeFromStartOfPrint_secs -> e
    18:26:void <init>() -> <init>
    30:30:boolean isLeaf() -> h
    35:35:boolean hasParent() -> i
    40:102:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin childrenAndMeBackwardsIterator() -> j
    107:139:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin meAndSiblingsBackwardsIterator() -> k
    148:180:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin siblingsBackwardsIterator() -> l
    185:217:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin siblingsIterator() -> m
    222:254:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin meAndSiblingsIterator() -> n
    259:330:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithStartPoint treeSpanningIterator(java.util.List) -> a
    335:423:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin treeSpanningBackwardsIterator() -> o
    428:523:celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin treeSpanningBackwardsAndMeIterator() -> p
    528:528:java.util.Iterator childIterator() -> q
    533:533:java.util.Iterator childBackwardsIterator() -> r
    538:538:java.util.LinkedList getChildren() -> s
    543:550:void addSiblingBefore(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    554:561:void addSiblingAfter(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> b
    565:570:void removeFromParent() -> t
    605:605:java.util.Optional getParent() -> u
    614:626:java.util.Optional getSiblingBefore() -> v
    635:647:java.util.Optional getSiblingAfter() -> w
    652:657:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getAbsolutelyTheLastEvent() -> x
    667:669:void addChildAtEnd(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> c
    677:679:void addChildAtStart(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> d
    688:688:java.lang.String getCommentText() -> y
    694:694:java.lang.String getRawCommentText() -> z
    699:700:void setCommentText(java.lang.String) -> a
    704:705:void appendCommentText(java.lang.String) -> b
    709:709:java.util.Optional getGCodeLineNumber() -> A
    714:715:void setGCodeLineNumber(int) -> d
    719:719:java.util.Optional getFinishTimeFromStartOfPrint_secs() -> B
    724:725:void setFinishTimeFromStartOfPrint_secs(double) -> b
    15:15:java.util.Optional access$000(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> e
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$1 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$1:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    java.util.Iterator childIterator -> d
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    41:44:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    49:50:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    55:55:boolean hasNext() -> hasNext
    61:90:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    97:97:void remove() -> remove
    41:41:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$2 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$2:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    108:108:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    115:117:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    122:122:boolean hasNext() -> hasNext
    128:128:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    134:134:void remove() -> remove
    108:108:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$3 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$3:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    149:149:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    156:158:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    163:163:boolean hasNext() -> hasNext
    169:169:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    175:175:void remove() -> remove
    149:149:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$4 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$4:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    186:186:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    193:195:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    200:200:boolean hasNext() -> hasNext
    206:206:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    212:212:void remove() -> remove
    186:186:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$5 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$5:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    223:223:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    230:232:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    237:237:boolean hasNext() -> hasNext
    243:243:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    249:249:void remove() -> remove
    223:223:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$6 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$6:
    boolean needToConsumeInitialValue -> c
    int childIndex -> d
    java.util.Iterator childIterator -> e
    java.util.List val$startNodeHierarchy -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> b
    260:260:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,java.util.List,java.util.List) -> <init>
    268:270:boolean hasNext() -> hasNext
    276:300:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    306:321:void initialiseWithList(java.util.List) -> a
    326:326:void remove() -> remove
    260:260:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$7 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$7:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin parentIterator -> d
    java.util.Iterator childIterator -> e
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    336:340:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    345:353:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    358:361:boolean hasNext() -> hasNext
    367:411:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    418:418:void remove() -> remove
    336:336:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode$8 -> celtech.roboxbase.postprocessor.nouveau.nodes.e$8:
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode originNode -> b
    int currentIndex -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin parentIterator -> d
    java.util.Iterator childIterator -> e
    boolean originNodeConsumed -> f
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode this$0 -> a
    429:434:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    439:447:void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
    452:455:boolean hasNext() -> hasNext
    461:511:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode next() -> a
    518:518:void remove() -> remove
    429:429:java.lang.Object next() -> next
celtech.roboxbase.postprocessor.nouveau.nodes.InnerPerimeterSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.f:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    17:21:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.IslandNode -> celtech.roboxbase.postprocessor.nouveau.nodes.g:
    7:7:void <init>() -> <init>
    12:12:java.lang.String toString() -> toString
celtech.roboxbase.postprocessor.nouveau.nodes.LayerChangeDirectiveNode -> celtech.roboxbase.postprocessor.nouveau.nodes.h:
    int layerNumber -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> d
    boolean isToolChangeRequired -> e
    int toolNumber -> f
    13:19:void <init>() -> <init>
    25:25:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    31:31:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    36:36:int getLayerNumber() -> b
    41:42:void setLayerNumber(int) -> a
    47:49:void changeToolDuringMovement(int) -> b
    54:72:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.LayerNode -> celtech.roboxbase.postprocessor.nouveau.nodes.i:
    int layerNumber -> a
    int numberOfUnrecognisedElements -> c
    double layerHeight_mm -> d
    15:21:void <init>() -> <init>
    15:26:void <init>(int) -> <init>
    30:31:void setLayerNumber(int) -> a
    35:35:int getLayerNumber() -> b
    40:40:int getNumberOfUnrecognisedElements() -> c
    45:46:void setNumberOfUnrecognisedElements(int) -> b
    50:51:void setLayerHeight_mm(double) -> a
    55:55:double getLayerHeight_mm() -> d
    61:66:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.MCodeNode -> celtech.roboxbase.postprocessor.nouveau.nodes.j:
    int mNumber -> a
    boolean sPresent -> c
    boolean sNumberPresent -> d
    int sNumber -> e
    boolean tPresent -> f
    boolean tNumberPresent -> g
    int tNumber -> h
    boolean ePresent -> i
    boolean dPresent -> j
    13:24:void <init>() -> <init>
    13:29:void <init>(int) -> <init>
    37:37:int getMNumber() -> b
    46:47:void setMNumber(int) -> a
    55:55:int getSNumber() -> c
    64:67:void setSNumber(int) -> b
    75:76:void setSOnly(boolean) -> a
    80:80:boolean isSOnly() -> d
    85:85:boolean isSAndNumber() -> e
    94:94:int getTNumber() -> f
    103:106:void setTNumber(int) -> c
    114:115:void setTOnly(boolean) -> b
    119:119:boolean isTOnly() -> g
    124:124:boolean isTAndNumber() -> C
    129:130:void setEOnly(boolean) -> c
    134:134:boolean isEPresent() -> D
    139:140:void setDOnly(boolean) -> d
    144:144:boolean isDPresent() -> E
    154:189:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.MergeableWithToolchange -> celtech.roboxbase.postprocessor.nouveau.nodes.k:
    void changeToolDuringMovement(int) -> b
celtech.roboxbase.postprocessor.nouveau.nodes.NodeProcessingException -> celtech.roboxbase.postprocessor.nouveau.nodes.NodeProcessingException:
    17:18:void <init>() -> <init>
    28:29:void <init>(java.lang.String,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> <init>
    39:40:void <init>(java.lang.String,celtech.roboxbase.postprocessor.nouveau.nodes.providers.Renderable) -> <init>
celtech.roboxbase.postprocessor.nouveau.nodes.NozzleValvePositionDuringTravelNode -> celtech.roboxbase.postprocessor.nouveau.nodes.l:
    boolean fastAsPossible -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition nozzlePosition -> c
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> d
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> e
    15:21:void <init>() -> <init>
    25:26:void setMoveAsFastAsPossible(boolean) -> a
    31:65:java.lang.String renderForOutput() -> a
    71:71:celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition getNozzlePosition() -> e
    77:77:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    83:83:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
celtech.roboxbase.postprocessor.nouveau.nodes.NozzleValvePositionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.m:
    boolean fastAsPossible -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition nozzlePosition -> c
    double replenishExtrusionE -> d
    double replenishExtrusionD -> e
    14:20:void <init>() -> <init>
    24:25:void setMoveAsFastAsPossible(boolean) -> a
    29:30:void setReplenishExtrusionE(double) -> a
    34:35:void setReplenishExtrusionD(double) -> c
    40:71:java.lang.String renderForOutput() -> a
    77:77:celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition getNozzlePosition() -> e
celtech.roboxbase.postprocessor.nouveau.nodes.ObjectDelineationNode -> celtech.roboxbase.postprocessor.nouveau.nodes.n:
    int objectNumber -> a
    9:12:void <init>() -> <init>
    16:16:int getObjectNumber() -> b
    21:22:void setObjectNumber(int) -> a
    27:27:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.OrphanObjectDelineationNode -> celtech.roboxbase.postprocessor.nouveau.nodes.o:
    int potentialObjectNumber -> a
    9:11:void <init>() -> <init>
    15:15:int getPotentialObjectNumber() -> b
    20:21:void setPotentialObjectNumber(int) -> a
    26:26:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.OrphanSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.p:
    9:9:void <init>() -> <init>
    14:14:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.OuterPerimeterSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.q:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    17:20:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.PreambleNode -> celtech.roboxbase.postprocessor.nouveau.nodes.r:
    11:12:void <init>() -> <init>
    17:17:java.lang.String toString() -> toString
celtech.roboxbase.postprocessor.nouveau.nodes.ReplenishNode -> celtech.roboxbase.postprocessor.nouveau.nodes.s:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion extrusion -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> c
    18:24:void <init>() -> <init>
    30:44:java.lang.String renderForOutput() -> a
    50:50:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion getExtrusion() -> b
    56:56:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
celtech.roboxbase.postprocessor.nouveau.nodes.RetractNode -> celtech.roboxbase.postprocessor.nouveau.nodes.t:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion extrusion -> c
    double extrusionSinceLastRetract -> d
    celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode priorExtrusion -> e
    java.util.List sectionsToConsider -> f
    15:21:void <init>() -> <init>
    26:26:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion getExtrusion() -> b
    32:32:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    37:38:void setExtrusionSinceLastRetract(double) -> a
    42:42:double getExtrusionSinceLastRetract() -> c
    47:48:void setPriorExtrusionNode(celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode) -> a
    52:52:celtech.roboxbase.postprocessor.nouveau.nodes.ExtrusionNode getPriorExtrusionNode() -> e
    57:58:void setSectionsToConsider(java.util.List) -> b
    62:62:java.util.List getSectionsToConsider() -> f
    68:68:java.lang.String toString() -> toString
    74:82:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.SectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.u:
    boolean totalExtrusionValid -> a
    double totalExtrusion -> c
    9:13:void <init>() -> <init>
    17:19:void setTotalExtrusion(double) -> a
    23:36:void recalculateExtrusion() -> b
    40:40:boolean isTotalExtrusionValid() -> c
    45:50:double getTotalExtrusion() -> d
celtech.roboxbase.postprocessor.nouveau.nodes.SkinSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.v:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    17:21:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.SkirtSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.w:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    16:19:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.StylusLiftNode -> celtech.roboxbase.postprocessor.nouveau.nodes.x:
    float liftValue -> a
    12:17:void <init>(float) -> <init>
    21:21:float getLiftValue() -> b
    26:27:void setLiftValue(float) -> a
    32:39:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.StylusPlungeNode -> celtech.roboxbase.postprocessor.nouveau.nodes.y:
    float plungeValue -> a
    12:17:void <init>(float) -> <init>
    21:21:float getLiftValue() -> b
    26:27:void setLiftValue(float) -> a
    32:39:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.StylusScribeNode -> celtech.roboxbase.postprocessor.nouveau.nodes.z:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> c
    boolean isToolChangeRequired -> d
    int toolNumber -> e
    17:22:void <init>() -> <init>
    29:47:java.lang.String renderForOutput() -> a
    53:53:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    59:59:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    65:67:void changeToolDuringMovement(int) -> b
    72:84:double timeToReach(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> a
    90:95:celtech.roboxbase.postprocessor.nouveau.nodes.StylusScribeNode clone() -> b
    17:17:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.StylusSwivelNode -> celtech.roboxbase.postprocessor.nouveau.nodes.aa:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> c
    boolean isToolChangeRequired -> d
    int toolNumber -> e
    17:22:void <init>() -> <init>
    29:47:java.lang.String renderForOutput() -> a
    53:53:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    59:59:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    65:67:void changeToolDuringMovement(int) -> b
    72:84:double timeToReach(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> a
    90:95:celtech.roboxbase.postprocessor.nouveau.nodes.StylusSwivelNode clone() -> b
    17:17:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.SupportInterfaceSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ab:
    java.lang.String designator -> a
    14:15:void <init>() -> <init>
    20:23:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.SupportSectionNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ac:
    java.lang.String designator -> a
    9:9:void <init>() -> <init>
    16:19:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.ToolReselectNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ad:
    int toolNumber -> a
    9:14:void <init>() -> <init>
    18:18:int getToolNumber() -> b
    23:24:void setToolNumber(int) -> a
    29:34:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.ToolSelectNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ae:
    int toolNumber -> a
    boolean outputSuppressed -> c
    double estimatedDuration_ignoresFeedrate -> d
    java.util.Optional startTimeFromStartOfPrint_secs -> e
    10:19:void <init>() -> <init>
    23:23:int getToolNumber() -> b
    28:29:void setToolNumber(int) -> a
    33:34:void suppressNodeOutput(boolean) -> a
    38:38:boolean isNodeOutputSuppressed() -> c
    43:44:void setEstimatedDuration(double) -> a
    48:48:double getEstimatedDuration() -> d
    53:53:java.util.Optional getStartTimeFromStartOfPrint_secs() -> e
    58:59:void setStartTimeFromStartOfPrint_secs(double) -> c
    64:81:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.TravelNode -> celtech.roboxbase.postprocessor.nouveau.nodes.af:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement movement -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> c
    boolean isToolChangeRequired -> d
    int toolNumber -> e
    17:22:void <init>() -> <init>
    29:47:java.lang.String renderForOutput() -> a
    53:53:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
    59:59:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    65:67:void changeToolDuringMovement(int) -> b
    72:84:double timeToReach(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> a
    90:95:celtech.roboxbase.postprocessor.nouveau.nodes.TravelNode clone() -> b
    17:17:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.UnrecognisedLineNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ag:
    java.lang.String discardedLine -> a
    15:17:void <init>(java.lang.String) -> <init>
    21:21:java.lang.String getDiscardedLine() -> b
    27:27:java.lang.String renderForOutput() -> a
    33:33:java.lang.String toString() -> toString
celtech.roboxbase.postprocessor.nouveau.nodes.UnretractNode -> celtech.roboxbase.postprocessor.nouveau.nodes.ah:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate feedrate -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion extrusion -> c
    13:16:void <init>() -> <init>
    21:21:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion getExtrusion() -> b
    27:27:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
    33:41:java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.DurationCalculationException -> celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.DurationCalculationException:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider fromNode -> fromNode
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider toNode -> toNode
    23:26:void <init>(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider,celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> <init>
    38:42:void <init>(java.lang.String,celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider,celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> <init>
    46:46:celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider getFromNode() -> a
    51:51:celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider getToNode() -> b
celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithOrigin -> celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.a:
    10:10:void <init>() -> <init>
    void setOriginNode(celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode) -> a
celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.IteratorWithStartPoint -> celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.b:
    15:17:void <init>(java.util.List) -> <init>
    void initialiseWithList(java.util.List) -> a
celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.SupportsPrintTimeCalculation -> celtech.roboxbase.postprocessor.nouveau.nodes.nodeFunctions.c:
    double timeToReach(celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider) -> a
celtech.roboxbase.postprocessor.nouveau.nodes.providers.Comment -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.a:
    java.lang.String comment -> a
    11:15:void <init>() -> <init>
    11:20:void <init>(java.lang.String) -> <init>
    24:24:java.lang.String getComment() -> a
    29:30:void setComment(java.lang.String) -> a
    34:35:void appendComment(java.lang.String) -> b
    39:46:java.lang.String renderComments() -> b
    51:54:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Comment clone() -> c
    7:7:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.b:
    boolean isESet -> a
    float e -> b
    boolean isDSet -> c
    float d -> d
    11:17:void <init>() -> <init>
    21:21:float getE() -> b
    30:39:void setE(float) -> a
    43:43:boolean isEInUse() -> c
    48:50:void eNotInUse() -> d
    54:54:boolean isDInUse() -> e
    59:61:void dNotInUse() -> f
    69:69:float getD() -> g
    78:87:void setD(float) -> b
    91:93:void extrudeUsingEOnly() -> h
    97:99:void extrudeUsingDOnly() -> i
    104:127:java.lang.String renderForOutput() -> a
    132:139:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion clone() -> j
    11:11:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.providers.ExtrusionProvider -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.c:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Extrusion getExtrusion() -> b
celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.d:
    boolean isFeedRateSet -> a
    int feedRate_mmPerMin -> b
    double feedRate_mmPerSec -> c
    7:11:void <init>() -> <init>
    15:15:boolean isFeedrateSet() -> b
    25:25:int getFeedRate_mmPerMin() -> c
    35:35:double getFeedRate_mmPerSec() -> d
    44:47:void setFeedRate_mmPerMin(int) -> a
    55:58:void setFeedRate_mmPerSec(double) -> a
    67:75:java.lang.String renderForOutput() -> a
    80:86:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate clone() -> e
    7:7:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.providers.FeedrateProvider -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.e:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Feedrate getFeedrate() -> d
celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.f:
    boolean isXSet -> a
    double x -> b
    boolean isYSet -> c
    double y -> d
    boolean isZSet -> e
    double z -> f
    13:21:void <init>() -> <init>
    26:26:boolean isXSet() -> b
    35:35:double getX() -> c
    44:46:void setX(double) -> a
    50:50:boolean isYSet() -> d
    59:59:double getY() -> e
    68:70:void setY(double) -> b
    74:74:boolean isZSet() -> f
    83:83:double getZ() -> g
    92:94:void setZ(double) -> c
    103:131:java.lang.String renderForOutput() -> a
    136:136:org.apache.commons.math3.geometry.euclidean.twod.Vector2D toVector2D() -> h
    141:141:org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D() -> i
    146:155:celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement clone() -> j
    13:13:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.MovementProvider:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.Movement getMovement() -> c
celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.g:
    boolean isBSet -> a
    double b -> b
    boolean partialOpen -> c
    11:16:void <init>() -> <init>
    24:24:boolean isBSet() -> b
    33:33:double getB() -> c
    42:48:void setB(double) -> a
    52:54:void bNotInUse() -> d
    58:59:void setPartialOpen(boolean) -> a
    63:63:boolean isPartialOpen() -> e
    69:81:java.lang.String renderForOutput() -> a
    86:89:celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition clone() -> f
    11:11:java.lang.Object clone() -> clone
celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePositionProvider -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.h:
    celtech.roboxbase.postprocessor.nouveau.nodes.providers.NozzlePosition getNozzlePosition() -> e
celtech.roboxbase.postprocessor.nouveau.nodes.providers.Renderable -> celtech.roboxbase.postprocessor.nouveau.nodes.providers.i:
    java.lang.String renderForOutput() -> a
celtech.roboxbase.postprocessor.nouveau.spiralPrint.CuraSpiralPrintFixer -> l.a:
    15:15:void <init>() -> <init>
    20:52:void fixSpiralPrint(java.util.List) -> a
celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent -> celtech.roboxbase.postprocessor.nouveau.timeCalc.a:
    double volume -> a
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent duration -> b
    11:15:void <init>() -> <init>
    19:20:void incrementVolume(double) -> a
    24:24:double getVolume() -> a
    29:29:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent getDuration() -> b
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc -> celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc:
    libertysystems.stenographer.Stenographer steno -> a
    double timeForInitialHoming_s -> b
    double timeForPurgeAndLevelling_s -> c
    double timeForNozzleSelect_s -> d
    double zMoveRate_mms -> e
    double nozzlePositionChange_s -> f
    double movementFudgeFactor -> g
    double TIMER_FREQ -> h
    double SPEED_UNITS -> i
    double ACCELERATION_UNITS -> j
    double MAX_SPEED -> k
    double MIN_SPEED -> l
    double ACCELERATION -> m
    double FILAMENT_CROSS_SECTIONAL_AREA -> n
    int N_AXES -> o
    double[] MAX_SPEEDS -> p
    double[] STEPS_PER_UNIT -> q
    celtech.roboxbase.printerControl.model.Head$HeadType currentHeadType -> r
    46:89:void <init>(celtech.roboxbase.printerControl.model.Head$HeadType) -> <init>
    104:329:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalcResult calculateVolumeAndTimeOLD(java.util.List) -> a
    345:697:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalcResult calculateVolumeAndTime(java.util.List) -> b
    728:751:double calculate_end_speed(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove,celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove) -> a
    756:777:double calculate_duration(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove) -> a
    790:852:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMoveResult calculate_run_time(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove,double,double[]) -> a
    68:73:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$1 -> celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$1:
    int[] $SwitchMap$celtech$roboxbase$postprocessor$nouveau$timeCalc$TimeAndVolumeCalc$TimeAllocation -> a
    277:277:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove -> celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$a:
    double[] inc -> a
    double steps -> b
    double target_speed -> c
    double end_speed -> d
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc this$0 -> e
    713:716:void <init>(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc) -> <init>
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMoveResult -> celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$b:
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove tMove -> b
    double duration -> c
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc this$0 -> a
    704:707:void <init>(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc,celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove,double) -> <init>
    700:700:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMove access$000(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMoveResult) -> a
    700:700:double access$100(celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TMoveResult) -> b
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation -> celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation:
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation NOT_ALLOCATED -> NOT_ALLOCATED
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation DEPENDS_ON_E -> DEPENDS_ON_E
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation DEPENDS_ON_D -> DEPENDS_ON_D
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation DEPENDS_ON_SELECTED_TOOL -> DEPENDS_ON_SELECTED_TOOL
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation FEEDRATE_INDEPENDENT -> FEEDRATE_INDEPENDENT
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation[] $VALUES -> $VALUES
    80:80:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation[] values() -> values
    80:80:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalc$TimeAllocation valueOf(java.lang.String) -> valueOf
    80:80:void <init>(java.lang.String,int) -> <init>
    80:83:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeAndVolumeCalcResult -> celtech.roboxbase.postprocessor.nouveau.timeCalc.b:
    celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent extruderEStats -> a
    celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent extruderDStats -> b
    celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent feedrateIndependentDuration -> c
    17:21:void <init>(celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent,celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent,celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent) -> <init>
    25:25:celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent getExtruderEStats() -> a
    30:30:celtech.roboxbase.postprocessor.nouveau.timeCalc.ExtruderTimeAndVolumeCalcComponent getExtruderDStats() -> b
    35:35:celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent getFeedrateIndependentDuration() -> c
celtech.roboxbase.postprocessor.nouveau.timeCalc.TimeCalcComponent -> celtech.roboxbase.postprocessor.nouveau.timeCalc.c:
    double total_duration -> a
    java.util.Map layerNumberToPredictedDuration -> b
    14:18:void <init>() -> <init>
    22:22:double getTotal_duration() -> a
    27:27:java.util.Map getLayerNumberToPredictedDuration() -> b
    32:40:void incrementDuration(int,double) -> a
celtech.roboxbase.postprocessor.nouveau.verifier.OutputVerifier -> celtech.roboxbase.postprocessor.nouveau.verifier.a:
    celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet featureSet -> a
    30:32:void <init>(celtech.roboxbase.postprocessor.nouveau.PostProcessorFeatureSet) -> <init>
    36:138:java.util.List verifyAllLayers(java.util.List,celtech.roboxbase.printerControl.model.Head$HeadType) -> a
celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult -> celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult:
    celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType resultType -> a
    celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode nodeInError -> b
    int layerNumber -> c
    int toolnumber -> d
    39:44:void <init>(celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType,celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode,int,int) -> <init>
    48:48:celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType getResultType() -> a
    53:53:celtech.roboxbase.postprocessor.nouveau.nodes.GCodeEventNode getNodeInError() -> b
    58:58:int getLayerNumber() -> c
    63:63:int getToolnumber() -> d
celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType -> celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType:
    celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType EXTRUDE_NOT_FULLY_OPEN -> EXTRUDE_NOT_FULLY_OPEN
    celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType EXTRUDE_NO_HEAT -> EXTRUDE_NO_HEAT
    java.lang.String description -> description
    celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType[] $VALUES -> $VALUES
    11:11:celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType[] values() -> values
    11:11:celtech.roboxbase.postprocessor.nouveau.verifier.VerifierResult$ResultType valueOf(java.lang.String) -> valueOf
    20:22:void <init>(java.lang.String,int,java.lang.String) -> <init>
    26:26:java.lang.String getDescription() -> getDescription
    11:15:void <clinit>() -> <clinit>
celtech.roboxbase.postprocessor.stylus.PrintableShapesToGCode -> m.a:
    boolean isInContact -> a
    libertysystems.stenographer.Stenographer steno -> b
    41:41:void <init>() -> <init>
    50:59:java.util.List parsePrintableShapes(celtech.roboxbase.utils.models.PrintableShapes) -> a
    64:187:java.util.List renderShapeToGCode(celtech.roboxbase.utils.models.ShapeForProcessing) -> a
    192:192:java.util.List renderCurveToGCodeNode(javafx.scene.shape.Shape,celtech.roboxbase.utils.twod.ShapeToWorldTransformer) -> a
    197:230:java.util.List renderCurveToGCodeNode(javafx.scene.shape.Shape,celtech.roboxbase.utils.twod.ShapeToWorldTransformer,int) -> a
    235:284:void writeGCodeToFile(java.lang.String,java.util.List) -> a
    288:293:celtech.roboxbase.postprocessor.nouveau.nodes.TravelNode createTravelNode(java.lang.String,int,double,double) -> a
    298:303:celtech.roboxbase.postprocessor.nouveau.nodes.StylusScribeNode createStylusScribeNode(java.lang.String,int,double,double) -> b
    44:46:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.PrintActionUnavailableException -> celtech.roboxbase.printerControl.PrintActionUnavailableException:
    13:14:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.PrintJob -> celtech.roboxbase.printerControl.a:
    java.lang.String jobUUID -> a
    java.lang.String printJobDirectory -> b
    celtech.roboxbase.postprocessor.PrintJobStatistics statistics -> c
    17:26:void <init>(java.lang.String) -> <init>
    17:32:void <init>(java.lang.String,java.lang.String) -> <init>
    42:42:celtech.roboxbase.printerControl.PrintJob readJobFromDirectory(java.lang.String) -> a
    54:54:celtech.roboxbase.printerControl.PrintJob readJobFromDirectory(java.lang.String,java.lang.String) -> a
    64:67:java.lang.String getGCodeFileLocation() -> a
    77:78:boolean roboxisedFileExists() -> b
    86:86:java.lang.String getJobUUID() -> c
    96:96:java.lang.String getRoboxisedFileLocation() -> d
    104:108:celtech.roboxbase.postprocessor.PrintJobStatistics getStatistics() -> e
celtech.roboxbase.printerControl.PrintJobRejectedException -> celtech.roboxbase.printerControl.PrintJobRejectedException:
    14:15:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.PrintQueueStatus -> celtech.roboxbase.printerControl.PrintQueueStatus:
    celtech.roboxbase.printerControl.PrintQueueStatus IDLE -> IDLE
    celtech.roboxbase.printerControl.PrintQueueStatus RUNNING_MACRO -> RUNNING_MACRO
    celtech.roboxbase.printerControl.PrintQueueStatus PRINTING -> PRINTING
    celtech.roboxbase.printerControl.PrintQueueStatus[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.printerControl.PrintQueueStatus[] values() -> values
    7:7:celtech.roboxbase.printerControl.PrintQueueStatus valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.PrinterStatus -> celtech.roboxbase.printerControl.PrinterStatus:
    celtech.roboxbase.printerControl.PrinterStatus IDLE -> IDLE
    celtech.roboxbase.printerControl.PrinterStatus PRINTING_PROJECT -> PRINTING_PROJECT
    celtech.roboxbase.printerControl.PrinterStatus RUNNING_TEST -> RUNNING_TEST
    celtech.roboxbase.printerControl.PrinterStatus RUNNING_MACRO_FILE -> RUNNING_MACRO_FILE
    celtech.roboxbase.printerControl.PrinterStatus REMOVING_HEAD -> REMOVING_HEAD
    celtech.roboxbase.printerControl.PrinterStatus PURGING_HEAD -> PURGING_HEAD
    celtech.roboxbase.printerControl.PrinterStatus OPENING_DOOR -> OPENING_DOOR
    celtech.roboxbase.printerControl.PrinterStatus CALIBRATING_NOZZLE_ALIGNMENT -> CALIBRATING_NOZZLE_ALIGNMENT
    celtech.roboxbase.printerControl.PrinterStatus CALIBRATING_NOZZLE_HEIGHT -> CALIBRATING_NOZZLE_HEIGHT
    celtech.roboxbase.printerControl.PrinterStatus CALIBRATING_NOZZLE_OPENING -> CALIBRATING_NOZZLE_OPENING
    java.lang.String i18nString -> i18nString
    celtech.roboxbase.printerControl.PrinterStatus[] $VALUES -> $VALUES
    9:9:celtech.roboxbase.printerControl.PrinterStatus[] values() -> values
    9:9:celtech.roboxbase.printerControl.PrinterStatus valueOf(java.lang.String) -> valueOf
    26:28:void <init>(java.lang.String,int,java.lang.String) -> <init>
    36:36:java.lang.String getI18nString() -> getI18nString
    46:46:java.lang.String toString() -> toString
    9:21:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.PurgeRequiredException -> celtech.roboxbase.printerControl.PurgeRequiredException:
    13:14:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.comms.commands.FilenameStartsWithFilter -> celtech.roboxbase.printerControl.comms.commands.a:
    java.lang.String baseFilename -> a
    16:18:void <init>(java.lang.String) -> <init>
    23:23:boolean accept(java.io.File,java.lang.String) -> accept
celtech.roboxbase.printerControl.comms.commands.GCodeConstants -> celtech.roboxbase.printerControl.comms.commands.b:
    java.lang.String extruderRelativeMoveMode -> a
    java.lang.String carriageRelativeMoveMode -> b
    java.lang.String carriageAbsoluteMoveMode -> c
    java.lang.String setAmbientTemperature -> d
    java.lang.String setFirstLayerBedTemperatureTarget -> e
    java.lang.String setBedTemperatureTarget -> f
    java.lang.String goToTargetFirstLayerBedTemperature -> g
    java.lang.String goToTargetFirstLayerBedTemperatureE -> h
    java.lang.String goToTargetFirstLayerBedTemperatureD -> i
    java.lang.String goToTargetBedTemperature -> j
    java.lang.String waitForBedTemperature -> k
    java.lang.String switchBedHeaterOff -> l
    java.lang.String setFirstLayerNozzleHeaterTemperatureTarget0 -> m
    java.lang.String setFirstLayerNozzleHeaterTemperatureTarget1 -> n
    java.lang.String setNozzleHeaterTemperatureTarget0 -> o
    java.lang.String setNozzleHeaterTemperatureTarget1 -> p
    java.lang.String goToTargetFirstLayerNozzleHeaterTemperature0 -> q
    java.lang.String goToTargetFirstLayerNozzleHeaterTemperature1 -> r
    java.lang.String goToTargetNozzleHeaterTemperature0 -> s
    java.lang.String goToTargetNozzleHeaterTemperature1 -> t
    java.lang.String waitForNozzleHeaterTemperature0 -> u
    java.lang.String waitForNozzleHeaterTemperature1 -> v
    java.lang.String switchNozzleHeaterOff0 -> w
    java.lang.String switchNozzleHeaterOff1 -> x
    java.lang.String homeXAxis -> y
    java.lang.String homeYAxis -> z
    java.lang.String homeZAxis -> A
    java.lang.String probeZAxis -> B
    java.lang.String queryZHomeDelta -> C
    java.lang.String switchOnHeadLEDs -> D
    java.lang.String switchOffHeadLEDs -> E
    java.lang.String homeNozzle -> F
    java.lang.String closeNozzle -> G
    java.lang.String openNozzle -> H
    java.lang.String openNozzleExtra -> I
    java.lang.String extrude -> J
    java.lang.String selectNozzle -> K
    java.lang.String disableStepperMotorsUntilNextMove -> L
    java.lang.String ejectFilament -> M
    java.lang.String setHeadFanSpeed -> N
    java.lang.String switchOnHeadFan -> O
    java.lang.String switchOffHeadFan -> P
    java.lang.String goToOpenDoorPosition -> Q
    java.lang.String goToOpenDoorPositionDontWait -> R
    7:7:void <init>() -> <init>
celtech.roboxbase.printerControl.comms.commands.GCodeMacros -> celtech.roboxbase.printerControl.comms.commands.GCodeMacros:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String macroDefinitionString -> b
    27:27:void <init>() -> <init>
    137:178:java.util.ArrayList getMacroContents(java.lang.String,java.lang.String,boolean,boolean,boolean) -> a
    183:183:java.lang.String cleanMacroName(java.lang.String) -> b
    198:273:java.util.ArrayList appendMacroContents(java.util.ArrayList,java.util.ArrayList,java.lang.String,java.lang.String,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator) -> a
    296:326:java.lang.String getFilename(java.lang.String,java.lang.String,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator) -> a
    359:455:int scoreMacroFilename(java.lang.String,java.lang.String,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator) -> b
    460:460:boolean isMacroExecutionDirective(java.lang.String) -> a
    465:474:java.lang.String getMacroNameFromDirective(java.lang.String) -> c
    483:503:int getNumberOfOperativeLinesInMacro(java.lang.String,java.lang.String,boolean,boolean,boolean) -> b
    508:524:void sendMacroLineByLine(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.configuration.Macro,celtech.roboxbase.utils.tasks.Cancellable) -> a
    534:534:int countLinesInMacroFile(java.io.File,java.lang.String) -> a
    554:587:int countLinesInMacroFile(java.io.File,java.lang.String,java.lang.String,boolean,boolean,boolean) -> a
    261:263:void lambda$appendMacroContents$0(java.lang.StringBuilder,java.lang.String) -> a
    30:31:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.comms.commands.GCodeMacros$FilenameEncoder -> celtech.roboxbase.printerControl.comms.commands.GCodeMacros$a:
    java.lang.String getFilenameCode() -> getFilenameCode
celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator -> celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator:
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator NOZZLE_0 -> NOZZLE_0
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator NOZZLE_1 -> NOZZLE_1
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator BOTH -> BOTH
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator DONT_CARE -> DONT_CARE
    java.lang.String filenameCode -> filenameCode
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator[] $VALUES -> $VALUES
    79:79:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator[] values() -> values
    79:79:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator valueOf(java.lang.String) -> valueOf
    93:95:void <init>(java.lang.String,int,java.lang.String) -> <init>
    100:100:java.lang.String getFilenameCode() -> getFilenameCode
    105:116:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator getEnumForFilenameCode(java.lang.String) -> getEnumForFilenameCode
    79:88:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator -> celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator:
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator SAFETIES_OFF -> SAFETIES_OFF
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator SAFETIES_ON -> SAFETIES_ON
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator DONT_CARE -> DONT_CARE
    java.lang.String filenameCode -> filenameCode
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator[] $VALUES -> $VALUES
    40:40:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator[] values() -> values
    40:40:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator valueOf(java.lang.String) -> valueOf
    52:54:void <init>(java.lang.String,int,java.lang.String) -> <init>
    59:59:java.lang.String getFilenameCode() -> getFilenameCode
    64:75:celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator getEnumForFilenameCode(java.lang.String) -> getEnumForFilenameCode
    40:47:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.comms.commands.MacroFilenameFilter -> celtech.roboxbase.printerControl.comms.commands.c:
    java.lang.String baseMacroName -> a
    java.lang.String headTypeCode -> b
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator nozzleUse -> c
    celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator safeties -> d
    java.lang.String separator -> e
    19:30:void <init>(java.lang.String,java.lang.String,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$NozzleUseIndicator,celtech.roboxbase.printerControl.comms.commands.GCodeMacros$SafetyIndicator) -> <init>
    35:89:boolean accept(java.io.File,java.lang.String) -> accept
    94:101:boolean doesAttributeExist(java.lang.String[],java.lang.String) -> a
celtech.roboxbase.printerControl.comms.commands.MacroLoadException -> celtech.roboxbase.printerControl.comms.commands.MacroLoadException:
    15:16:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.comms.commands.MacroPrintException -> celtech.roboxbase.printerControl.comms.commands.MacroPrintException:
    14:15:void <init>() -> <init>
    24:25:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.comms.commands.PrinterIDContainer -> celtech.roboxbase.printerControl.comms.commands.d:
    13:13:void <init>() -> <init>
celtech.roboxbase.printerControl.model.ETCCalculator -> celtech.roboxbase.printerControl.model.a:
    java.util.List layerNumberToLineNumber -> d
    java.util.Map layerNumberToPredictedDuration_E -> e
    java.util.Map layerNumberToPredictedDuration_D -> f
    java.util.Map layerNumberToPredictedDuration_feedrateIndependent -> g
    java.util.List layerNumberToTotalPredictedDuration -> h
    double totalPredictedDurationAllLayers -> a
    double currentFeedrateMultiplierE -> i
    double currentFeedrateMultiplierD -> j
    int PREDICTED_BED_HEAT_RATE -> b
    celtech.roboxbase.printerControl.model.Printer printer -> k
    boolean $assertionsDisabled -> c
    33:84:void <init>(celtech.roboxbase.printerControl.model.Printer,java.util.Map,java.util.Map,java.util.Map,java.util.List) -> <init>
    88:101:void updateFromFeedrateChange() -> a
    110:112:int getETCPredicted(int) -> a
    122:130:int getBedHeatingTime() -> b
    141:150:int getPredictedRemainingPrintTime(int) -> d
    158:166:int getCurrentLayerNumberForLineNumber(int) -> b
    177:195:double getPartialDurationInLayer(int,int) -> a
    204:213:double getPercentCompleteAtLine(int) -> c
    18:18:void access$000(celtech.roboxbase.printerControl.model.ETCCalculator) -> a
    18:45:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.ETCCalculator$1 -> celtech.roboxbase.printerControl.model.a$1:
    celtech.roboxbase.printerControl.model.ETCCalculator this$0 -> a
    68:68:void <init>(celtech.roboxbase.printerControl.model.ETCCalculator) -> <init>
    72:73:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    68:68:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.ETCCalculator$2 -> celtech.roboxbase.printerControl.model.a$2:
    celtech.roboxbase.printerControl.model.ETCCalculator this$0 -> a
    77:77:void <init>(celtech.roboxbase.printerControl.model.ETCCalculator) -> <init>
    81:82:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    77:77:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.Extruder -> celtech.roboxbase.printerControl.model.b:
    libertysystems.stenographer.Stenographer steno -> h
    java.lang.String extruderAxisLetter -> i
    javafx.beans.property.BooleanProperty filamentLoaded -> a
    javafx.beans.property.BooleanProperty indexWheelState -> b
    javafx.beans.property.BooleanProperty canEject -> c
    javafx.beans.property.BooleanProperty isFitted -> d
    javafx.beans.property.FloatProperty filamentDiameter -> e
    javafx.beans.property.FloatProperty extrusionMultiplier -> f
    javafx.beans.property.FloatProperty lastFeedrateMultiplierInUse -> g
    21:32:void <init>(java.lang.String) -> <init>
    36:36:java.lang.String getExtruderAxisLetter() -> a
    41:41:int getExtruderIndex() -> b
    46:67:int getExtruderIndexForLetter(java.lang.String) -> a
    72:87:java.lang.String getExtruderLetterForNumber(int) -> a
    92:92:javafx.beans.property.BooleanProperty filamentLoadedProperty() -> c
    97:97:javafx.beans.property.ReadOnlyBooleanProperty indexWheelStateProperty() -> d
    102:102:javafx.beans.property.ReadOnlyBooleanProperty canEjectProperty() -> e
    107:107:javafx.beans.property.BooleanProperty isFittedProperty() -> f
    112:112:javafx.beans.property.ReadOnlyFloatProperty filamentDiameterProperty() -> g
    117:117:javafx.beans.property.ReadOnlyFloatProperty extrusionMultiplierProperty() -> h
    122:122:javafx.beans.property.ReadOnlyFloatProperty lastFeedrateMultiplierInUseProperty() -> i
    19:19:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.HardwarePrinter -> celtech.roboxbase.printerControl.model.c:
    libertysystems.stenographer.Stenographer steno -> k
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer filamentContainer -> l
    javafx.beans.property.ObjectProperty printerStatus -> a
    javafx.beans.property.BooleanProperty macroIsInterruptible -> b
    celtech.roboxbase.comms.PrinterStatusConsumer printerStatusConsumer -> c
    celtech.roboxbase.comms.CommandInterface commandInterface -> d
    celtech.roboxbase.appManager.SystemNotificationManager systemNotificationManager -> m
    java.text.NumberFormat threeDPformatter -> n
    javafx.beans.property.BooleanProperty canRemoveHead -> o
    javafx.beans.property.BooleanProperty canPurgeHead -> p
    javafx.beans.property.BooleanProperty mustPurgeHead -> q
    javafx.beans.property.BooleanProperty canInitiateNewState -> r
    javafx.beans.property.BooleanProperty canPrint -> s
    javafx.beans.property.BooleanProperty canOpenCloseNozzle -> t
    javafx.beans.property.BooleanProperty canPause -> u
    javafx.beans.property.BooleanProperty canResume -> v
    javafx.beans.property.BooleanProperty canRunMacro -> w
    javafx.beans.property.BooleanProperty canCancel -> x
    javafx.beans.property.BooleanProperty canOpenDoor -> y
    javafx.beans.property.BooleanProperty canCalibrateHead -> z
    javafx.beans.property.BooleanProperty canCalibrateNozzleHeight -> A
    javafx.beans.property.BooleanProperty canCalibrateXYAlignment -> B
    javafx.beans.property.BooleanProperty canCalibrateNozzleOpening -> C
    boolean headIntegrityChecksInhibited -> D
    celtech.roboxbase.printerControl.model.PrinterIdentity printerIdentity -> E
    celtech.roboxbase.printerControl.model.PrinterAncillarySystems printerAncillarySystems -> F
    javafx.beans.property.ObjectProperty printerConfiguration -> G
    javafx.beans.property.ObjectProperty printerEdition -> H
    javafx.beans.property.ObjectProperty head -> I
    javafx.collections.ObservableMap reels -> J
    javafx.collections.ObservableMap effectiveFilaments -> K
    javafx.collections.ObservableList extruders -> L
    javafx.beans.property.ObjectProperty lastHeadEEPROMState -> M
    int maxNumberOfReels -> N
    javafx.collections.ObservableList lastReelEEPROMState -> O
    long lastTimestamp -> P
    javafx.collections.ObservableList gcodeTranscript -> Q
    int dataFileSequenceNumber -> R
    int dataFileSequenceNumberStartPoint -> S
    int bufferSize -> T
    java.lang.StringBuffer outputBuffer -> U
    boolean printInitiated -> V
    javafx.beans.property.ObjectProperty pauseStatus -> e
    javafx.beans.property.ObjectProperty busyStatus -> f
    javafx.beans.property.IntegerProperty printJobLineNumber -> g
    javafx.beans.property.StringProperty printJobID -> h
    celtech.roboxbase.printerControl.model.PrintEngine printEngine -> W
    java.lang.String firstExtruderLetter -> X
    int firstExtruderNumber -> Y
    java.lang.String secondExtruderLetter -> Z
    int secondExtruderNumber -> aa
    java.util.Map errorConsumers -> ab
    boolean processErrors -> ac
    celtech.roboxbase.printerControl.model.HardwarePrinter$FilamentLoadedGetter filamentLoadedGetter -> ad
    java.util.Set suppressedFirmwareErrors -> ae
    boolean repairCorruptEEPROMData -> af
    boolean doNotCheckForPresenceOfHead -> ag
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager calibrationHeightManager -> ah
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager calibrationOpeningManager -> ai
    celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager calibrationAlignmentManager -> aj
    javafx.beans.property.BooleanProperty headPowerOnFlag -> ak
    boolean inCommissioningMode -> al
    javafx.collections.ObservableList activeErrors -> am
    int initalStatusCount -> an
    celtech.roboxbase.configuration.datafileaccessors.FilamentContainer$FilamentDatabaseChangesListener filamentDatabaseChangesListener -> i
    javafx.beans.property.FloatProperty purgeTemperatureProperty -> j
    257:257:celtech.roboxbase.comms.CommandInterface getCommandInterface() -> a
    276:288:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.CommandInterface) -> <init>
    138:687:void <init>(celtech.roboxbase.comms.PrinterStatusConsumer,celtech.roboxbase.comms.CommandInterface,celtech.roboxbase.printerControl.model.HardwarePrinter$FilamentLoadedGetter,boolean) -> <init>
    362:425:void setupBindings() -> aE
    458:459:void setupFilamentDatabaseChangeListeners() -> aF
    464:483:void setPrinterStatus(celtech.roboxbase.printerControl.PrinterStatus) -> a
    488:488:javafx.beans.property.ReadOnlyObjectProperty printerStatusProperty() -> b
    494:494:celtech.roboxbase.printerControl.model.PrinterIdentity getPrinterIdentity() -> c
    500:500:celtech.roboxbase.printerControl.model.PrinterAncillarySystems getPrinterAncillarySystems() -> d
    506:506:javafx.beans.property.ReadOnlyObjectProperty printerConfigurationProperty() -> e
    512:513:void setPrinterConfiguration(celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile) -> a
    518:518:javafx.beans.property.ReadOnlyObjectProperty printerEditionProperty() -> f
    524:525:void setPrinterEdition(celtech.roboxbase.configuration.fileRepresentation.PrinterEdition) -> a
    530:537:javafx.geometry.Point3D getPrintVolumeCentre() -> g
    544:562:boolean isBiggerThanPrintVolume(celtech.roboxbase.utils.RectangularBounds) -> a
    568:568:javafx.beans.property.ReadOnlyObjectProperty headProperty() -> h
    574:574:javafx.collections.ObservableMap reelsProperty() -> i
    580:580:javafx.collections.ObservableMap effectiveFilamentsProperty() -> j
    586:587:void overrideFilament(int,celtech.roboxbase.configuration.Filament) -> a
    592:592:javafx.collections.ObservableList extrudersProperty() -> k
    598:598:javafx.beans.property.ReadOnlyIntegerProperty printJobLineNumberProperty() -> l
    604:604:javafx.beans.property.ReadOnlyStringProperty printJobIDProperty() -> m
    610:610:javafx.beans.property.ReadOnlyObjectProperty pauseStatusProperty() -> n
    616:616:javafx.beans.property.ReadOnlyObjectProperty busyStatusProperty() -> o
    622:622:javafx.beans.property.ReadOnlyBooleanProperty headPowerOnFlagProperty() -> p
    628:628:celtech.roboxbase.printerControl.model.PrintEngine getPrintEngine() -> q
    637:637:javafx.beans.property.ReadOnlyBooleanProperty canRemoveHeadProperty() -> r
    643:659:void removeHead(celtech.roboxbase.utils.tasks.TaskResponder) -> a
    663:675:boolean doRemoveHeadActivity(celtech.roboxbase.utils.tasks.Cancellable) -> a
    684:684:javafx.beans.property.ReadOnlyBooleanProperty canPurgeHeadProperty() -> s
    699:740:void resetPurgeTemperatureForNozzleHeater(celtech.roboxbase.printerControl.model.Head,int) -> a
    748:748:javafx.beans.property.ReadOnlyBooleanProperty canPrintProperty() -> t
    754:754:javafx.beans.property.ReadOnlyBooleanProperty canOpenCloseNozzleProperty() -> u
    760:760:javafx.beans.property.ReadOnlyBooleanProperty canCalibrateNozzleHeightProperty() -> v
    766:766:javafx.beans.property.ReadOnlyBooleanProperty canCalibrateXYAlignmentProperty() -> w
    772:772:javafx.beans.property.ReadOnlyBooleanProperty canCalibrateNozzleOpeningProperty() -> x
    780:780:javafx.beans.property.ReadOnlyBooleanProperty canCalibrateHeadProperty() -> y
    789:789:javafx.beans.property.ReadOnlyBooleanProperty canCancelProperty() -> z
    794:813:void doCancel(celtech.roboxbase.utils.tasks.TaskResponder,boolean) -> b
    818:819:void cancel(celtech.roboxbase.utils.tasks.TaskResponder) -> b
    824:825:void forcedCancel(celtech.roboxbase.utils.tasks.TaskResponder) -> c
    829:856:boolean doAbortActivity(celtech.roboxbase.utils.tasks.Cancellable) -> b
    866:866:javafx.beans.property.ReadOnlyBooleanProperty canPauseProperty() -> A
    872:893:void pause() -> B
    902:902:javafx.beans.property.ReadOnlyBooleanProperty canResumeProperty() -> C
    912:930:void resume() -> D
    936:947:void forcedResume() -> aG
    956:956:int getDataFileSequenceNumber() -> E
    966:966:boolean isPrintInitiated() -> F
    973:992:void transferGCodeFileToPrinterAndCallbackWhenDone(java.lang.String,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    997:1024:void executeGCodeFile(java.lang.String,boolean) -> a
    1030:1031:void executeMacroWithoutPurgeCheckAndWaitIfRequired(celtech.roboxbase.configuration.Macro,boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1038:1064:void executeMacroWithoutPurgeCheckAndWaitIfRequired(celtech.roboxbase.configuration.Macro,boolean,celtech.roboxbase.utils.tasks.Cancellable,boolean,boolean,boolean) -> a
    1069:1071:void homeAllAxes(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1077:1081:void purgeMaterial(boolean,boolean,boolean,boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1089:1096:void miniPurge(boolean,celtech.roboxbase.utils.tasks.Cancellable,int,boolean) -> a
    1101:1103:void testX(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> b
    1108:1110:void testY(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> c
    1115:1117:void testZ(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> d
    1122:1124:void levelGantry(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> e
    1129:1131:void levelGantryTwoPoints(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> f
    1136:1138:void levelY(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> g
    1143:1155:void ejectStuckMaterial(int,boolean,celtech.roboxbase.utils.tasks.Cancellable,boolean) -> a
    1160:1165:void cleanNozzle(int,boolean,celtech.roboxbase.utils.tasks.Cancellable,boolean) -> b
    1170:1172:void speedTest(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> h
    1177:1178:void runCommissioningTest(celtech.roboxbase.configuration.Macro,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1182:1184:void runCommissioningTest(celtech.roboxbase.configuration.Macro,celtech.roboxbase.utils.tasks.Cancellable,boolean,boolean) -> a
    1188:1189:void executeMacroWithoutPurgeCheck(celtech.roboxbase.configuration.Macro) -> a
    1195:1209:void executeMacroWithoutPurgeCheck(celtech.roboxbase.configuration.Macro,boolean,boolean,boolean) -> a
    1214:1230:void forceExecuteMacroAsStream(java.lang.String,boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1234:1256:void sendMacroFileBitByBit(java.lang.String,celtech.roboxbase.utils.tasks.Cancellable) -> a
    1262:1274:void callbackWhenNotBusy(celtech.roboxbase.utils.tasks.TaskResponder) -> d
    1288:1317:java.lang.String transmitDirectGCode(java.lang.String,boolean) -> d
    1322:1341:boolean transmitDataFileStart(java.lang.String,boolean) -> e
    1346:1354:celtech.roboxbase.comms.rx.AckResponse transmitDataFileChunk(java.lang.String,int) -> a
    1359:1364:celtech.roboxbase.comms.rx.AckResponse transmitDataFileEnd(java.lang.String,int) -> b
    1374:1377:celtech.roboxbase.comms.rx.AckResponse transmitReportErrors() -> G
    1387:1390:void transmitResetErrors() -> H
    1401:1416:boolean transmitUpdateFirmware(java.lang.String) -> a
    1421:1427:void transmitInitiatePrint(java.lang.String) -> k
    1436:1436:celtech.roboxbase.comms.rx.AckResponse formatHeadEEPROM() -> I
    1442:1460:celtech.roboxbase.comms.rx.AckResponse formatHeadEEPROM(boolean) -> a
    1471:1495:celtech.roboxbase.comms.rx.AckResponse formatReelEEPROM(int) -> a
    1507:1525:celtech.roboxbase.comms.rx.ReelEEPROMDataResponse readReelEEPROM(int,boolean) -> a
    1535:1586:void writeReelEEPROM(int,celtech.roboxbase.printerControl.model.Reel) -> a
    1597:1656:celtech.roboxbase.comms.rx.AckResponse transmitWriteReelEEPROM(int,celtech.roboxbase.configuration.Filament) -> b
    1669:1723:void transmitWriteReelEEPROM(int,java.lang.String,float,float,float,float,float,float,float,float,float,java.lang.String,celtech.roboxbase.MaterialType,javafx.scene.paint.Color) -> a
    1735:1758:celtech.roboxbase.comms.rx.AckResponse transmitWriteHeadEEPROM(java.lang.String,java.lang.String,float,float,float,float,float,float,float,java.lang.String,java.lang.String,float,float,float,float,float,float,float) -> a
    1769:1776:void transmitSetTemperatures(double,double,double,double,double,double,double) -> a
    1781:1785:celtech.roboxbase.comms.rx.ListFilesResponse transmitListFiles() -> J
    1791:1793:celtech.roboxbase.comms.rx.StatusResponse transmitStatusRequest() -> K
    1799:1805:boolean initialiseDataFileSend(java.lang.String,boolean) -> b
    1811:1817:celtech.roboxbase.comms.rx.SendFile requestSendFileReport() -> L
    1828:1830:void initiatePrint(java.lang.String) -> b
    1839:1909:void sendDataFileChunk(java.lang.String,boolean,boolean) -> a
    1919:2076:void printMeshes(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    2081:2082:void addToGCodeTranscript(java.lang.String) -> c
    2087:2087:javafx.collections.ObservableList gcodeTranscriptProperty() -> M
    2093:2095:void processRoboxResponse(celtech.roboxbase.comms.rx.RoboxRxPacket) -> a
    2103:2103:javafx.beans.property.ReadOnlyBooleanProperty canOpenDoorProperty() -> N
    2109:2130:void goToOpenDoorPosition(celtech.roboxbase.utils.tasks.TaskResponder,boolean) -> a
    2134:2173:boolean doOpenDoorActivity(celtech.roboxbase.utils.tasks.Cancellable,boolean) -> a
    2179:2201:void goToOpenDoorPositionDontWait(celtech.roboxbase.utils.tasks.TaskResponder) -> e
    2205:2216:boolean doOpenDoorActivityDontWait(celtech.roboxbase.utils.tasks.Cancellable) -> c
    2222:2249:void updatePrinterName(java.lang.String) -> d
    2254:2282:void updatePrinterDisplayColour(javafx.scene.paint.Color) -> a
    2287:2317:void updatePrinterModelAndEdition(celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile,celtech.roboxbase.configuration.fileRepresentation.PrinterEdition) -> a
    2322:2351:void updatePrinterWeek(java.lang.String) -> e
    2356:2385:void updatePrinterYear(java.lang.String) -> f
    2390:2419:void updatePrinterPONumber(java.lang.String) -> g
    2424:2453:void updatePrinterSerialNumber(java.lang.String) -> h
    2458:2487:void updatePrinterIDChecksum(java.lang.String) -> i
    2494:2499:void goToTargetBedTemperature() -> O
    2506:2511:void switchBedHeaterOff() -> P
    2516:2530:void goToTargetNozzleHeaterTemperature(int) -> b
    2535:2564:void setNozzleHeaterTargetTemperature(int,int) -> a
    2571:2576:void setAmbientTemperature(int) -> c
    2583:2589:void setBedFirstLayerTargetTemperature(int) -> d
    2596:2601:void setBedTargetTemperature(int) -> e
    2608:2613:void sendRawGCode(java.lang.String,boolean) -> c
    2620:2625:void gotoNozzlePosition(float) -> a
    2632:2638:void switchOnHeadLEDs() -> Q
    2645:2651:void switchOffHeadLEDs() -> R
    2656:2658:void switchAllNozzleHeatersOff() -> S
    2665:2678:void switchNozzleHeaterOff(int) -> f
    2685:2690:void homeX() -> T
    2697:2702:void homeY() -> U
    2709:2714:void homeZ() -> V
    2721:2726:void probeX() -> W
    2731:2753:float getXDelta() -> X
    2761:2767:void probeY() -> Y
    2772:2794:float getYDelta() -> Z
    2802:2808:void probeZ() -> aa
    2813:2835:float getZDelta() -> ab
    2843:2848:void levelGantryRaw() -> ac
    2855:2860:void goToZPosition(double,int) -> a
    2867:2872:void goToZPosition(double) -> a
    2879:2885:void goToXYPosition(double,double) -> a
    2892:2899:void goToXYZPosition(double,double,double) -> a
    2906:2911:void switchToAbsoluteMoveMode() -> ad
    2918:2923:void switchToRelativeMoveMode() -> ae
    2928:3008:void writeHeadEEPROM(celtech.roboxbase.printerControl.model.Head,boolean) -> a
    3013:3014:void writeHeadEEPROM(celtech.roboxbase.printerControl.model.Head) -> a
    3019:3021:celtech.roboxbase.comms.rx.HeadEEPROMDataResponse readHeadEEPROM(boolean) -> b
    3027:3049:void ejectFilament(int,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    3053:3065:boolean doEjectFilamentActivity(int,celtech.roboxbase.utils.tasks.Cancellable) -> a
    3073:3101:void jogAxis(celtech.roboxbase.utils.AxisSpecifier,float,float,boolean) -> a
    3108:3114:void switchOffHeadFan() -> af
    3121:3127:void switchOnHeadFan() -> ag
    3134:3140:void openNozzleFully() -> ah
    3147:3153:void openNozzleFullyExtra() -> ai
    3160:3166:void closeNozzleFully() -> aj
    3171:3183:void setAmbientLEDColour(javafx.scene.paint.Color) -> b
    3188:3198:void setReelLEDColour(javafx.scene.paint.Color) -> c
    3203:3215:celtech.roboxbase.comms.rx.PrinterIDResponse readPrinterID() -> ak
    3221:3232:celtech.roboxbase.comms.rx.FirmwareResponse readFirmwareVersion() -> al
    3238:3251:void selectNozzle(int) -> g
    3256:3259:void shutdown() -> am
    3264:3279:celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager startCalibrateXAndY() -> an
    3285:3300:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager startCalibrateNozzleHeight() -> ao
    3306:3329:celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager startPurge(boolean) -> c
    3336:3346:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager startCalibrateNozzleOpening() -> ap
    3353:3356:void registerErrorConsumer(celtech.roboxbase.comms.events.ErrorConsumer,java.util.List) -> a
    3361:3366:void registerErrorConsumerAllErrors(celtech.roboxbase.comms.events.ErrorConsumer) -> a
    3371:3374:void deregisterErrorConsumer(celtech.roboxbase.comms.events.ErrorConsumer) -> b
    3477:3532:void consumeError(celtech.roboxbase.comms.rx.FirmwareError) -> consumeError
    3537:3538:void connectionEstablished() -> aq
    3544:3581:java.util.List requestDebugData(boolean) -> d
    3589:3590:void setDataFileSequenceNumberStartPoint(int) -> h
    3595:3596:void resetDataFileSequenceNumber() -> ar
    3603:3624:void extrudeUntilSlip(int,int,int) -> a
    3630:3634:void suppressFirmwareErrors(celtech.roboxbase.comms.rx.FirmwareError[]) -> a
    3639:3640:void cancelFirmwareErrorSuppression() -> as
    3646:3647:void suppressEEPROMErrorCorrection(boolean) -> e
    3652:3664:celtech.roboxbase.printerControl.model.TemperatureAndPWMData getTemperatureAndPWMData() -> at
    4316:4332:void resetHeadToDefaults() -> au
    4338:4339:void inhibitHeadIntegrityChecks(boolean) -> f
    4344:4357:void changeEFeedRateMultiplier(double) -> b
    4362:4375:void changeDFeedRateMultiplier(double) -> c
    4382:4433:void changeFilamentInfo(java.lang.String,double,double) -> a
    4437:4437:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager getNozzleHeightCalibrationStateManager() -> av
    4442:4442:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager getNozzleOpeningCalibrationStateManager() -> aw
    4447:4447:celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager getNozzleAlignmentCalibrationStateManager() -> ax
    4453:4454:void loadFirmware(java.lang.String) -> j
    4463:4463:javafx.collections.ObservableList getReelEEPROMStateProperty() -> ay
    4469:4469:javafx.beans.property.ReadOnlyObjectProperty getHeadEEPROMStateProperty() -> az
    4475:4476:void startComms() -> aA
    4481:4482:void stopComms() -> aB
    4487:4487:java.lang.String toString() -> toString
    4493:4494:void setCommissioningTestMode(boolean) -> g
    4499:4503:void clearError(celtech.roboxbase.comms.rx.FirmwareError) -> a
    4508:4509:void clearAllErrors() -> aC
    4514:4514:javafx.collections.ObservableList getActiveErrors() -> aD
    3342:3342:celtech.roboxbase.printerControl.model.statetransitions.Transitions lambda$startCalibrateNozzleOpening$21(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions) -> a
    3338:3338:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions lambda$startCalibrateNozzleOpening$20(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> a
    3325:3325:celtech.roboxbase.printerControl.model.statetransitions.Transitions lambda$startPurge$19(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions) -> b
    3322:3322:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions lambda$startPurge$18(boolean,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> a
    3296:3296:celtech.roboxbase.printerControl.model.statetransitions.Transitions lambda$startCalibrateNozzleHeight$17(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions) -> c
    3292:3292:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions lambda$startCalibrateNozzleHeight$16(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> b
    3275:3275:celtech.roboxbase.printerControl.model.statetransitions.Transitions lambda$startCalibrateXAndY$15(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions) -> d
    3271:3271:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions lambda$startCalibrateXAndY$14(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> c
    3043:3047:void lambda$ejectFilament$13(int,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    2190:2200:void lambda$goToOpenDoorPositionDontWait$12(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    2120:2129:void lambda$goToOpenDoorPosition$11(celtech.roboxbase.utils.tasks.Cancellable,boolean,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    1266:1273:void lambda$callbackWhenNotBusy$10(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> b
    1241:1247:void lambda$sendMacroFileBitByBit$9(celtech.roboxbase.utils.tasks.Cancellable,java.lang.String) -> a
    1223:1228:void lambda$forceExecuteMacroAsStream$8(java.lang.String,celtech.roboxbase.utils.tasks.Cancellable) -> b
    1050:1056:void lambda$executeMacroWithoutPurgeCheckAndWaitIfRequired$7(celtech.roboxbase.configuration.Macro,boolean,boolean,boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    977:991:void lambda$transferGCodeFileToPrinterAndCallbackWhenDone$6(java.lang.String,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    803:812:void lambda$doCancel$5(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> c
    652:658:void lambda$removeHead$4(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.TaskResponder) -> d
    467:482:void lambda$setPrinterStatus$3(celtech.roboxbase.printerControl.PrinterStatus) -> b
    430:450:void lambda$new$2(java.lang.String) -> l
    362:367:void lambda$setupBindings$1(celtech.roboxbase.printerControl.model.Extruder) -> a
    279:284:boolean lambda$new$0(celtech.roboxbase.comms.rx.StatusResponse,int) -> a
    135:135:javafx.beans.property.BooleanProperty access$000(celtech.roboxbase.printerControl.model.HardwarePrinter) -> a
    135:135:javafx.beans.property.BooleanProperty access$100(celtech.roboxbase.printerControl.model.HardwarePrinter) -> b
    135:135:javafx.beans.property.BooleanProperty access$200(celtech.roboxbase.printerControl.model.HardwarePrinter) -> c
    135:135:javafx.collections.ObservableMap access$300(celtech.roboxbase.printerControl.model.HardwarePrinter) -> d
    135:135:javafx.beans.property.ObjectProperty access$400(celtech.roboxbase.printerControl.model.HardwarePrinter) -> e
    135:135:libertysystems.stenographer.Stenographer access$500(celtech.roboxbase.printerControl.model.HardwarePrinter) -> f
    135:135:java.util.Map access$600(celtech.roboxbase.printerControl.model.HardwarePrinter) -> g
    135:135:boolean access$700(celtech.roboxbase.printerControl.model.HardwarePrinter) -> h
    135:135:int access$800(celtech.roboxbase.printerControl.model.HardwarePrinter) -> i
    135:135:int access$808(celtech.roboxbase.printerControl.model.HardwarePrinter) -> j
    135:135:javafx.beans.property.BooleanProperty access$900(celtech.roboxbase.printerControl.model.HardwarePrinter) -> k
    135:135:celtech.roboxbase.printerControl.model.PrinterAncillarySystems access$1000(celtech.roboxbase.printerControl.model.HardwarePrinter) -> l
    135:135:java.util.Set access$1100(celtech.roboxbase.printerControl.model.HardwarePrinter) -> m
    135:135:celtech.roboxbase.printerControl.model.HardwarePrinter$FilamentLoadedGetter access$1200(celtech.roboxbase.printerControl.model.HardwarePrinter) -> n
    135:135:javafx.collections.ObservableList access$1300(celtech.roboxbase.printerControl.model.HardwarePrinter) -> o
    135:135:javafx.collections.ObservableMap access$1400(celtech.roboxbase.printerControl.model.HardwarePrinter) -> p
    135:135:celtech.roboxbase.printerControl.model.PrinterIdentity access$1500(celtech.roboxbase.printerControl.model.HardwarePrinter) -> q
    135:135:celtech.roboxbase.configuration.datafileaccessors.FilamentContainer access$1600(celtech.roboxbase.printerControl.model.HardwarePrinter) -> r
    135:135:boolean access$1700(celtech.roboxbase.printerControl.model.HardwarePrinter) -> s
    135:135:boolean access$1800(celtech.roboxbase.printerControl.model.HardwarePrinter) -> t
    135:135:javafx.beans.property.ObjectProperty access$1900(celtech.roboxbase.printerControl.model.HardwarePrinter) -> u
    135:135:javafx.collections.ObservableList access$2000(celtech.roboxbase.printerControl.model.HardwarePrinter) -> v
    135:135:javafx.collections.ObservableList access$2100(celtech.roboxbase.printerControl.model.HardwarePrinter) -> w
    135:135:boolean access$2200(celtech.roboxbase.printerControl.model.HardwarePrinter) -> x
    135:135:boolean access$2300(celtech.roboxbase.printerControl.model.HardwarePrinter) -> y
    135:135:celtech.roboxbase.appManager.SystemNotificationManager access$2400(celtech.roboxbase.printerControl.model.HardwarePrinter) -> z
    209:209:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.HardwarePrinter$1 -> celtech.roboxbase.printerControl.model.c$1:
    celtech.roboxbase.printerControl.model.HardwarePrinter this$0 -> a
    320:320:void <init>(celtech.roboxbase.printerControl.model.HardwarePrinter) -> <init>
    324:356:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Head,celtech.roboxbase.printerControl.model.Head) -> a
    320:320:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.HardwarePrinter$2 -> celtech.roboxbase.printerControl.model.c$2:
    java.lang.String val$gcodeToSendWithLF -> a
    celtech.roboxbase.comms.rx.GCodeDataResponse val$response -> b
    celtech.roboxbase.printerControl.model.HardwarePrinter this$0 -> c
    1301:1301:void <init>(celtech.roboxbase.printerControl.model.HardwarePrinter,java.lang.String,celtech.roboxbase.comms.rx.GCodeDataResponse) -> <init>
    1305:1313:void run() -> run
celtech.roboxbase.printerControl.model.HardwarePrinter$3 -> celtech.roboxbase.printerControl.model.c$3:
    celtech.roboxbase.comms.rx.DebugDataResponse val$response -> a
    celtech.roboxbase.printerControl.model.HardwarePrinter this$0 -> b
    3562:3562:void <init>(celtech.roboxbase.printerControl.model.HardwarePrinter,celtech.roboxbase.comms.rx.DebugDataResponse) -> <init>
    3566:3573:void run() -> run
celtech.roboxbase.printerControl.model.HardwarePrinter$4 -> celtech.roboxbase.printerControl.model.c$4:
    int[] $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus -> a
    int[] $SwitchMap$celtech$roboxbase$comms$rx$FirmwareError -> b
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$RepairResult -> c
    int[] $SwitchMap$celtech$roboxbase$comms$rx$RxPacketTypeEnum -> d
    int[] $SwitchMap$celtech$roboxbase$comms$remote$EEPROMState -> e
    3479:4221:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.HardwarePrinter$FilamentLoadedGetter -> celtech.roboxbase.printerControl.model.c$a:
    boolean getFilamentLoaded(celtech.roboxbase.comms.rx.StatusResponse,int) -> getFilamentLoaded
celtech.roboxbase.printerControl.model.HardwarePrinter$RoboxEventProcessor -> celtech.roboxbase.printerControl.model.c$b:
    celtech.roboxbase.printerControl.model.Printer printer -> b
    celtech.roboxbase.comms.rx.RoboxRxPacket rxPacket -> c
    boolean errorWasConsumed -> d
    celtech.roboxbase.printerControl.model.HardwarePrinter this$0 -> a
    3676:3679:void <init>(celtech.roboxbase.printerControl.model.HardwarePrinter,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.comms.rx.RoboxRxPacket) -> <init>
    3684:4214:void run() -> run
    4218:4249:void checkHeadEEPROM(celtech.roboxbase.comms.rx.StatusResponse) -> a
    4253:4291:void checkReelEEPROMs(celtech.roboxbase.comms.rx.StatusResponse) -> b
    4302:4310:void saveUnknownFilamentToDatabase(celtech.roboxbase.comms.rx.ReelEEPROMDataResponse) -> a
    4144:4172:void lambda$run$6(celtech.roboxbase.utils.tasks.TaskResponse) -> a
    3928:3929:void lambda$run$5(celtech.roboxbase.comms.rx.StatusResponse,celtech.roboxbase.printerControl.model.Nozzle) -> a
    3916:3916:void lambda$run$4(celtech.roboxbase.printerControl.model.NozzleHeater) -> a
    3780:3782:void lambda$run$3(celtech.roboxbase.comms.rx.FirmwareError) -> a
    3722:3773:void lambda$run$2(java.util.Map,celtech.roboxbase.comms.rx.FirmwareError) -> a
    3755:3763:void lambda$null$1(celtech.roboxbase.comms.rx.FirmwareError,celtech.roboxbase.comms.events.ErrorConsumer,java.util.List) -> a
    3714:3716:void lambda$run$0(java.lang.StringBuilder,celtech.roboxbase.comms.rx.FirmwareError) -> a
celtech.roboxbase.printerControl.model.Head -> celtech.roboxbase.printerControl.model.Head:
    libertysystems.stenographer.Stenographer steno -> t
    javafx.beans.property.ObjectProperty headType -> a
    javafx.beans.property.ObjectProperty valveType -> b
    javafx.beans.property.FloatProperty headXPosition -> c
    javafx.beans.property.FloatProperty headYPosition -> d
    javafx.beans.property.FloatProperty headZPosition -> e
    javafx.beans.property.FloatProperty BPosition -> f
    javafx.beans.property.IntegerProperty nozzleInUse -> g
    javafx.beans.property.StringProperty typeCode -> h
    javafx.beans.property.StringProperty name -> i
    javafx.beans.property.StringProperty uniqueID -> j
    javafx.beans.property.FloatProperty headHours -> k
    javafx.beans.property.StringProperty weekNumber -> l
    javafx.beans.property.StringProperty yearNumber -> m
    javafx.beans.property.StringProperty PONumber -> n
    javafx.beans.property.StringProperty serialNumber -> o
    javafx.beans.property.StringProperty checksum -> p
    javafx.collections.ObservableList nozzleHeaters -> q
    java.util.List nozzles -> r
    javafx.beans.property.BooleanProperty dataChanged -> s
    71:100:void <init>() -> <init>
    71:105:void <init>(celtech.roboxbase.configuration.fileRepresentation.HeadFile) -> <init>
    109:121:celtech.roboxbase.printerControl.model.Head createHead(celtech.roboxbase.comms.rx.HeadEEPROMDataResponse) -> a
    126:128:celtech.roboxbase.printerControl.model.NozzleHeater makeNozzleHeater(celtech.roboxbase.configuration.fileRepresentation.NozzleHeaterData) -> a
    134:135:void updateFromHeadFileData(celtech.roboxbase.configuration.fileRepresentation.HeadFile) -> a
    139:165:void updateFromHeadFileData(celtech.roboxbase.configuration.fileRepresentation.HeadFile,boolean) -> a
    71:180:void <init>(java.lang.String,java.lang.String,java.lang.String,float,java.util.List,java.util.List) -> <init>
    184:184:javafx.beans.property.StringProperty typeCodeProperty() -> a
    189:189:javafx.beans.property.StringProperty nameProperty() -> b
    194:194:javafx.beans.property.ObjectProperty headTypeProperty() -> c
    199:199:javafx.beans.property.StringProperty uniqueIDProperty() -> d
    204:204:javafx.beans.property.FloatProperty headHoursProperty() -> e
    209:209:javafx.collections.ObservableList getNozzleHeaters() -> f
    214:214:java.util.List getNozzles() -> g
    219:219:javafx.beans.property.ReadOnlyFloatProperty bPositionProperty() -> h
    224:224:javafx.beans.property.ReadOnlyIntegerProperty nozzleInUseProperty() -> i
    229:229:javafx.beans.property.ReadOnlyFloatProperty headXPositionProperty() -> j
    234:234:javafx.beans.property.ReadOnlyFloatProperty headYPositionProperty() -> k
    239:239:javafx.beans.property.ReadOnlyFloatProperty headZPositionProperty() -> l
    244:244:javafx.beans.property.ReadOnlyBooleanProperty dataChangedProperty() -> m
    249:249:java.lang.String getWeekNumber() -> n
    254:255:void setWeekNumber(java.lang.String) -> a
    259:259:java.lang.String getYearNumber() -> o
    264:265:void setYearNumber(java.lang.String) -> b
    269:269:java.lang.String getPONumber() -> p
    274:275:void setPONumber(java.lang.String) -> c
    279:279:java.lang.String getSerialNumber() -> q
    284:285:void setSerialNumber(java.lang.String) -> d
    289:289:java.lang.String getChecksum() -> r
    294:295:void setChecksum(java.lang.String) -> e
    300:300:java.lang.String toString() -> toString
    306:330:celtech.roboxbase.printerControl.model.Head clone() -> s
    335:345:void setTypeCode(java.lang.String) -> h
    349:388:void updateFromEEPROMData(celtech.roboxbase.comms.rx.HeadEEPROMDataResponse) -> b
    392:422:boolean matchesEEPROMData(celtech.roboxbase.printerControl.model.HeadEEPROMData) -> a
    428:510:celtech.roboxbase.printerControl.model.RepairResult bringDataInBounds() -> t
    516:562:void resetToDefaults() -> u
    566:574:boolean isTypeCodeValid(java.lang.String) -> f
    579:587:boolean isTypeCodeInDatabase(java.lang.String) -> g
    593:598:void allocateRandomID() -> v
    607:617:void setUniqueID(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    626:638:java.lang.String getFormattedSerial(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    643:648:java.lang.String getFormattedSerial() -> w
    658:711:boolean validateSerial(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    36:36:java.lang.Object clone() -> clone
    318:319:void lambda$clone$5(java.util.ArrayList,celtech.roboxbase.printerControl.model.Nozzle) -> a
    312:313:void lambda$clone$4(java.util.ArrayList,celtech.roboxbase.printerControl.model.NozzleHeater) -> a
    158:159:void lambda$updateFromHeadFileData$3(celtech.roboxbase.printerControl.model.Nozzle) -> a
    151:155:celtech.roboxbase.printerControl.model.Nozzle lambda$updateFromHeadFileData$2(celtech.roboxbase.configuration.fileRepresentation.NozzleData) -> a
    146:147:void lambda$updateFromHeadFileData$1(celtech.roboxbase.printerControl.model.NozzleHeater) -> a
    143:143:celtech.roboxbase.printerControl.model.NozzleHeater lambda$updateFromHeadFileData$0(celtech.roboxbase.configuration.fileRepresentation.NozzleHeaterData) -> b
    68:69:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.Head$HeadType -> celtech.roboxbase.printerControl.model.Head$HeadType:
    celtech.roboxbase.printerControl.model.Head$HeadType STYLUS_HEAD -> STYLUS_HEAD
    celtech.roboxbase.printerControl.model.Head$HeadType SINGLE_MATERIAL_HEAD -> SINGLE_MATERIAL_HEAD
    celtech.roboxbase.printerControl.model.Head$HeadType DUAL_MATERIAL_HEAD -> DUAL_MATERIAL_HEAD
    java.lang.String helpText -> helpText
    celtech.roboxbase.printerControl.model.Head$HeadType[] $VALUES -> $VALUES
    39:39:celtech.roboxbase.printerControl.model.Head$HeadType[] values() -> values
    39:39:celtech.roboxbase.printerControl.model.Head$HeadType valueOf(java.lang.String) -> valueOf
    49:51:void <init>(java.lang.String,int,java.lang.String) -> <init>
    56:56:java.lang.String toString() -> toString
    39:44:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.Head$ValveType -> celtech.roboxbase.printerControl.model.Head$ValveType:
    celtech.roboxbase.printerControl.model.Head$ValveType FITTED -> FITTED
    celtech.roboxbase.printerControl.model.Head$ValveType NOT_FITTED -> NOT_FITTED
    celtech.roboxbase.printerControl.model.Head$ValveType[] $VALUES -> $VALUES
    61:61:celtech.roboxbase.printerControl.model.Head$ValveType[] values() -> values
    61:61:celtech.roboxbase.printerControl.model.Head$ValveType valueOf(java.lang.String) -> valueOf
    61:61:void <init>(java.lang.String,int) -> <init>
    61:65:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.HeadEEPROMData -> celtech.roboxbase.printerControl.model.d:
    java.lang.String headTypeCode -> a
    java.lang.String uniqueID -> b
    java.lang.String weekNumber -> c
    java.lang.String yearNumber -> d
    java.lang.String PONumber -> e
    java.lang.String serialNumber -> f
    java.lang.String checksum -> g
    float maximumTemperature -> h
    float thermistorBeta -> i
    float thermistorTCal -> j
    float nozzle1XOffset -> k
    float nozzle1YOffset -> l
    float nozzle1ZOffset -> m
    float nozzle1BOffset -> n
    java.lang.String filament0ID -> o
    java.lang.String filament1ID -> p
    float nozzle2XOffset -> q
    float nozzle2YOffset -> r
    float nozzle2ZOffset -> s
    float nozzle2BOffset -> t
    float lastFilamentTemperature0 -> u
    float lastFilamentTemperature1 -> v
    float headHours -> w
    9:38:void <init>() -> <init>
    42:42:java.lang.String getHeadTypeCode() -> a
    47:48:void setHeadTypeCode(java.lang.String) -> a
    52:52:java.lang.String getUniqueID() -> b
    57:58:void setUniqueID(java.lang.String) -> b
    62:62:java.lang.String getWeekNumber() -> c
    67:68:void setWeekNumber(java.lang.String) -> c
    72:72:java.lang.String getYearNumber() -> d
    77:78:void setYearNumber(java.lang.String) -> d
    82:82:java.lang.String getPONumber() -> e
    87:88:void setPONumber(java.lang.String) -> e
    92:92:java.lang.String getSerialNumber() -> f
    97:98:void setSerialNumber(java.lang.String) -> f
    102:102:java.lang.String getChecksum() -> g
    107:108:void setChecksum(java.lang.String) -> g
    112:112:float getMaximumTemperature() -> h
    117:118:void setMaximumTemperature(float) -> a
    122:122:float getThermistorBeta() -> i
    127:128:void setThermistorBeta(float) -> b
    132:132:float getThermistorTCal() -> j
    137:138:void setThermistorTCal(float) -> c
    142:142:float getNozzle1XOffset() -> k
    147:148:void setNozzle1XOffset(float) -> d
    152:152:float getNozzle1YOffset() -> l
    157:158:void setNozzle1YOffset(float) -> e
    162:162:float getNozzle1ZOffset() -> m
    167:168:void setNozzle1ZOffset(float) -> f
    172:172:float getNozzle1BOffset() -> n
    177:178:void setNozzle1BOffset(float) -> g
    182:182:java.lang.String getFilament0ID() -> o
    187:188:void setFilament0ID(java.lang.String) -> h
    192:192:java.lang.String getFilament1ID() -> p
    197:198:void setFilament1ID(java.lang.String) -> i
    202:210:java.lang.String getFilamentID(int) -> a
    216:216:float getNozzle2XOffset() -> q
    221:222:void setNozzle2XOffset(float) -> h
    226:226:float getNozzle2YOffset() -> r
    231:232:void setNozzle2YOffset(float) -> i
    236:236:float getNozzle2ZOffset() -> s
    241:242:void setNozzle2ZOffset(float) -> j
    246:246:float getNozzle2BOffset() -> t
    251:252:void setNozzle2BOffset(float) -> k
    256:256:float getLastFilamentTemperature0() -> u
    261:262:void setLastFilamentTemperature0(float) -> l
    266:266:float getLastFilamentTemperature1() -> v
    271:272:void setLastFilamentTemperature1(float) -> m
    276:284:float getLastFilamentTemperature(int) -> b
    290:290:float getHeadHours() -> w
    295:296:void setHeadHours(float) -> n
    301:336:boolean equals(java.lang.Object) -> equals
celtech.roboxbase.printerControl.model.HeaterMode -> celtech.roboxbase.printerControl.model.HeaterMode:
    celtech.roboxbase.printerControl.model.HeaterMode OFF -> OFF
    celtech.roboxbase.printerControl.model.HeaterMode NORMAL -> NORMAL
    celtech.roboxbase.printerControl.model.HeaterMode FIRST_LAYER -> FIRST_LAYER
    celtech.roboxbase.printerControl.model.HeaterMode FILAMENT_EJECT -> FILAMENT_EJECT
    int value -> value
    celtech.roboxbase.printerControl.model.HeaterMode[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.printerControl.model.HeaterMode[] values() -> values
    7:7:celtech.roboxbase.printerControl.model.HeaterMode valueOf(java.lang.String) -> valueOf
    37:48:celtech.roboxbase.printerControl.model.HeaterMode modeFromValue(java.lang.Integer) -> modeFromValue
    54:56:void <init>(java.lang.String,int,int) -> <init>
    64:64:int getValue() -> getValue
    7:28:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.Nozzle -> celtech.roboxbase.printerControl.model.e:
    javafx.beans.property.FloatProperty BPosition -> a
    javafx.beans.property.FloatProperty diameter -> b
    javafx.beans.property.FloatProperty xOffset -> c
    javafx.beans.property.FloatProperty yOffset -> d
    javafx.beans.property.FloatProperty zOffset -> e
    javafx.beans.property.FloatProperty bOffset -> f
    13:23:void <init>() -> <init>
    13:43:void <init>(float,float,float,float,float) -> <init>
    51:51:javafx.beans.property.ReadOnlyFloatProperty bPositionProperty() -> a
    60:60:javafx.beans.property.ReadOnlyFloatProperty diameterProperty() -> b
    69:69:javafx.beans.property.ReadOnlyFloatProperty xOffsetProperty() -> c
    78:78:javafx.beans.property.ReadOnlyFloatProperty yOffsetProperty() -> d
    87:87:javafx.beans.property.ReadOnlyFloatProperty zOffsetProperty() -> e
    96:96:javafx.beans.property.ReadOnlyFloatProperty bOffsetProperty() -> f
    106:114:celtech.roboxbase.printerControl.model.Nozzle clone() -> g
    11:11:java.lang.Object clone() -> clone
celtech.roboxbase.printerControl.model.NozzleHeater -> celtech.roboxbase.printerControl.model.f:
    javafx.beans.property.ObjectProperty heaterMode -> a
    javafx.beans.property.FloatProperty maximumTemperature -> b
    javafx.beans.property.FloatProperty beta -> c
    javafx.beans.property.FloatProperty tcal -> d
    javafx.beans.property.FloatProperty lastFilamentTemperature -> e
    javafx.beans.property.IntegerProperty nozzleTemperature -> f
    javafx.beans.property.IntegerProperty nozzleFirstLayerTargetTemperature -> g
    javafx.beans.property.IntegerProperty nozzleTargetTemperature -> h
    javafx.beans.property.StringProperty filamentID -> i
    javafx.scene.chart.XYChart$Series nozzleTemperatureHistory -> j
    java.util.ArrayList nozzleTemperatureDataPoints -> k
    javafx.scene.chart.XYChart$Series nozzleTargetTemperatureSeries -> l
    javafx.scene.chart.XYChart$Data nozzleTargetPoint -> m
    long lastTemperatureTimestamp -> n
    27:50:void <init>() -> <init>
    27:71:void <init>(float,float,float,float,int,int,int,java.lang.String) -> <init>
    75:82:void initialiseTemperatureGraph() -> m
    86:86:javafx.beans.property.ReadOnlyObjectProperty heaterModeProperty() -> a
    91:91:javafx.beans.property.ReadOnlyFloatProperty maximumTemperatureProperty() -> b
    96:96:javafx.beans.property.ReadOnlyFloatProperty betaProperty() -> c
    101:101:javafx.beans.property.ReadOnlyFloatProperty tCalProperty() -> d
    106:106:javafx.beans.property.FloatProperty lastFilamentTemperatureProperty() -> e
    111:111:javafx.beans.property.ReadOnlyIntegerProperty nozzleTemperatureProperty() -> f
    116:116:javafx.beans.property.ReadOnlyIntegerProperty nozzleFirstLayerTargetTemperatureProperty() -> g
    121:121:javafx.beans.property.ReadOnlyIntegerProperty nozzleTargetTemperatureProperty() -> h
    126:126:javafx.beans.property.ReadOnlyStringProperty filamentIDProperty() -> i
    131:131:javafx.scene.chart.XYChart$Series getNozzleTemperatureHistory() -> j
    136:174:void updateGraphData() -> k
    179:190:celtech.roboxbase.printerControl.model.NozzleHeater clone() -> l
    24:24:java.lang.Object clone() -> clone
celtech.roboxbase.printerControl.model.NozzleHeater$1 -> celtech.roboxbase.printerControl.model.f$1:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode -> a
    159:159:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.PrintEngine -> celtech.roboxbase.printerControl.model.g:
    libertysystems.stenographer.Stenographer steno -> f
    celtech.roboxbase.printerControl.model.Printer associatedPrinter -> g
    celtech.roboxbase.services.slicer.AbstractSlicerService slicerService -> a
    celtech.roboxbase.services.postProcessor.PostProcessorService postProcessorService -> b
    celtech.roboxbase.services.printing.TransferGCodeToPrinterService transferGCodeToPrinterService -> c
    javafx.beans.property.IntegerProperty linesInPrintingFile -> h
    javafx.beans.property.BooleanProperty etcAvailable -> i
    javafx.event.EventHandler scheduledSliceEventHandler -> j
    javafx.event.EventHandler cancelSliceEventHandler -> k
    javafx.event.EventHandler failedSliceEventHandler -> l
    javafx.event.EventHandler succeededSliceEventHandler -> m
    javafx.event.EventHandler scheduledGCodePostProcessEventHandler -> n
    javafx.event.EventHandler cancelGCodePostProcessEventHandler -> o
    javafx.event.EventHandler failedGCodePostProcessEventHandler -> p
    javafx.event.EventHandler succeededGCodePostProcessEventHandler -> q
    javafx.event.EventHandler scheduledPrintEventHandler -> r
    javafx.event.EventHandler cancelPrintEventHandler -> s
    javafx.event.EventHandler failedPrintEventHandler -> t
    javafx.event.EventHandler succeededPrintEventHandler -> u
    javafx.beans.property.StringProperty printProgressTitle -> v
    javafx.beans.property.StringProperty printProgressMessage -> w
    javafx.beans.property.BooleanProperty dialogRequired -> x
    javafx.beans.property.DoubleProperty primaryProgressPercent -> y
    javafx.beans.property.DoubleProperty secondaryProgressPercent -> z
    javafx.beans.property.ObjectProperty printJobStartTime -> A
    javafx.beans.property.ObjectProperty macroBeingRun -> d
    javafx.beans.property.ObjectProperty printQueueStatus -> B
    javafx.beans.property.ObjectProperty printJob -> C
    javafx.beans.value.ChangeListener printLineNumberListener -> D
    javafx.beans.value.ChangeListener printJobIDListener -> E
    boolean consideringPrintRequest -> F
    celtech.roboxbase.printerControl.model.ETCCalculator etcCalculator -> e
    javafx.beans.property.IntegerProperty progressETC -> G
    javafx.beans.property.IntegerProperty progressCurrentLayer -> H
    javafx.beans.property.IntegerProperty progressNumLayers -> I
    boolean raiseProgressNotifications -> J
    boolean canDisconnectDuringPrint -> K
    celtech.roboxbase.services.CameraTriggerManager cameraTriggerManager -> L
    celtech.roboxbase.services.CameraTriggerData cameraTriggerData -> M
    boolean cameraIsEnabled -> N
    javafx.beans.property.BooleanProperty highIntensityCommsInProgress -> O
    78:464:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    472:492:void makeETCCalculator(celtech.roboxbase.postprocessor.PrintJobStatistics,celtech.roboxbase.printerControl.model.Printer) -> a
    496:500:void updateETCUsingETCCalculator(java.lang.Number) -> a
    504:510:void updateETCUsingLineNumber(java.lang.Number) -> b
    514:522:void makeETCCalculatorForJobOfUUID(java.lang.String) -> a
    529:530:void shutdown() -> a
    534:606:boolean printProject(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    611:730:boolean printFromScratch(boolean,celtech.roboxbase.utils.models.PrintableMeshes) -> a
    735:756:boolean reprintFileFromDisk(celtech.roboxbase.printerControl.PrintJob,int) -> a
    761:761:boolean reprintFileFromDisk(celtech.roboxbase.printerControl.PrintJob) -> a
    768:786:boolean reprintDirectFromPrinter(celtech.roboxbase.printerControl.PrintJob) -> b
    795:795:javafx.beans.property.ReadOnlyDoubleProperty secondaryProgressProperty() -> b
    801:801:javafx.beans.property.ReadOnlyBooleanProperty runningProperty() -> runningProperty
    807:807:javafx.beans.property.ReadOnlyStringProperty messageProperty() -> messageProperty
    813:813:javafx.beans.property.ReadOnlyDoubleProperty progressProperty() -> progressProperty
    819:819:javafx.beans.property.ReadOnlyStringProperty titleProperty() -> titleProperty
    825:825:boolean cancelRun() -> c
    830:830:javafx.beans.property.ReadOnlyIntegerProperty linesInPrintingFileProperty() -> d
    835:835:boolean printGCodeFile(java.lang.String,boolean,boolean) -> a
    841:880:boolean printGCodeFile(java.lang.String,boolean,boolean,boolean) -> a
    886:901:void tidyPrintSpoolDirectory() -> n
    906:923:void tidyMacroSpoolDirectory() -> o
    927:927:boolean runMacroPrintJob(celtech.roboxbase.configuration.Macro) -> a
    935:935:boolean runMacroPrintJob(celtech.roboxbase.configuration.Macro,boolean,boolean,boolean) -> a
    943:1006:boolean runMacroPrintJob(celtech.roboxbase.configuration.Macro,boolean,boolean,boolean,boolean) -> a
    1012:1017:java.lang.String createPrintJobDirectory() -> p
    1022:1022:boolean isConsideringPrintRequest() -> e
    1027:1027:javafx.beans.property.IntegerProperty progressETCProperty() -> f
    1032:1032:javafx.beans.property.ReadOnlyBooleanProperty etcAvailableProperty() -> g
    1037:1037:javafx.beans.property.ReadOnlyIntegerProperty progressCurrentLayerProperty() -> h
    1042:1042:javafx.beans.property.ReadOnlyIntegerProperty progressNumLayersProperty() -> i
    1052:1091:void stopAllServices() -> j
    1095:1107:boolean reEstablishTransfer(java.lang.String,int) -> a
    1112:1196:void detectAlreadyPrinting() -> q
    1200:1206:void setParentPrintStatusIfIdle(celtech.roboxbase.printerControl.PrinterStatus) -> a
    1210:1210:javafx.beans.property.ReadOnlyObjectProperty printQueueStatusProperty() -> k
    1215:1215:javafx.beans.property.ReadOnlyObjectProperty printJobProperty() -> l
    1220:1220:javafx.beans.property.ReadOnlyBooleanProperty highIntensityCommsInProgressProperty() -> m
    983:1002:void lambda$runMacroPrintJob$15(java.io.File,boolean,java.lang.String,java.lang.String) -> a
    916:917:int lambda$tidyMacroSpoolDirectory$14(java.io.File,java.io.File) -> a
    894:895:int lambda$tidyPrintSpoolDirectory$13(java.io.File,java.io.File) -> b
    861:872:void lambda$printGCodeFile$12(java.io.File,boolean,java.lang.String,java.lang.String,boolean) -> a
    627:628:int lambda$printFromScratch$11(java.io.File,java.io.File) -> c
    386:391:void lambda$new$10(javafx.concurrent.WorkerStateEvent) -> a
    381:382:void lambda$new$9(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
    325:377:void lambda$new$8(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> a
    309:321:void lambda$new$7(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> b
    300:305:void lambda$new$6(javafx.concurrent.WorkerStateEvent) -> b
    256:296:void lambda$new$5(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> c
    244:252:void lambda$new$4(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> d
    232:240:void lambda$new$3(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> e
    195:228:void lambda$new$2(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> f
    177:191:void lambda$new$1(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> g
    165:173:void lambda$new$0(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.WorkerStateEvent) -> h
    75:75:javafx.beans.property.BooleanProperty access$000(celtech.roboxbase.printerControl.model.PrintEngine) -> a
    75:75:void access$100(celtech.roboxbase.printerControl.model.PrintEngine,java.lang.Number) -> a
    75:75:void access$200(celtech.roboxbase.printerControl.model.PrintEngine,java.lang.Number) -> b
    75:75:boolean access$300(celtech.roboxbase.printerControl.model.PrintEngine) -> b
    75:75:celtech.roboxbase.services.CameraTriggerManager access$400(celtech.roboxbase.printerControl.model.PrintEngine) -> c
    75:75:javafx.beans.property.ObjectProperty access$500(celtech.roboxbase.printerControl.model.PrintEngine) -> d
    75:75:libertysystems.stenographer.Stenographer access$600(celtech.roboxbase.printerControl.model.PrintEngine) -> e
celtech.roboxbase.printerControl.model.PrintEngine$1 -> celtech.roboxbase.printerControl.model.g$1:
    celtech.roboxbase.printerControl.model.PrintEngine this$0 -> a
    394:394:void <init>(celtech.roboxbase.printerControl.model.PrintEngine) -> <init>
    400:407:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    394:394:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.PrintEngine$2 -> celtech.roboxbase.printerControl.model.g$2:
    celtech.roboxbase.printerControl.model.Printer val$associatedPrinter -> a
    celtech.roboxbase.printerControl.model.PrintEngine this$0 -> b
    437:437:void <init>(celtech.roboxbase.printerControl.model.PrintEngine,celtech.roboxbase.printerControl.model.Printer) -> <init>
    441:456:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.PrintQueueStatus,celtech.roboxbase.printerControl.PrintQueueStatus) -> a
    437:437:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.PrintEngine$3 -> celtech.roboxbase.printerControl.model.g$3:
    celtech.roboxbase.printerControl.model.PrintEngine this$0 -> a
    1053:1053:void <init>(celtech.roboxbase.printerControl.model.PrintEngine) -> <init>
    1057:1079:java.lang.Boolean call() -> a
    1053:1053:java.lang.Object call() -> call
celtech.roboxbase.printerControl.model.PrintEngine$4 -> celtech.roboxbase.printerControl.model.g$4:
    int[] $SwitchMap$celtech$roboxbase$printerControl$PrinterStatus -> a
    1185:1185:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.Printer -> celtech.roboxbase.printerControl.model.Printer:
    javafx.beans.property.ReadOnlyObjectProperty printerConfigurationProperty() -> e
    void setPrinterConfiguration(celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile) -> a
    javafx.beans.property.ReadOnlyObjectProperty printerEditionProperty() -> f
    void setPrinterEdition(celtech.roboxbase.configuration.fileRepresentation.PrinterEdition) -> a
    javafx.geometry.Point3D getPrintVolumeCentre() -> g
    boolean isBiggerThanPrintVolume(celtech.roboxbase.utils.RectangularBounds) -> a
    javafx.beans.property.ReadOnlyObjectProperty headProperty() -> h
    void addToGCodeTranscript(java.lang.String) -> c
    javafx.beans.property.ReadOnlyBooleanProperty canCancelProperty() -> z
    javafx.beans.property.ReadOnlyBooleanProperty canPrintProperty() -> t
    javafx.beans.property.ReadOnlyBooleanProperty canOpenCloseNozzleProperty() -> u
    javafx.beans.property.ReadOnlyBooleanProperty canCalibrateNozzleHeightProperty() -> v
    javafx.beans.property.ReadOnlyBooleanProperty canCalibrateXYAlignmentProperty() -> w
    javafx.beans.property.ReadOnlyBooleanProperty canCalibrateNozzleOpeningProperty() -> x
    javafx.beans.property.ReadOnlyBooleanProperty canPurgeHeadProperty() -> s
    void resetPurgeTemperatureForNozzleHeater(celtech.roboxbase.printerControl.model.Head,int) -> a
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager startPurge(boolean) -> c
    javafx.beans.property.ReadOnlyBooleanProperty canCalibrateHeadProperty() -> y
    celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager startCalibrateXAndY() -> an
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager startCalibrateNozzleHeight() -> ao
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager startCalibrateNozzleOpening() -> ap
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager getNozzleHeightCalibrationStateManager() -> av
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager getNozzleOpeningCalibrationStateManager() -> aw
    celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager getNozzleAlignmentCalibrationStateManager() -> ax
    javafx.beans.property.ReadOnlyBooleanProperty canRemoveHeadProperty() -> r
    void forcedCancel(celtech.roboxbase.utils.tasks.TaskResponder) -> c
    void cancel(celtech.roboxbase.utils.tasks.TaskResponder) -> b
    void gotoNozzlePosition(float) -> a
    void closeNozzleFully() -> aj
    void ejectFilament(int,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    javafx.collections.ObservableList extrudersProperty() -> k
    celtech.roboxbase.comms.rx.AckResponse formatHeadEEPROM() -> I
    celtech.roboxbase.comms.rx.AckResponse formatHeadEEPROM(boolean) -> a
    celtech.roboxbase.comms.rx.AckResponse formatReelEEPROM(int) -> a
    javafx.collections.ObservableList gcodeTranscriptProperty() -> M
    javafx.beans.property.ReadOnlyBooleanProperty canPauseProperty() -> A
    javafx.beans.property.ReadOnlyBooleanProperty canResumeProperty() -> C
    int getDataFileSequenceNumber() -> E
    void resetDataFileSequenceNumber() -> ar
    void setDataFileSequenceNumberStartPoint(int) -> h
    celtech.roboxbase.printerControl.model.PrintEngine getPrintEngine() -> q
    celtech.roboxbase.printerControl.model.PrinterAncillarySystems getPrinterAncillarySystems() -> d
    celtech.roboxbase.printerControl.model.PrinterIdentity getPrinterIdentity() -> c
    javafx.beans.property.ReadOnlyBooleanProperty canOpenDoorProperty() -> N
    void goToOpenDoorPosition(celtech.roboxbase.utils.tasks.TaskResponder,boolean) -> a
    void goToOpenDoorPositionDontWait(celtech.roboxbase.utils.tasks.TaskResponder) -> e
    void goToTargetBedTemperature() -> O
    void goToTargetNozzleHeaterTemperature(int) -> b
    void goToZPosition(double) -> a
    void goToZPosition(double,int) -> a
    void goToXYPosition(double,double) -> a
    void goToXYZPosition(double,double,double) -> a
    void homeX() -> T
    void homeY() -> U
    void homeZ() -> V
    void probeX() -> W
    float getXDelta() -> X
    void probeY() -> Y
    float getYDelta() -> Z
    void probeZ() -> aa
    float getZDelta() -> ab
    celtech.roboxbase.printerControl.model.TemperatureAndPWMData getTemperatureAndPWMData() -> at
    void levelGantryRaw() -> ac
    boolean initialiseDataFileSend(java.lang.String,boolean) -> b
    celtech.roboxbase.comms.rx.SendFile requestSendFileReport() -> L
    void initiatePrint(java.lang.String) -> b
    boolean isPrintInitiated() -> F
    void jogAxis(celtech.roboxbase.utils.AxisSpecifier,float,float,boolean) -> a
    void openNozzleFully() -> ah
    void openNozzleFullyExtra() -> ai
    void pause() -> B
    void printMeshes(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    javafx.beans.property.ReadOnlyObjectProperty printerStatusProperty() -> b
    void processRoboxResponse(celtech.roboxbase.comms.rx.RoboxRxPacket) -> a
    celtech.roboxbase.comms.rx.FirmwareResponse readFirmwareVersion() -> al
    celtech.roboxbase.comms.rx.HeadEEPROMDataResponse readHeadEEPROM(boolean) -> b
    celtech.roboxbase.comms.rx.PrinterIDResponse readPrinterID() -> ak
    celtech.roboxbase.comms.rx.ReelEEPROMDataResponse readReelEEPROM(int,boolean) -> a
    javafx.collections.ObservableMap reelsProperty() -> i
    void removeHead(celtech.roboxbase.utils.tasks.TaskResponder) -> a
    void resume() -> D
    void homeAllAxes(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    void purgeMaterial(boolean,boolean,boolean,boolean,celtech.roboxbase.utils.tasks.Cancellable) -> a
    void miniPurge(boolean,celtech.roboxbase.utils.tasks.Cancellable,int,boolean) -> a
    void testX(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> b
    void testY(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> c
    void testZ(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> d
    void speedTest(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> h
    void levelGantry(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> e
    void levelGantryTwoPoints(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> f
    void levelY(boolean,celtech.roboxbase.utils.tasks.Cancellable) -> g
    void ejectStuckMaterial(int,boolean,celtech.roboxbase.utils.tasks.Cancellable,boolean) -> a
    void cleanNozzle(int,boolean,celtech.roboxbase.utils.tasks.Cancellable,boolean) -> b
    void runCommissioningTest(celtech.roboxbase.configuration.Macro,celtech.roboxbase.utils.tasks.Cancellable) -> a
    void runCommissioningTest(celtech.roboxbase.configuration.Macro,celtech.roboxbase.utils.tasks.Cancellable,boolean,boolean) -> a
    void executeGCodeFile(java.lang.String,boolean) -> a
    void callbackWhenNotBusy(celtech.roboxbase.utils.tasks.TaskResponder) -> d
    void selectNozzle(int) -> g
    void sendDataFileChunk(java.lang.String,boolean,boolean) -> a
    void sendRawGCode(java.lang.String,boolean) -> c
    void setAmbientLEDColour(javafx.scene.paint.Color) -> b
    void setAmbientTemperature(int) -> c
    void setBedFirstLayerTargetTemperature(int) -> d
    void setBedTargetTemperature(int) -> e
    void setNozzleHeaterTargetTemperature(int,int) -> a
    void setReelLEDColour(javafx.scene.paint.Color) -> c
    void shutdown() -> am
    void switchAllNozzleHeatersOff() -> S
    void switchBedHeaterOff() -> P
    void switchNozzleHeaterOff(int) -> f
    void switchOffHeadFan() -> af
    void switchOffHeadLEDs() -> R
    void switchOnHeadFan() -> ag
    void switchOnHeadLEDs() -> Q
    void switchToAbsoluteMoveMode() -> ad
    void switchToRelativeMoveMode() -> ae
    celtech.roboxbase.comms.rx.ListFilesResponse transmitListFiles() -> J
    celtech.roboxbase.comms.rx.AckResponse transmitReportErrors() -> G
    void transmitResetErrors() -> H
    void clearError(celtech.roboxbase.comms.rx.FirmwareError) -> a
    void clearAllErrors() -> aC
    javafx.collections.ObservableList getActiveErrors() -> aD
    void transmitSetTemperatures(double,double,double,double,double,double,double) -> a
    celtech.roboxbase.comms.rx.StatusResponse transmitStatusRequest() -> K
    boolean transmitUpdateFirmware(java.lang.String) -> a
    celtech.roboxbase.comms.rx.AckResponse transmitWriteHeadEEPROM(java.lang.String,java.lang.String,float,float,float,float,float,float,float,java.lang.String,java.lang.String,float,float,float,float,float,float,float) -> a
    celtech.roboxbase.comms.rx.AckResponse transmitWriteReelEEPROM(int,celtech.roboxbase.configuration.Filament) -> b
    void transmitWriteReelEEPROM(int,java.lang.String,float,float,float,float,float,float,float,float,float,java.lang.String,celtech.roboxbase.MaterialType,javafx.scene.paint.Color) -> a
    void updatePrinterDisplayColour(javafx.scene.paint.Color) -> a
    void updatePrinterName(java.lang.String) -> d
    void updatePrinterModelAndEdition(celtech.roboxbase.configuration.fileRepresentation.PrinterDefinitionFile,celtech.roboxbase.configuration.fileRepresentation.PrinterEdition) -> a
    void updatePrinterWeek(java.lang.String) -> e
    void updatePrinterYear(java.lang.String) -> f
    void updatePrinterPONumber(java.lang.String) -> g
    void updatePrinterSerialNumber(java.lang.String) -> h
    void updatePrinterIDChecksum(java.lang.String) -> i
    void writeHeadEEPROM(celtech.roboxbase.printerControl.model.Head,boolean) -> a
    void writeHeadEEPROM(celtech.roboxbase.printerControl.model.Head) -> a
    void setPrinterStatus(celtech.roboxbase.printerControl.PrinterStatus) -> a
    javafx.beans.property.ReadOnlyIntegerProperty printJobLineNumberProperty() -> l
    javafx.beans.property.ReadOnlyStringProperty printJobIDProperty() -> m
    javafx.beans.property.ReadOnlyObjectProperty pauseStatusProperty() -> n
    javafx.beans.property.ReadOnlyBooleanProperty headPowerOnFlagProperty() -> p
    void resetHeadToDefaults() -> au
    void inhibitHeadIntegrityChecks(boolean) -> f
    void changeEFeedRateMultiplier(double) -> b
    void changeDFeedRateMultiplier(double) -> c
    void changeFilamentInfo(java.lang.String,double,double) -> a
    void registerErrorConsumer(celtech.roboxbase.comms.events.ErrorConsumer,java.util.List) -> a
    void registerErrorConsumerAllErrors(celtech.roboxbase.comms.events.ErrorConsumer) -> a
    void deregisterErrorConsumer(celtech.roboxbase.comms.events.ErrorConsumer) -> b
    void connectionEstablished() -> aq
    java.util.List requestDebugData(boolean) -> d
    javafx.beans.property.ReadOnlyObjectProperty busyStatusProperty() -> o
    void extrudeUntilSlip(int,int,int) -> a
    void suppressFirmwareErrors(celtech.roboxbase.comms.rx.FirmwareError[]) -> a
    void cancelFirmwareErrorSuppression() -> as
    void suppressEEPROMErrorCorrection(boolean) -> e
    void transferGCodeFileToPrinterAndCallbackWhenDone(java.lang.String,celtech.roboxbase.utils.tasks.TaskResponder) -> a
    void loadFirmware(java.lang.String) -> j
    javafx.collections.ObservableList getReelEEPROMStateProperty() -> ay
    javafx.beans.property.ReadOnlyObjectProperty getHeadEEPROMStateProperty() -> az
    void startComms() -> aA
    void stopComms() -> aB
    void overrideFilament(int,celtech.roboxbase.configuration.Filament) -> a
    javafx.collections.ObservableMap effectiveFilamentsProperty() -> j
    void setCommissioningTestMode(boolean) -> g
    celtech.roboxbase.comms.CommandInterface getCommandInterface() -> a
celtech.roboxbase.printerControl.model.Printer$NozzleHeaters -> celtech.roboxbase.printerControl.model.Printer$NozzleHeaters:
    celtech.roboxbase.printerControl.model.Printer$NozzleHeaters NOZZLE_HEATER_0 -> NOZZLE_HEATER_0
    celtech.roboxbase.printerControl.model.Printer$NozzleHeaters NOZZLE_HEATER_1 -> NOZZLE_HEATER_1
    celtech.roboxbase.printerControl.model.Printer$NozzleHeaters NOZZLE_HEATER_BOTH -> NOZZLE_HEATER_BOTH
    celtech.roboxbase.printerControl.model.Printer$NozzleHeaters[] $VALUES -> $VALUES
    45:45:celtech.roboxbase.printerControl.model.Printer$NozzleHeaters[] values() -> values
    45:45:celtech.roboxbase.printerControl.model.Printer$NozzleHeaters valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    45:48:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.PrinterAncillarySystems -> celtech.roboxbase.printerControl.model.h:
    javafx.beans.property.BooleanProperty XStopSwitch -> a
    javafx.beans.property.BooleanProperty YStopSwitch -> b
    javafx.beans.property.BooleanProperty ZStopSwitch -> c
    javafx.beans.property.BooleanProperty ZTopStopSwitch -> d
    javafx.beans.property.BooleanProperty reelButton -> e
    javafx.beans.property.BooleanProperty headFanOn -> f
    javafx.beans.property.BooleanProperty ambientFanOn -> g
    javafx.beans.property.BooleanProperty bAxisHome -> h
    javafx.beans.property.BooleanProperty doorOpen -> i
    javafx.beans.property.BooleanProperty dualReelAdaptorPresent -> j
    javafx.beans.property.FloatProperty feedRateEMultiplier -> k
    javafx.beans.property.FloatProperty feedRateDMultiplier -> l
    javafx.beans.property.FloatProperty hoursCounter -> m
    javafx.beans.property.BooleanProperty sdCardInserted -> n
    javafx.beans.property.ObjectProperty bedHeaterMode -> o
    javafx.beans.property.IntegerProperty ambientTemperature -> p
    javafx.beans.property.IntegerProperty ambientTargetTemperature -> q
    javafx.beans.property.IntegerProperty bedTemperature -> r
    javafx.beans.property.IntegerProperty bedFirstLayerTargetTemperature -> s
    javafx.beans.property.IntegerProperty bedTargetTemperature -> t
    javafx.scene.chart.XYChart$Series ambientTemperatureHistory -> v
    java.util.ArrayList ambientTemperatureDataPoints -> w
    javafx.scene.chart.XYChart$Series bedTemperatureHistory -> x
    java.util.ArrayList bedTemperatureDataPoints -> y
    javafx.scene.chart.XYChart$Series ambientTargetTemperatureSeries -> z
    javafx.scene.chart.XYChart$Series bedTargetTemperatureSeries -> A
    javafx.scene.chart.XYChart$Data ambientTargetPoint -> B
    javafx.scene.chart.XYChart$Data bedTargetPoint -> C
    long lastTemperatureTimestamp -> D
    javafx.beans.property.ObjectProperty whyAreWeWaitingProperty -> u
    28:76:void <init>() -> <init>
    80:80:javafx.beans.property.ReadOnlyBooleanProperty xStopSwitchProperty() -> a
    85:85:javafx.beans.property.ReadOnlyBooleanProperty yStopSwitchProperty() -> b
    90:90:javafx.beans.property.ReadOnlyBooleanProperty zStopSwitchProperty() -> c
    95:95:javafx.beans.property.ReadOnlyBooleanProperty zTopStopSwitchProperty() -> d
    100:100:javafx.beans.property.ReadOnlyBooleanProperty reelButtonProperty() -> e
    105:105:javafx.beans.property.ReadOnlyBooleanProperty headFanOnProperty() -> f
    110:110:javafx.beans.property.ReadOnlyBooleanProperty ambientFanOnProperty() -> g
    115:115:javafx.beans.property.ReadOnlyBooleanProperty bAxisHomeProperty() -> h
    120:120:javafx.beans.property.ReadOnlyBooleanProperty doorOpenProperty() -> i
    125:125:javafx.beans.property.ReadOnlyBooleanProperty dualReelAdaptorPresentProperty() -> j
    130:130:javafx.beans.property.ReadOnlyFloatProperty feedRateEMultiplierProperty() -> k
    135:135:javafx.beans.property.ReadOnlyFloatProperty feedRateDMultiplierProperty() -> l
    140:140:javafx.beans.property.ReadOnlyObjectProperty bedHeaterModeProperty() -> m
    145:145:javafx.beans.property.ReadOnlyObjectProperty whyAreWeWaitingProperty() -> n
    150:150:javafx.beans.property.ReadOnlyIntegerProperty ambientTemperatureProperty() -> o
    155:155:javafx.beans.property.ReadOnlyIntegerProperty ambientTargetTemperatureProperty() -> p
    160:160:javafx.beans.property.ReadOnlyIntegerProperty bedTemperatureProperty() -> q
    165:165:javafx.beans.property.ReadOnlyIntegerProperty bedFirstLayerTargetTemperatureProperty() -> r
    170:170:javafx.beans.property.ReadOnlyIntegerProperty bedTargetTemperatureProperty() -> s
    175:175:javafx.beans.property.ReadOnlyFloatProperty hoursCounterProperty() -> t
    180:180:javafx.beans.property.ReadOnlyBooleanProperty sdCardInsertedProperty() -> u
    185:185:javafx.scene.chart.XYChart$Series getAmbientTemperatureHistory() -> v
    190:190:javafx.scene.chart.XYChart$Series getBedTemperatureHistory() -> w
    195:238:void updateGraphData() -> x
celtech.roboxbase.printerControl.model.PrinterAncillarySystems$1 -> celtech.roboxbase.printerControl.model.h$1:
    int[] $SwitchMap$celtech$roboxbase$printerControl$model$HeaterMode -> a
    224:224:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.PrinterChangesListener -> celtech.roboxbase.printerControl.model.i:
    void whenHeadAdded() -> a
    void whenHeadRemoved(celtech.roboxbase.printerControl.model.Head) -> a
    void whenReelAdded(int,celtech.roboxbase.printerControl.model.Reel) -> a
    void whenReelRemoved(int,celtech.roboxbase.printerControl.model.Reel) -> b
    void whenReelChanged(celtech.roboxbase.printerControl.model.Reel) -> a
    void whenExtruderAdded(int) -> a
    void whenExtruderRemoved(int) -> b
celtech.roboxbase.printerControl.model.PrinterChangesNotifier -> celtech.roboxbase.printerControl.model.j:
    java.util.List listeners -> a
    java.util.Map reelListeners -> b
    java.util.Map reelNotifiers -> c
    javafx.beans.value.ChangeListener extruder0Listener -> d
    javafx.beans.value.ChangeListener extruder1Listener -> e
    40:126:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    130:131:void addListener(celtech.roboxbase.printerControl.model.PrinterChangesListener) -> a
    135:136:void removeListener(celtech.roboxbase.printerControl.model.PrinterChangesListener) -> b
    140:153:void setupReelChangesNotifier(celtech.roboxbase.printerControl.model.Reel) -> a
    157:158:void removeReelChangesNotifier(celtech.roboxbase.printerControl.model.Reel) -> b
    162:167:void fireWhenReelChanged(celtech.roboxbase.printerControl.model.Reel) -> c
    165:166:void lambda$fireWhenReelChanged$3(celtech.roboxbase.printerControl.model.Reel,celtech.roboxbase.printerControl.model.PrinterChangesListener) -> a
    114:123:void lambda$new$2(celtech.roboxbase.printerControl.model.Printer,javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    96:105:void lambda$new$1(celtech.roboxbase.printerControl.model.Printer,javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> b
    52:65:void lambda$new$0(javafx.beans.value.ObservableValue,celtech.roboxbase.printerControl.model.Head,celtech.roboxbase.printerControl.model.Head) -> a
    37:37:void access$000(celtech.roboxbase.printerControl.model.PrinterChangesNotifier,celtech.roboxbase.printerControl.model.Reel) -> a
    37:37:void access$100(celtech.roboxbase.printerControl.model.PrinterChangesNotifier,celtech.roboxbase.printerControl.model.Reel) -> b
celtech.roboxbase.printerControl.model.PrinterChangesNotifier$1 -> celtech.roboxbase.printerControl.model.j$1:
    celtech.roboxbase.printerControl.model.PrinterChangesNotifier this$0 -> a
    68:68:void <init>(celtech.roboxbase.printerControl.model.PrinterChangesNotifier) -> <init>
    73:88:void onChanged(javafx.collections.MapChangeListener$Change) -> onChanged
celtech.roboxbase.printerControl.model.PrinterChangesNotifier$2 -> celtech.roboxbase.printerControl.model.j$2:
    celtech.roboxbase.printerControl.model.Reel val$reel -> a
    celtech.roboxbase.printerControl.model.PrinterChangesNotifier this$0 -> b
    142:142:void <init>(celtech.roboxbase.printerControl.model.PrinterChangesNotifier,celtech.roboxbase.printerControl.model.Reel) -> <init>
    146:147:void whenReelChanged() -> a
celtech.roboxbase.printerControl.model.PrinterException -> celtech.roboxbase.printerControl.model.PrinterException:
    11:12:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.model.PrinterIdentity -> celtech.roboxbase.printerControl.model.k:
    javafx.beans.property.StringProperty printerUniqueID -> a
    javafx.beans.property.StringProperty printermodel -> b
    javafx.beans.property.StringProperty printeredition -> c
    javafx.beans.property.StringProperty printerweekOfManufacture -> d
    javafx.beans.property.StringProperty printeryearOfManufacture -> e
    javafx.beans.property.StringProperty printerpoNumber -> f
    javafx.beans.property.StringProperty printerserialNumber -> g
    javafx.beans.property.StringProperty printercheckByte -> h
    javafx.beans.property.StringProperty printerFriendlyName -> i
    javafx.beans.property.ObjectProperty printerColour -> j
    javafx.beans.property.StringProperty firmwareVersion -> k
    javafx.beans.value.ChangeListener stringChangeListener -> l
    20:67:void <init>() -> <init>
    71:71:javafx.beans.property.ReadOnlyStringProperty printerUniqueIDProperty() -> a
    80:80:javafx.beans.property.ReadOnlyStringProperty printermodelProperty() -> b
    89:89:javafx.beans.property.ReadOnlyStringProperty printereditionProperty() -> c
    98:98:javafx.beans.property.ReadOnlyStringProperty printerweekOfManufactureProperty() -> d
    107:107:javafx.beans.property.ReadOnlyStringProperty printeryearOfManufactureProperty() -> e
    116:116:javafx.beans.property.ReadOnlyStringProperty printerpoNumberProperty() -> f
    125:125:javafx.beans.property.ReadOnlyStringProperty printerserialNumberProperty() -> g
    134:134:javafx.beans.property.ReadOnlyStringProperty printercheckByteProperty() -> h
    143:143:javafx.beans.property.ReadOnlyStringProperty printerFriendlyNameProperty() -> i
    152:152:javafx.beans.property.ReadOnlyObjectProperty printerColourProperty() -> j
    161:161:javafx.beans.property.ReadOnlyStringProperty firmwareVersionProperty() -> k
    170:177:void updatePrinterUniqueID() -> m
    182:195:celtech.roboxbase.printerControl.model.PrinterIdentity clone() -> l
    201:215:java.lang.String toString() -> toString
    17:17:java.lang.Object clone() -> clone
    17:17:void access$000(celtech.roboxbase.printerControl.model.PrinterIdentity) -> a
celtech.roboxbase.printerControl.model.PrinterIdentity$1 -> celtech.roboxbase.printerControl.model.k$1:
    celtech.roboxbase.printerControl.model.PrinterIdentity this$0 -> a
    33:33:void <init>(celtech.roboxbase.printerControl.model.PrinterIdentity) -> <init>
    38:39:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
    33:33:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.PrinterIdentity$2 -> celtech.roboxbase.printerControl.model.k$2:
    celtech.roboxbase.printerControl.model.PrinterIdentity this$0 -> a
    47:47:void <init>(celtech.roboxbase.printerControl.model.PrinterIdentity) -> <init>
    53:54:void changed(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color) -> a
    47:47:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.PrinterListChangesAdapter -> celtech.roboxbase.printerControl.model.l:
    10:10:void <init>() -> <init>
    16:16:void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    21:21:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    26:26:void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    31:31:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    36:36:void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    41:41:void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    46:46:void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    51:51:void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    56:56:void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
celtech.roboxbase.printerControl.model.PrinterListChangesListener -> celtech.roboxbase.printerControl.model.m:
    void whenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterAdded
    void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
    void whenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> whenHeadAdded
    void whenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> whenHeadRemoved
    void whenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenReelAdded
    void whenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> whenReelRemoved
    void whenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> whenReelChanged
    void whenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderAdded
    void whenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> whenExtruderRemoved
celtech.roboxbase.printerControl.model.PrinterListChangesNotifier -> celtech.roboxbase.printerControl.model.n:
    java.util.List listeners -> a
    java.util.Map printerListeners -> b
    java.util.Map printerNotifiers -> c
    30:63:void <init>(javafx.collections.ObservableList) -> <init>
    67:89:void fireWhenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> a
    93:143:void setupPrinterChangesNotifier(celtech.roboxbase.printerControl.model.Printer) -> b
    147:148:void removePrinterChangesNotifier(celtech.roboxbase.printerControl.model.Printer) -> c
    152:180:void fireWhenPrinterAdded(celtech.roboxbase.printerControl.model.Printer) -> d
    184:185:void addListener(celtech.roboxbase.printerControl.model.PrinterListChangesListener) -> a
    189:190:void removeListener(celtech.roboxbase.printerControl.model.PrinterListChangesListener) -> b
    194:199:void fireWhenHeadAdded(celtech.roboxbase.printerControl.model.Printer) -> e
    203:208:void fireWhenHeadRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> a
    212:217:void fireWhenReelAdded(celtech.roboxbase.printerControl.model.Printer,int) -> a
    221:226:void fireWhenReelRemoved(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> a
    230:235:void fireWhenReelChanged(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> a
    239:244:void fireWhenExtruderAdded(celtech.roboxbase.printerControl.model.Printer,int) -> b
    248:253:void fireWhenExtruderRemoved(celtech.roboxbase.printerControl.model.Printer,int) -> c
    169:170:void lambda$fireWhenPrinterAdded$1(celtech.roboxbase.printerControl.model.PrinterListChangesListener,celtech.roboxbase.printerControl.model.Printer,java.util.Map$Entry) -> a
    39:62:void lambda$new$0(javafx.collections.ListChangeListener$Change) -> a
    27:27:void access$000(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer) -> a
    27:27:void access$100(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Head) -> a
    27:27:void access$200(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,int) -> a
    27:27:void access$300(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel,int) -> a
    27:27:void access$400(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.printerControl.model.Reel) -> a
    27:27:void access$500(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,int) -> b
    27:27:void access$600(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer,int) -> c
celtech.roboxbase.printerControl.model.PrinterListChangesNotifier$1 -> celtech.roboxbase.printerControl.model.n$1:
    celtech.roboxbase.printerControl.model.Printer val$printer -> a
    celtech.roboxbase.printerControl.model.PrinterListChangesNotifier this$0 -> b
    95:95:void <init>(celtech.roboxbase.printerControl.model.PrinterListChangesNotifier,celtech.roboxbase.printerControl.model.Printer) -> <init>
    100:101:void whenHeadAdded() -> a
    106:107:void whenHeadRemoved(celtech.roboxbase.printerControl.model.Head) -> a
    112:113:void whenReelAdded(int,celtech.roboxbase.printerControl.model.Reel) -> a
    118:119:void whenReelRemoved(int,celtech.roboxbase.printerControl.model.Reel) -> b
    124:125:void whenReelChanged(celtech.roboxbase.printerControl.model.Reel) -> a
    130:131:void whenExtruderAdded(int) -> a
    136:137:void whenExtruderRemoved(int) -> b
celtech.roboxbase.printerControl.model.Reel -> celtech.roboxbase.printerControl.model.o:
    libertysystems.stenographer.Stenographer steno -> o
    javafx.beans.property.StringProperty friendlyFilamentName -> a
    javafx.beans.property.ObjectProperty material -> b
    javafx.beans.property.StringProperty filamentID -> c
    javafx.beans.property.FloatProperty diameter -> d
    javafx.beans.property.FloatProperty filamentMultiplier -> e
    javafx.beans.property.FloatProperty feedRateMultiplier -> f
    javafx.beans.property.IntegerProperty ambientTemperature -> g
    javafx.beans.property.IntegerProperty firstLayerBedTemperature -> h
    javafx.beans.property.IntegerProperty bedTemperature -> i
    javafx.beans.property.IntegerProperty firstLayerNozzleTemperature -> j
    javafx.beans.property.IntegerProperty nozzleTemperature -> k
    javafx.beans.property.ObjectProperty displayColour -> l
    javafx.beans.property.FloatProperty remainingFilament -> m
    javafx.beans.property.BooleanProperty dataChangedToggle -> n
    javafx.beans.value.ChangeListener stringChangeListener -> p
    javafx.beans.value.ChangeListener numberChangeListener -> q
    77:78:void dataChanged() -> q
    38:112:void <init>() -> <init>
    116:116:javafx.beans.property.ReadOnlyStringProperty friendlyFilamentNameProperty() -> a
    121:121:javafx.beans.property.ReadOnlyObjectProperty materialProperty() -> b
    126:126:javafx.beans.property.ReadOnlyStringProperty filamentIDProperty() -> c
    131:131:javafx.beans.property.ReadOnlyFloatProperty diameterProperty() -> d
    136:136:javafx.beans.property.ReadOnlyFloatProperty filamentMultiplierProperty() -> e
    141:141:javafx.beans.property.ReadOnlyFloatProperty feedRateMultiplierProperty() -> f
    146:146:javafx.beans.property.ReadOnlyIntegerProperty ambientTemperatureProperty() -> g
    151:151:javafx.beans.property.ReadOnlyIntegerProperty firstLayerBedTemperatureProperty() -> h
    156:156:javafx.beans.property.ReadOnlyIntegerProperty bedTemperatureProperty() -> i
    161:161:javafx.beans.property.ReadOnlyIntegerProperty firstLayerNozzleTemperatureProperty() -> j
    166:166:javafx.beans.property.ReadOnlyIntegerProperty nozzleTemperatureProperty() -> k
    171:171:javafx.beans.property.ReadOnlyObjectProperty displayColourProperty() -> l
    176:176:javafx.beans.property.ReadOnlyFloatProperty remainingFilamentProperty() -> m
    181:181:javafx.beans.property.ReadOnlyBooleanProperty dataChangedToggleProperty() -> n
    186:199:void updateFromEEPROMData(celtech.roboxbase.comms.rx.ReelEEPROMDataResponse) -> a
    209:227:boolean isSameAs(celtech.roboxbase.configuration.Filament) -> a
    232:245:void noReelLoaded() -> o
    249:249:boolean isUserFilament() -> p
    254:267:void updateContents(celtech.roboxbase.configuration.Filament) -> b
    271:355:celtech.roboxbase.printerControl.model.RepairResult bringDataInBounds(celtech.roboxbase.configuration.Filament) -> c
    35:35:void access$000(celtech.roboxbase.printerControl.model.Reel) -> a
celtech.roboxbase.printerControl.model.Reel$1 -> celtech.roboxbase.printerControl.model.o$1:
    celtech.roboxbase.printerControl.model.Reel this$0 -> a
    57:57:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    62:63:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> a
    57:57:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.Reel$2 -> celtech.roboxbase.printerControl.model.o$2:
    celtech.roboxbase.printerControl.model.Reel this$0 -> a
    66:66:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    71:72:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    66:66:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.Reel$3 -> celtech.roboxbase.printerControl.model.o$3:
    celtech.roboxbase.printerControl.model.Reel this$0 -> a
    84:84:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    89:90:void changed(javafx.beans.value.ObservableValue,celtech.roboxbase.MaterialType,celtech.roboxbase.MaterialType) -> a
    84:84:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.Reel$4 -> celtech.roboxbase.printerControl.model.o$4:
    celtech.roboxbase.printerControl.model.Reel this$0 -> a
    103:103:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    108:109:void changed(javafx.beans.value.ObservableValue,javafx.scene.paint.Color,javafx.scene.paint.Color) -> a
    103:103:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.printerControl.model.ReelChangesListener -> celtech.roboxbase.printerControl.model.p:
    void whenReelChanged() -> a
celtech.roboxbase.printerControl.model.ReelChangesNotifier -> celtech.roboxbase.printerControl.model.q:
    java.util.List listeners -> a
    18:26:void <init>(celtech.roboxbase.printerControl.model.Reel) -> <init>
    29:33:void fireReelChanged() -> a
    37:38:void addListener(celtech.roboxbase.printerControl.model.ReelChangesListener) -> a
    42:43:void removeListener(celtech.roboxbase.printerControl.model.ReelChangesListener) -> b
    24:25:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
celtech.roboxbase.printerControl.model.RepairResult -> celtech.roboxbase.printerControl.model.RepairResult:
    celtech.roboxbase.printerControl.model.RepairResult NO_REPAIR_NECESSARY -> NO_REPAIR_NECESSARY
    celtech.roboxbase.printerControl.model.RepairResult REPAIRED_WRITE_AND_RECALIBRATE -> REPAIRED_WRITE_AND_RECALIBRATE
    celtech.roboxbase.printerControl.model.RepairResult REPAIRED_WRITE_ONLY -> REPAIRED_WRITE_ONLY
    celtech.roboxbase.printerControl.model.RepairResult[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.printerControl.model.RepairResult[] values() -> values
    7:7:celtech.roboxbase.printerControl.model.RepairResult valueOf(java.lang.String) -> valueOf
    7:7:void <init>(java.lang.String,int) -> <init>
    7:9:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.RepairableComponent -> celtech.roboxbase.printerControl.model.r:
    celtech.roboxbase.printerControl.model.RepairResult bringDataInBounds() -> t
    void resetToDefaults() -> u
    void allocateRandomID() -> v
celtech.roboxbase.printerControl.model.TemperatureAndPWMData -> celtech.roboxbase.printerControl.model.s:
    int nozzle1Temperature -> a
    int nozzleHeater1PWMDutyCycle -> b
    int nozzle2Temperature -> c
    int nozzleHeater2PWMDutyCycle -> d
    int bedTemperature -> e
    celtech.roboxbase.configuration.OperatingVoltage operatingVoltage -> f
    int bedHeaterPWMDutyCycle -> g
    int ambientTemperature -> h
    int ambientFanPWMDutyCycle -> i
    11:11:void <init>() -> <init>
    26:26:int getNozzle1Temperature() -> a
    31:32:void setNozzle1Temperature(int) -> a
    36:36:int getNozzleHeater1PWMDutyCycle() -> b
    41:42:void setNozzleHeater1PWMDutyCycle(int) -> b
    46:46:int getNozzle2Temperature() -> c
    51:52:void setNozzle2Temperature(int) -> c
    56:56:int getNozzleHeater2PWMDutyCycle() -> d
    61:62:void setNozzleHeater2PWMDutyCycle(int) -> d
    66:66:int getBedTemperature() -> e
    71:72:void setBedTemperature(int) -> e
    76:76:celtech.roboxbase.configuration.OperatingVoltage getOperatingVoltage() -> f
    81:82:void setOperatingVoltage(celtech.roboxbase.configuration.OperatingVoltage) -> a
    86:86:int getBedHeaterPWMDutyCycle() -> g
    91:92:void setBedHeaterPWMDutyCycle(int) -> f
    96:96:int getAmbientTemperature() -> h
    101:102:void setAmbientTemperature(int) -> g
    106:106:int getAmbientFanPWMDutyCycle() -> i
    111:112:void setAmbientFanPWMDutyCycle(int) -> h
    119:183:void populateFromPrinterData(java.lang.String) -> a
celtech.roboxbase.printerControl.model.statetransitions.ArrivalAction -> celtech.roboxbase.printerControl.model.statetransitions.a:
    celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc action -> a
    java.lang.Object failedState -> b
    28:31:void <init>(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,java.lang.Object) -> <init>
celtech.roboxbase.printerControl.model.statetransitions.StateTransition -> celtech.roboxbase.printerControl.model.statetransitions.b:
    java.lang.Object fromState -> a
    java.lang.Object toState -> b
    java.lang.Object transitionFailedState -> c
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName guiName -> d
    celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc action -> e
    44:50:void <init>(java.lang.Object,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName,java.lang.Object,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,java.lang.Object) -> <init>
    55:56:void <init>(java.lang.Object,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName,java.lang.Object,java.lang.Object) -> <init>
    61:62:void <init>(java.lang.Object,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName,java.lang.Object,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc) -> <init>
    67:68:void <init>(java.lang.Object,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName,java.lang.Object) -> <init>
    71:71:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName getGUIName() -> a
celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions -> celtech.roboxbase.printerControl.model.statetransitions.c:
    celtech.roboxbase.utils.tasks.Cancellable userCancellable -> a
    celtech.roboxbase.utils.tasks.Cancellable errorCancellable -> b
    celtech.roboxbase.utils.tasks.Cancellable userOrErrorCancellable -> c
    26:29:void <init>(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    void initialise() -> a
    41:53:void setUserCancellable(celtech.roboxbase.utils.tasks.Cancellable) -> a
    57:58:void setUserOrErrorCancellable() -> e
    65:77:void setErrorCancellable(celtech.roboxbase.utils.tasks.Cancellable) -> b
    void whenUserCancelDetected() -> b
    void whenErrorDetected() -> c
    void resetAfterCancelOrError() -> d
    72:76:void lambda$setErrorCancellable$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    48:52:void lambda$setUserCancellable$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> b
celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager -> celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions actions -> a
    java.util.Set allowedTransitions -> b
    java.util.Map arrivals -> c
    javafx.beans.property.ObjectProperty state -> e
    javafx.beans.property.ObjectProperty stateGUIT -> f
    celtech.roboxbase.utils.tasks.Cancellable userCancellable -> g
    celtech.roboxbase.utils.tasks.Cancellable errorCancellable -> h
    java.lang.Object cancellingState -> i
    java.lang.Object cancelledState -> j
    java.lang.Object failedState -> k
    java.lang.Object initialState -> l
    boolean runningAction -> m
    129:129:javafx.beans.property.ReadOnlyObjectProperty stateGUITProperty() -> a
    78:185:void <init>(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    193:198:void start() -> b
    207:207:java.util.Set getTransitions() -> c
    212:220:java.util.Set getTransitions(java.lang.Object) -> a
    231:235:void setState(java.lang.Object) -> b
    240:279:void processArrivedAtState(java.lang.Object) -> c
    288:303:void doCancelOrErrorDetectedAndGotoState(java.lang.Object) -> d
    307:316:celtech.roboxbase.printerControl.model.statetransitions.StateTransition getTransitionForGUIName(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName) -> b
    321:326:java.lang.Object getFailedState(celtech.roboxbase.printerControl.model.statetransitions.StateTransition) -> a
    342:402:void followTransition(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName) -> a
    409:416:void followAutoTransitionIfPresent(java.lang.Object) -> e
    426:427:void cancel() -> d
    431:437:void userCancelRequested() -> e
    441:446:void errorCancelRequested() -> f
    384:394:void lambda$followTransition$8(celtech.roboxbase.printerControl.model.statetransitions.StateTransition) -> b
    364:380:void lambda$followTransition$7(celtech.roboxbase.printerControl.model.statetransitions.StateTransition) -> c
    292:301:void lambda$doCancelOrErrorDetectedAndGotoState$6(java.lang.Object) -> f
    263:272:void lambda$processArrivedAtState$5(celtech.roboxbase.printerControl.model.statetransitions.ArrivalAction) -> a
    248:259:void lambda$processArrivedAtState$4(celtech.roboxbase.printerControl.model.statetransitions.ArrivalAction) -> b
    180:184:void lambda$new$3(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    172:176:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> b
    163:167:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> a
    165:166:void lambda$null$0() -> g
celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName -> celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName:
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName START -> START
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName CANCEL -> CANCEL
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName BACK -> BACK
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName NEXT -> NEXT
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName RETRY -> RETRY
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName COMPLETE -> COMPLETE
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName YES -> YES
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName NO -> NO
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName UP -> UP
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName DOWN -> DOWN
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName A_BUTTON -> A_BUTTON
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName B_BUTTON -> B_BUTTON
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName AUTO -> AUTO
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName[] $VALUES -> $VALUES
    72:72:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName[] values() -> values
    72:72:celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$GUIName valueOf(java.lang.String) -> valueOf
    72:72:void <init>(java.lang.String,int) -> <init>
    72:75:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory -> celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$a:
    celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions makeStateTransitionActions(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> makeStateTransitionActions
celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory -> celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$b:
    celtech.roboxbase.printerControl.model.statetransitions.Transitions makeTransition(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionActions) -> makeTransition
celtech.roboxbase.printerControl.model.statetransitions.Transitions -> celtech.roboxbase.printerControl.model.statetransitions.d:
    java.util.Set transitions -> a
    java.util.Map arrivals -> b
    19:19:void <init>() -> <init>
    29:29:java.util.Set getTransitions() -> a
    37:37:java.util.Map getArrivals() -> b
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationException -> celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationException:
    14:15:void <init>() -> <init>
    19:20:void <init>(java.lang.String) -> <init>
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.a:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.roboxbase.printerControl.model.Printer printer -> e
    celtech.roboxbase.comms.rx.HeadEEPROMDataResponse savedHeadData -> f
    javafx.beans.property.DoubleProperty zco -> g
    javafx.beans.property.DoubleProperty zcoGUIT -> h
    double zDifference -> i
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationPrinterErrorHandler printerErrorHandler -> j
    boolean failedActionPerformed -> k
    35:65:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    70:72:void initialise() -> a
    76:85:void doInitialiseAndHeatNozzleAction() -> e
    89:112:void clearZOffsetsOnHead() -> p
    116:147:void heatNozzle() -> q
    151:157:void waitOnNozzleTemperature(int) -> a
    161:162:void doHomeZAction() -> f
    166:168:void doLiftHeadAction() -> g
    172:287:void doMeasureZDifferenceAction() -> h
    291:293:void doIncrementZAction() -> i
    297:303:void doDecrementZAction() -> j
    309:317:void doFinishedAction() -> k
    323:340:void doFailedAction() -> l
    344:347:void doBringBedToFrontAndRaiseHead() -> m
    351:353:void switchHeatersAndHeadLightOff() -> r
    357:385:void restoreHeadData() -> s
    389:409:void saveSettings() -> n
    413:413:javafx.beans.property.ReadOnlyDoubleProperty getZcoGUITProperty() -> o
    419:422:void whenUserCancelDetected() -> b
    427:430:void whenErrorDetected() -> c
    437:443:void resetAfterCancelOrError() -> d
    447:451:void resetPrinter() -> t
    457:465:void abortAnyOngoingPrint() -> u
    55:61:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    58:60:void lambda$null$0() -> v
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightTransitions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.b:
    21:151:void <init>(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> <init>
    127:128:void lambda$new$8(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> a
    114:115:void lambda$new$7(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> b
    101:102:void lambda$new$6(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> c
    93:94:void lambda$new$5(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> d
    84:85:void lambda$new$4(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> e
    75:76:void lambda$new$3(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> f
    61:62:void lambda$new$2(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> g
    35:36:void lambda$new$1(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> h
    28:29:void lambda$new$0(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleHeightActions) -> i
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.c:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.roboxbase.printerControl.model.Printer printer -> e
    celtech.roboxbase.comms.rx.HeadEEPROMDataResponse savedHeadData -> f
    float bOffsetStartingValue -> g
    float nozzleTolerance -> h
    float nozzle0BOffset -> i
    float nozzle1BOffset -> j
    javafx.beans.property.FloatProperty nozzlePosition -> k
    javafx.beans.property.FloatProperty bPositionGUIT -> l
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationPrinterErrorHandler printerErrorHandler -> m
    boolean failedActionPerformed -> n
    37:72:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    77:79:void initialise() -> a
    83:193:void doHeatingAction() -> e
    197:203:void waitOnNozzleTemperature(int) -> a
    207:218:void doNoMaterialCheckAction() -> f
    222:233:void doT0Extrusion() -> g
    237:248:void doT1Extrusion() -> h
    252:280:void doPreCalibrationPrimingFine() -> i
    284:285:void doCalibrateFineNozzle() -> j
    289:297:void doIncrementFineNozzlePosition() -> k
    301:309:void doIncrementFillNozzlePosition() -> l
    313:316:void doPreCalibrationPrimingFill() -> m
    320:321:void doCalibrateFillNozzle() -> n
    325:329:void doFinaliseCalibrateFineNozzle() -> o
    333:337:void doFinaliseCalibrateFillNozzle() -> p
    342:354:void doConfirmNoMaterialAction() -> q
    358:383:void doConfirmMaterialExtrudingAction() -> r
    387:407:void saveSettings() -> w
    411:439:void restoreHeadData() -> x
    446:463:void extrudeUntilStall(int) -> b
    467:467:javafx.beans.property.ReadOnlyFloatProperty getBPositionGUITProperty() -> s
    472:481:void pressuriseSystem(int) -> c
    487:495:void doFinishedAction() -> t
    500:518:void doFailedAction() -> u
    523:526:void whenUserCancelDetected() -> b
    531:535:void whenErrorDetected() -> c
    542:548:void resetAfterCancelOrError() -> d
    552:560:void resetPrinter() -> y
    564:567:void doBringBedToFrontAndRaiseHead() -> v
    571:573:void switchHeatersAndHeadLightOff() -> z
    579:591:void abortAnyOngoingPrint() -> A
    62:68:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    65:67:void lambda$null$0() -> B
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningTransitions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.d:
    21:239:void <init>(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> <init>
    210:211:void lambda$new$13(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> a
    189:190:void lambda$new$12(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> b
    179:180:void lambda$new$11(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> c
    166:167:void lambda$new$10(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> d
    151:152:void lambda$new$9(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> e
    140:142:void lambda$new$8(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> f
    127:128:void lambda$new$7(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> g
    117:118:void lambda$new$6(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> h
    80:81:void lambda$new$5(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> i
    70:71:void lambda$new$4(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> j
    49:50:void lambda$new$3(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> k
    42:43:void lambda$new$2(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> l
    35:36:void lambda$new$1(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> m
    28:29:void lambda$new$0(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationNozzleOpeningActions) -> n
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationPrinterErrorHandler -> celtech.roboxbase.printerControl.model.statetransitions.calibration.e:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.printerControl.model.Printer printer -> c
    celtech.roboxbase.utils.tasks.Cancellable errorCancellable -> d
    celtech.roboxbase.comms.events.ErrorConsumer errorConsumer -> a
    boolean dialogOnDisplay -> e
    27:57:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    47:50:void registerForPrinterErrors() -> a
    61:118:void notifyUserErrorHasOccurredAndAbortIfNotSlip(celtech.roboxbase.comms.rx.FirmwareError) -> a
    122:123:void cancelCalibration() -> c
    127:128:void deregisterForPrinterErrors() -> b
    41:43:void lambda$new$0(celtech.roboxbase.comms.rx.FirmwareError) -> b
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationPrinterErrorHandler$1 -> celtech.roboxbase.printerControl.model.statetransitions.calibration.e$1:
    int[] $SwitchMap$celtech$roboxbase$appManager$SystemNotificationManager$PrinterErrorChoice -> a
    85:85:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationUtils -> celtech.roboxbase.printerControl.model.statetransitions.calibration.f:
    12:12:void <init>() -> <init>
    17:28:void setCancelledIfPrinterDisconnected(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> a
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationUtils$1 -> celtech.roboxbase.printerControl.model.statetransitions.calibration.f$1:
    celtech.roboxbase.printerControl.model.Printer val$printerToMonitor -> a
    celtech.roboxbase.utils.tasks.Cancellable val$cancellable -> b
    18:18:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    22:26:void whenPrinterRemoved(celtech.roboxbase.printerControl.model.Printer) -> whenPrinterRemoved
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.g:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.roboxbase.printerControl.model.Printer printer -> e
    celtech.roboxbase.comms.rx.HeadEEPROMDataResponse savedHeadData -> f
    int xOffset -> g
    int yOffset -> h
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationPrinterErrorHandler printerErrorHandler -> i
    boolean failedActionPerformed -> j
    28:48:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    53:56:void initialise() -> a
    60:64:void doSaveHead() -> e
    68:78:void doPrintPattern() -> f
    82:93:void doSaveSettingsAndPrintCircle() -> g
    97:102:void switchHeatersOffAndRaiseHead() -> j
    106:135:void restoreHeadData() -> k
    141:180:void saveSettings() -> l
    184:220:void setXOffset(java.lang.String) -> a
    224:225:void setYOffset(int) -> a
    231:239:void doFinishedAction() -> h
    244:260:void doFailedAction() -> i
    265:268:void whenUserCancelDetected() -> b
    273:276:void whenErrorDetected() -> c
    283:289:void resetAfterCancelOrError() -> d
    295:307:void abortAnyOngoingPrint() -> m
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState -> celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState:
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState IDLE -> IDLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState PRINT_PATTERN -> PRINT_PATTERN
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState GET_Y_OFFSET -> GET_Y_OFFSET
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState PRINT_CIRCLE -> PRINT_CIRCLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState PRINT_CIRCLE_CHECK -> PRINT_CIRCLE_CHECK
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState FINISHED -> FINISHED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState CANCELLING -> CANCELLING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState CANCELLED -> CANCELLED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState DONE -> DONE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState FAILED -> FAILED
    java.lang.String stepTitleResource -> stepTitleResource
    java.lang.String diagramName -> diagramName
    celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState[] $VALUES -> $VALUES
    11:11:celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState[] values() -> values
    11:11:celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYState valueOf(java.lang.String) -> valueOf
    33:36:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    42:42:boolean showCancelButton() -> showCancelButton
    47:51:java.util.Optional getDiagramName() -> getDiagramName
    57:62:java.lang.String getStepTitle() -> getStepTitle
    11:27:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYTransitions -> celtech.roboxbase.printerControl.model.statetransitions.calibration.h:
    21:104:void <init>(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions) -> <init>
    60:61:void lambda$new$3(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions) -> a
    47:48:void lambda$new$2(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions) -> b
    35:36:void lambda$new$1(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions) -> c
    28:29:void lambda$new$0(celtech.roboxbase.printerControl.model.statetransitions.calibration.CalibrationXAndYActions) -> d
celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState -> celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState:
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState IDLE -> IDLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState INITIALISING -> INITIALISING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState HEATING -> HEATING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState HEAD_CLEAN_CHECK -> HEAD_CLEAN_CHECK
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState MEASURE_Z_DIFFERENCE -> MEASURE_Z_DIFFERENCE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState INSERT_PAPER -> INSERT_PAPER
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState PROBING -> PROBING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState INCREMENT_Z -> INCREMENT_Z
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState DECREMENT_Z -> DECREMENT_Z
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState BRING_BED_FORWARD -> BRING_BED_FORWARD
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState REPLACE_PEI_BED -> REPLACE_PEI_BED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState FINISHED -> FINISHED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState FAILED -> FAILED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState CANCELLING -> CANCELLING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState CANCELLED -> CANCELLED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState DONE -> DONE
    java.lang.String stepTitleResource -> stepTitleResource
    java.lang.String diagramName -> diagramName
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState[] $VALUES -> $VALUES
    12:12:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState[] values() -> values
    12:12:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightCalibrationState valueOf(java.lang.String) -> valueOf
    39:42:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    48:48:boolean showCancelButton() -> showCancelButton
    52:56:java.util.Optional getDiagramName() -> getDiagramName
    61:66:java.lang.String getStepTitle() -> getStepTitle
    12:33:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleHeightStateTransitionManager -> celtech.roboxbase.printerControl.model.statetransitions.calibration.i:
    19:22:void <init>(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory) -> <init>
    26:26:javafx.beans.property.ReadOnlyDoubleProperty getZcoProperty() -> e
celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState -> celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState:
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState IDLE -> IDLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState HEATING -> HEATING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState NO_MATERIAL_CHECK_NO_YES_NO_BUTTONS -> NO_MATERIAL_CHECK_NO_YES_NO_BUTTONS
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState NO_MATERIAL_CHECK -> NO_MATERIAL_CHECK
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState T0_EXTRUDING -> T0_EXTRUDING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState T1_EXTRUDING -> T1_EXTRUDING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState HEAD_CLEAN_CHECK_AFTER_EXTRUDE -> HEAD_CLEAN_CHECK_AFTER_EXTRUDE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState PRE_CALIBRATION_PRIMING_FINE -> PRE_CALIBRATION_PRIMING_FINE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CALIBRATE_FINE_NOZZLE -> CALIBRATE_FINE_NOZZLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState INCREMENT_FINE_NOZZLE_POSITION_NO_BUTTONS -> INCREMENT_FINE_NOZZLE_POSITION_NO_BUTTONS
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState INCREMENT_FINE_NOZZLE_POSITION -> INCREMENT_FINE_NOZZLE_POSITION
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState PRE_CALIBRATION_PRIMING_FILL -> PRE_CALIBRATION_PRIMING_FILL
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CALIBRATE_FILL_NOZZLE -> CALIBRATE_FILL_NOZZLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState INCREMENT_FILL_NOZZLE_POSITION_NO_BUTTONS -> INCREMENT_FILL_NOZZLE_POSITION_NO_BUTTONS
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState INCREMENT_FILL_NOZZLE_POSITION -> INCREMENT_FILL_NOZZLE_POSITION
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState HEAD_CLEAN_CHECK_FILL_NOZZLE -> HEAD_CLEAN_CHECK_FILL_NOZZLE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CONFIRM_NO_MATERIAL_NO_YESNO_BUTTONS -> CONFIRM_NO_MATERIAL_NO_YESNO_BUTTONS
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CONFIRM_NO_MATERIAL -> CONFIRM_NO_MATERIAL
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState FINISHED -> FINISHED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CANCELLING -> CANCELLING
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState CANCELLED -> CANCELLED
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState DONE -> DONE
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState FAILED -> FAILED
    java.lang.String stepTitleResource -> stepTitleResource
    java.lang.String diagramName -> diagramName
    celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState[] $VALUES -> $VALUES
    11:11:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState[] values() -> values
    11:11:celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningCalibrationState valueOf(java.lang.String) -> valueOf
    61:68:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    74:74:boolean showCancelButton() -> showCancelButton
    78:82:java.util.Optional getDiagramName() -> getDiagramName
    87:92:java.lang.String getStepTitle() -> getStepTitle
    11:59:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.calibration.NozzleOpeningStateTransitionManager -> celtech.roboxbase.printerControl.model.statetransitions.calibration.j:
    21:24:void <init>(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory) -> <init>
    28:28:javafx.beans.property.ReadOnlyFloatProperty getBPositionProperty() -> e
celtech.roboxbase.printerControl.model.statetransitions.calibration.XAndYStateTransitionManager -> celtech.roboxbase.printerControl.model.statetransitions.calibration.k:
    20:23:void <init>(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory) -> <init>
    27:28:void setXOffset(java.lang.String) -> a
    32:33:void setYOffset(int) -> a
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions -> celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions:
    libertysystems.stenographer.Stenographer steno -> d
    celtech.roboxbase.printerControl.model.Printer printer -> e
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgePrinterErrorHandler printerErrorHandler -> f
    celtech.roboxbase.comms.rx.HeadEEPROMDataResponse savedHeadData -> g
    java.util.List nozzleFilamentTemperature -> h
    java.util.List lastDisplayTemperature -> i
    java.util.List currentDisplayTemperature -> j
    java.util.List purgeTemperature -> k
    javafx.beans.property.BooleanProperty purgeNozzleHeater0 -> l
    javafx.beans.property.BooleanProperty purgeNozzleHeater1 -> m
    boolean requireSafetyFeatures -> n
    java.util.List purgeFilament -> o
    boolean failedActionPerformed -> p
    boolean doorNeedsOpening -> q
    45:96:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable,boolean) -> <init>
    102:111:void initialise() -> a
    115:130:void resetPrinter() -> l
    134:142:void doInitialiseAction() -> e
    146:146:int getNumNozzleHeaters() -> m
    153:200:void doHeatingAction() -> f
    204:224:void doRunPurgeAction() -> g
    228:256:void doFinishedAction() -> h
    261:272:void openDoor() -> n
    277:298:void doFailedAction() -> i
    304:309:void deregisterPrinterErrorHandler() -> o
    313:315:void switchHeatersAndHeadLightOff() -> p
    319:319:javafx.beans.property.ReadOnlyIntegerProperty getLastMaterialTemperatureProperty(int) -> a
    324:324:javafx.beans.property.ReadOnlyIntegerProperty getCurrentMaterialTemperatureProperty(int) -> b
    329:329:javafx.beans.property.ReadOnlyIntegerProperty getPurgeTemperatureProperty(int) -> c
    334:335:void setPurgeTemperature(int,int) -> a
    339:341:void setPurgeFilament(int,celtech.roboxbase.configuration.Filament) -> a
    345:346:void setPurgeNozzleHeater0(boolean) -> a
    350:350:javafx.beans.property.BooleanProperty getPurgeNozzleHeater0() -> j
    355:356:void setPurgeNozzleHeater1(boolean) -> b
    360:360:javafx.beans.property.BooleanProperty getPurgeNozzleHeater1() -> k
    368:390:void updatePurgeTemperature(int,celtech.roboxbase.configuration.Filament) -> b
    398:399:void whenUserCancelDetected() -> b
    407:408:void whenErrorDetected() -> c
    421:427:void resetAfterCancelOrError() -> d
    433:441:void abortAnyOngoingPrint() -> q
    266:271:void lambda$openDoor$0() -> r
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions$PurgeException -> celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions$PurgeException:
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions this$0 -> this$0
    40:42:void <init>(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions,java.lang.String) -> <init>
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgePrinterErrorHandler -> celtech.roboxbase.printerControl.model.statetransitions.purge.a:
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.printerControl.model.Printer printer -> c
    celtech.roboxbase.utils.tasks.Cancellable errorCancellable -> d
    boolean showingFilamentSlipErrorDialog -> e
    celtech.roboxbase.comms.events.ErrorConsumer errorConsumer -> a
    28:41:void <init>(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    49:52:void registerForPrinterErrors() -> a
    60:126:void notifyUserErrorHasOccurredAndAbortIfNotSlip(celtech.roboxbase.comms.rx.FirmwareError) -> a
    130:131:void cancelPurge() -> c
    135:136:void deregisterForPrinterErrors() -> b
    43:45:void lambda$new$0(celtech.roboxbase.comms.rx.FirmwareError) -> b
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgePrinterErrorHandler$1 -> celtech.roboxbase.printerControl.model.statetransitions.purge.a$1:
    int[] $SwitchMap$celtech$roboxbase$appManager$SystemNotificationManager$PrinterErrorChoice -> a
    96:96:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState -> celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState:
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState IDLE -> IDLE
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState INITIALISING -> INITIALISING
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState CONFIRM_TEMPERATURE -> CONFIRM_TEMPERATURE
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState HEATING -> HEATING
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState RUNNING_PURGE -> RUNNING_PURGE
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState FINISHED -> FINISHED
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState CANCELLED -> CANCELLED
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState CANCELLING -> CANCELLING
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState DONE -> DONE
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState FAILED -> FAILED
    java.lang.String stepTitleResource -> stepTitleResource
    boolean showCancel -> showCancel
    celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState[] $VALUES -> $VALUES
    12:12:celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState[] values() -> values
    12:12:celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeState valueOf(java.lang.String) -> valueOf
    30:33:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    37:42:java.lang.String getStepTitle() -> getStepTitle
    48:48:boolean showCancelButton() -> showCancelButton
    12:24:void <clinit>() -> <clinit>
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeStateTransitionManager -> celtech.roboxbase.printerControl.model.statetransitions.purge.b:
    24:26:void <init>(celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$StateTransitionActionsFactory,celtech.roboxbase.printerControl.model.statetransitions.StateTransitionManager$TransitionsFactory) -> <init>
    30:31:void setPurgeTemperature(int,int) -> a
    35:35:javafx.beans.property.ReadOnlyIntegerProperty getLastMaterialTemperature(int) -> a
    40:40:javafx.beans.property.ReadOnlyIntegerProperty getCurrentMaterialTemperature(int) -> b
    45:45:javafx.beans.property.ReadOnlyIntegerProperty getPurgeTemperature(int) -> c
    50:51:void setPurgeFilament(int,celtech.roboxbase.configuration.Filament) -> a
    55:56:void setPurgeNozzleHeater0(boolean) -> a
    60:60:javafx.beans.property.ReadOnlyBooleanProperty getPurgeNozzleHeater0() -> e
    65:65:javafx.beans.property.ReadOnlyBooleanProperty getPurgeNozzleHeater1() -> f
    70:71:void setPurgeNozzleHeater1(boolean) -> b
celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeTransitions -> celtech.roboxbase.printerControl.model.statetransitions.purge.c:
    23:94:void <init>(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> <init>
    76:77:void lambda$new$4(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> a
    67:68:void lambda$new$3(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> b
    53:54:void lambda$new$2(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> c
    36:37:void lambda$new$1(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> d
    29:30:void lambda$new$0(celtech.roboxbase.printerControl.model.statetransitions.purge.PurgeActions) -> e
celtech.roboxbase.services.CameraTriggerData -> n.a:
    java.lang.String goProWifiPassword -> a
    boolean moveBeforeCapture -> b
    int xMoveBeforeCapture -> c
    int yMoveBeforeCapture -> d
    long delayBeforeCapture -> e
    int delayAfterCapture -> f
    23:30:void <init>(java.lang.String,boolean,int,int,long,int) -> <init>
    34:34:java.lang.String getGoProWifiPassword() -> a
    39:39:boolean isMoveBeforeCapture() -> b
    44:44:int getxMoveBeforeCapture() -> c
    49:49:int getyMoveBeforeCapture() -> d
    54:54:long getDelayBeforeCapture() -> e
    59:59:int getDelayAfterCapture() -> f
celtech.roboxbase.services.CameraTriggerManager -> n.b:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.printerControl.model.Printer associatedPrinter -> b
    int moveFeedrate_mm_per_min -> c
    java.util.concurrent.ScheduledExecutorService scheduledPhoto -> d
    java.lang.Runnable photoRun -> e
    celtech.roboxbase.services.CameraTriggerData triggerData -> f
    javafx.beans.value.ChangeListener cameraTriggerListener -> g
    26:73:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    83:118:void appendLayerEndTriggerCode(celtech.roboxbase.postprocessor.nouveau.nodes.LayerChangeDirectiveNode) -> a
    122:124:void listenForCameraTrigger() -> a
    128:130:void stopListeningForCameraTrigger() -> b
    134:136:void triggerCamera() -> c
    140:141:void setTriggerData(celtech.roboxbase.services.CameraTriggerData) -> a
    75:79:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    23:23:libertysystems.stenographer.Stenographer access$000(celtech.roboxbase.services.CameraTriggerManager) -> a
    23:23:celtech.roboxbase.services.CameraTriggerData access$100(celtech.roboxbase.services.CameraTriggerManager) -> b
celtech.roboxbase.services.CameraTriggerManager$1 -> n.b$1:
    celtech.roboxbase.services.CameraTriggerManager this$0 -> a
    38:38:void <init>(celtech.roboxbase.services.CameraTriggerManager) -> <init>
    42:69:void run() -> run
celtech.roboxbase.services.ControllableService -> n.c:
    javafx.beans.property.ReadOnlyStringProperty titleProperty() -> titleProperty
    boolean cancelRun() -> c
    javafx.beans.property.ReadOnlyBooleanProperty runningProperty() -> runningProperty
    javafx.beans.property.ReadOnlyStringProperty messageProperty() -> messageProperty
    javafx.beans.property.ReadOnlyDoubleProperty progressProperty() -> progressProperty
celtech.roboxbase.services.firmware.FirmwareLoadResult -> o.a:
    int SDCARD_ERROR -> a
    int SUCCESS -> b
    int FILE_ERROR -> c
    int OTHER_ERROR -> d
    int status -> e
    celtech.roboxbase.comms.rx.FirmwareResponse response -> f
    9:32:void <init>() -> <init>
    36:36:int getStatus() -> a
    41:42:void setStatus(int) -> a
    46:46:celtech.roboxbase.comms.rx.FirmwareResponse getResponse() -> b
    51:52:void setResponse(celtech.roboxbase.comms.rx.FirmwareResponse) -> a
celtech.roboxbase.services.firmware.FirmwareLoadService -> o.b:
    javafx.beans.property.StringProperty firmwareFileToLoad -> a
    celtech.roboxbase.printerControl.model.Printer printerToUse -> b
    14:17:void <init>() -> <init>
    25:26:void setFirmwareFileToLoad(java.lang.String) -> a
    34:34:java.lang.String getFirmwareFileToLoad() -> a
    43:43:javafx.beans.property.StringProperty firmwareFileToLoadProperty() -> b
    49:49:javafx.concurrent.Task createTask() -> createTask
    59:59:boolean cancelRun() -> c
    68:69:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
celtech.roboxbase.services.firmware.FirmwareLoadTask -> o.c:
    java.lang.String firmwareFileToLoad -> a
    libertysystems.stenographer.Stenographer steno -> b
    celtech.roboxbase.printerControl.model.Printer printerToUpdate -> c
    24:37:void <init>(java.lang.String,celtech.roboxbase.printerControl.model.Printer) -> <init>
    42:96:celtech.roboxbase.services.firmware.FirmwareLoadResult call() -> a
    21:21:java.lang.Object call() -> call
celtech.roboxbase.services.postProcessor.GCodePostProcessingResult -> p.a:
    java.lang.String printJobUUID -> a
    java.lang.String outputFilename -> b
    celtech.roboxbase.printerControl.model.Printer printerToUse -> c
    celtech.roboxbase.postprocessor.RoboxiserResult result -> d
    12:30:void <init>(java.lang.String,java.lang.String,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.postprocessor.RoboxiserResult) -> <init>
    38:38:java.lang.String getPrintJobUUID() -> a
    47:47:java.lang.String getOutputFilename() -> b
    56:56:celtech.roboxbase.printerControl.model.Printer getPrinterToUse() -> c
    65:65:celtech.roboxbase.postprocessor.RoboxiserResult getRoboxiserResult() -> d
    74:75:void setRoboxiserResult(celtech.roboxbase.postprocessor.RoboxiserResult) -> a
celtech.roboxbase.services.postProcessor.PostProcessorService -> p.b:
    java.lang.String printJobUUID -> a
    celtech.roboxbase.utils.models.PrintableMeshes printableMeshes -> b
    celtech.roboxbase.printerControl.model.Printer printerToUse -> c
    14:14:void <init>() -> <init>
    23:24:void setPrintJobUUID(java.lang.String) -> a
    28:29:void setPrintableMeshes(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    33:34:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
    39:39:javafx.concurrent.Task createTask() -> createTask
    48:48:boolean cancelRun() -> c
celtech.roboxbase.services.postProcessor.PostProcessorTask -> p.c:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String printJobUUID -> b
    celtech.roboxbase.utils.models.PrintableMeshes printableMeshes -> c
    java.lang.String printJobDirectory -> d
    celtech.roboxbase.printerControl.model.Printer printerToUse -> e
    javafx.beans.property.DoubleProperty taskProgress -> f
    41:54:void <init>(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,celtech.roboxbase.printerControl.model.Printer) -> <init>
    59:81:celtech.roboxbase.services.postProcessor.GCodePostProcessingResult call() -> a
    91:182:celtech.roboxbase.services.postProcessor.GCodePostProcessingResult doPostProcessing(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,java.lang.String,celtech.roboxbase.printerControl.model.Printer,javafx.beans.property.DoubleProperty) -> a
    31:31:java.lang.Object call() -> call
    68:69:void lambda$call$0(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    34:35:void <clinit>() -> <clinit>
celtech.roboxbase.services.printing.DatafileSendAlreadyInProgress -> celtech.roboxbase.services.printing.DatafileSendAlreadyInProgress:
    11:11:void <init>() -> <init>
celtech.roboxbase.services.printing.DatafileSendNotInitialised -> celtech.roboxbase.services.printing.DatafileSendNotInitialised:
    11:11:void <init>() -> <init>
celtech.roboxbase.services.printing.GCodePrintResult -> celtech.roboxbase.services.printing.a:
    boolean success -> a
    java.lang.String printJobID -> b
    12:15:void <init>() -> <init>
    23:23:boolean isSuccess() -> a
    32:33:void setSuccess(boolean) -> a
    41:41:java.lang.String getPrintJobID() -> b
    50:51:void setPrintJobID(java.lang.String) -> a
celtech.roboxbase.services.printing.PrintService -> celtech.roboxbase.services.printing.b:
    14:14:void <init>() -> <init>
    20:20:javafx.concurrent.Task createTask() -> createTask
    26:27:void succeeded() -> succeeded
celtech.roboxbase.services.printing.PrintState -> celtech.roboxbase.services.printing.PrintState:
    celtech.roboxbase.services.printing.PrintState IDLE -> IDLE
    celtech.roboxbase.services.printing.PrintState SLICING -> SLICING
    celtech.roboxbase.services.printing.PrintState SENDING_TO_PRINTER -> SENDING_TO_PRINTER
    celtech.roboxbase.services.printing.PrintState PRINTING -> PRINTING
    celtech.roboxbase.services.printing.PrintState[] $VALUES -> $VALUES
    11:11:celtech.roboxbase.services.printing.PrintState[] values() -> values
    11:11:celtech.roboxbase.services.printing.PrintState valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:32:void <clinit>() -> <clinit>
celtech.roboxbase.services.printing.TransferGCodeToPrinterService -> celtech.roboxbase.services.printing.c:
    celtech.roboxbase.printerControl.model.Printer printerToUse -> a
    javafx.beans.property.StringProperty modelFileToPrint -> b
    javafx.beans.property.StringProperty currentPrintJobID -> c
    javafx.beans.property.IntegerProperty linesInGCodeFile -> d
    libertysystems.stenographer.Stenographer steno -> e
    boolean printUsingSDCard -> f
    int startFromSequenceNumber -> g
    boolean canBeReprinted -> h
    boolean dontInitiatePrint -> i
    18:30:void <init>() -> <init>
    38:39:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
    43:43:celtech.roboxbase.printerControl.model.Printer getPrinterToUse() -> h
    52:53:void setModelFileToPrint(java.lang.String) -> a
    61:61:java.lang.String getModelFileToPrint() -> a
    70:70:javafx.beans.property.StringProperty modelFileToPrintProperty() -> b
    79:80:void setCurrentPrintJobID(java.lang.String) -> b
    88:88:java.lang.String getCurrentPrintJobID() -> d
    97:97:javafx.beans.property.StringProperty currentPrintJobIDProperty() -> e
    106:107:void setLinesInGCodeFile(int) -> a
    115:115:int getLinesInGCodeFile() -> f
    124:124:javafx.beans.property.IntegerProperty linesInGCodeFileProperty() -> g
    133:134:void setPrintUsingSDCard(boolean) -> a
    142:143:void dontInitiatePrint(boolean) -> b
    148:149:javafx.concurrent.Task createTask() -> createTask
    160:161:boolean cancelRun() -> c
    167:174:void reset() -> reset
    178:179:void setStartFromSequenceNumber(int) -> b
    183:184:void setThisCanBeReprinted(boolean) -> c
celtech.roboxbase.services.printing.TransferGCodeToPrinterTask -> celtech.roboxbase.services.printing.d:
    celtech.roboxbase.printerControl.model.Printer printerToUse -> a
    java.lang.String gcodeFileToPrint -> b
    java.lang.String printJobID -> c
    libertysystems.stenographer.Stenographer steno -> d
    javafx.beans.property.IntegerProperty linesInFile -> e
    boolean printUsingSDCard -> f
    boolean dontInitiatePrint -> g
    int startFromSequenceNumber -> h
    boolean thisJobCanBeReprinted -> i
    int lineCounter -> j
    int numberOfLines -> k
    25:67:void <init>(celtech.roboxbase.printerControl.model.Printer,java.lang.String,java.lang.String,javafx.beans.property.IntegerProperty,boolean,int,boolean,boolean) -> <init>
    72:166:celtech.roboxbase.services.printing.GCodePrintResult call() -> a
    171:195:void outputLine(java.lang.String) -> a
    22:22:java.lang.Object call() -> call
celtech.roboxbase.services.slicer.AbstractSlicerService -> celtech.roboxbase.services.slicer.a:
    15:15:void <init>() -> <init>
    void setPrintJobUUID(java.lang.String) -> a
    void setPrintableMeshes(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
celtech.roboxbase.services.slicer.PrintQualityEnumeration -> celtech.roboxbase.services.slicer.PrintQualityEnumeration:
    celtech.roboxbase.services.slicer.PrintQualityEnumeration DRAFT -> DRAFT
    celtech.roboxbase.services.slicer.PrintQualityEnumeration NORMAL -> NORMAL
    celtech.roboxbase.services.slicer.PrintQualityEnumeration FINE -> FINE
    celtech.roboxbase.services.slicer.PrintQualityEnumeration CUSTOM -> CUSTOM
    java.lang.String friendlyName -> friendlyName
    celtech.roboxbase.services.slicer.PrintQualityEnumeration[] $VALUES -> $VALUES
    7:7:celtech.roboxbase.services.slicer.PrintQualityEnumeration[] values() -> values
    7:7:celtech.roboxbase.services.slicer.PrintQualityEnumeration valueOf(java.lang.String) -> valueOf
    21:23:void <init>(java.lang.String,int,java.lang.String) -> <init>
    27:27:java.lang.String getFriendlyName() -> getFriendlyName
    33:33:java.lang.String toString() -> toString
    7:16:void <clinit>() -> <clinit>
celtech.roboxbase.services.slicer.ProgressReceiver -> celtech.roboxbase.services.slicer.b:
    void progressUpdateFromSlicer(java.lang.String,float) -> a
celtech.roboxbase.services.slicer.SliceResult -> celtech.roboxbase.services.slicer.c:
    java.lang.String printJobUUID -> a
    celtech.roboxbase.utils.models.PrintableMeshes printableMeshes -> b
    celtech.roboxbase.printerControl.model.Printer printerToUse -> c
    boolean success -> d
    12:26:void <init>(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,celtech.roboxbase.printerControl.model.Printer,boolean) -> <init>
    30:30:java.lang.String getPrintJobUUID() -> a
    35:35:celtech.roboxbase.utils.models.PrintableMeshes getPrintableMeshes() -> b
    40:40:celtech.roboxbase.printerControl.model.Printer getPrinterToUse() -> c
    45:45:boolean isSuccess() -> d
    50:51:void setSuccess(boolean) -> a
celtech.roboxbase.services.slicer.SlicedFile -> celtech.roboxbase.services.slicer.d:
    java.lang.String UUIDString -> a
    java.lang.String UUIDStringTag -> b
    16:24:void <init>() -> <init>
    16:33:void <init>(java.lang.String) -> <init>
    41:41:java.lang.String getUUIDString() -> a
    50:51:void setUUIDString(java.lang.String) -> a
celtech.roboxbase.services.slicer.SlicedPrintJobIdentifier -> celtech.roboxbase.services.slicer.e:
    int linesInPrintFile -> a
    java.lang.String printJobUUID -> b
    13:25:void <init>(int,java.lang.String) -> <init>
    33:33:int getLinesInPrintFile() -> a
    42:43:void setLinesInPrintFile(int) -> a
    51:51:java.lang.String getPrintJobUUID() -> b
    60:61:void setPrintJobUUID(java.lang.String) -> a
celtech.roboxbase.services.slicer.SlicerOutputGobbler -> celtech.roboxbase.services.slicer.f:
    java.io.InputStream is -> a
    java.lang.String type -> b
    libertysystems.stenographer.Stenographer steno -> c
    celtech.roboxbase.services.slicer.ProgressReceiver progressReceiver -> d
    celtech.roboxbase.configuration.SlicerType slicerType -> e
    20:32:void <init>(celtech.roboxbase.services.slicer.ProgressReceiver,java.io.InputStream,java.lang.String,celtech.roboxbase.configuration.SlicerType) -> <init>
    37:117:void run() -> run
    121:125:void setLoadProgress(java.lang.String,int) -> a
celtech.roboxbase.services.slicer.SlicerService -> celtech.roboxbase.services.slicer.g:
    java.lang.String printJobUUID -> a
    celtech.roboxbase.utils.models.PrintableMeshes printableMeshes -> b
    celtech.roboxbase.printerControl.model.Printer printerToUse -> c
    11:16:void <init>() -> <init>
    25:26:void setPrintJobUUID(java.lang.String) -> a
    31:32:void setPrintableMeshes(celtech.roboxbase.utils.models.PrintableMeshes) -> a
    41:42:void setPrinterToUse(celtech.roboxbase.printerControl.model.Printer) -> a
    47:47:javafx.concurrent.Task createTask() -> createTask
    57:57:boolean cancelRun() -> c
celtech.roboxbase.services.slicer.SlicerTask -> celtech.roboxbase.services.slicer.h:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String printJobUUID -> b
    celtech.roboxbase.utils.models.PrintableMeshes printableMeshes -> c
    java.lang.String printJobDirectory -> d
    celtech.roboxbase.printerControl.model.Printer printerToUse -> e
    celtech.roboxbase.utils.TimeUtils timeUtils -> f
    java.lang.String slicerTimerName -> g
    31:51:void <init>(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,celtech.roboxbase.printerControl.model.Printer) -> <init>
    31:63:void <init>(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,java.lang.String,celtech.roboxbase.printerControl.model.Printer) -> <init>
    68:78:celtech.roboxbase.services.slicer.SliceResult call() -> a
    94:139:celtech.roboxbase.services.slicer.SliceResult doSlicing(java.lang.String,celtech.roboxbase.utils.models.PrintableMeshes,java.lang.String,celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.services.slicer.ProgressReceiver,libertysystems.stenographer.Stenographer) -> a
    150:374:boolean sliceFile(java.lang.String,java.lang.String,celtech.roboxbase.configuration.SlicerType,java.util.List,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,celtech.roboxbase.services.slicer.ProgressReceiver,libertysystems.stenographer.Stenographer) -> a
    380:382:void progressUpdateFromSlicer(java.lang.String,float) -> a
    28:28:java.lang.Object call() -> call
    38:38:void <clinit>() -> <clinit>
celtech.roboxbase.services.slicer.SlicerTask$1 -> celtech.roboxbase.services.slicer.h$1:
    int[] $SwitchMap$celtech$roboxbase$configuration$SlicerType -> a
    int[] $SwitchMap$celtech$roboxbase$configuration$MachineType -> b
    169:194:void <clinit>() -> <clinit>
celtech.roboxbase.utils.ApplicationUtils -> celtech.roboxbase.utils.a:
    libertysystems.stenographer.Stenographer steno -> a
    12:12:void <init>() -> <init>
    20:28:void outputApplicationStartupBanner(java.lang.Class) -> a
    32:36:void outputApplicationShutdownBanner() -> a
    15:16:void <clinit>() -> <clinit>
celtech.roboxbase.utils.AxisSpecifier -> celtech.roboxbase.utils.AxisSpecifier:
    celtech.roboxbase.utils.AxisSpecifier X -> X
    celtech.roboxbase.utils.AxisSpecifier Y -> Y
    celtech.roboxbase.utils.AxisSpecifier Z -> Z
    celtech.roboxbase.utils.AxisSpecifier E -> E
    celtech.roboxbase.utils.AxisSpecifier D -> D
    celtech.roboxbase.utils.AxisSpecifier[] $VALUES -> $VALUES
    13:13:celtech.roboxbase.utils.AxisSpecifier[] values() -> values
    13:13:celtech.roboxbase.utils.AxisSpecifier valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:39:void <clinit>() -> <clinit>
celtech.roboxbase.utils.ColourStringConverter -> celtech.roboxbase.utils.b:
    libertysystems.stenographer.Stenographer steno -> a
    15:15:void <init>() -> <init>
    26:36:java.lang.String colourToString(javafx.scene.paint.Color) -> a
    44:62:javafx.scene.paint.Color stringToColor(java.lang.String) -> a
    18:19:void <clinit>() -> <clinit>
celtech.roboxbase.utils.DeDuplicator -> celtech.roboxbase.utils.c:
    12:12:void <init>() -> <init>
    27:45:java.lang.String suggestNonDuplicateNameCopy(java.lang.String,java.util.Collection) -> a
    51:58:java.lang.String suggestNonDuplicateName(java.lang.String,java.util.Collection) -> b
celtech.roboxbase.utils.FileUtilities -> celtech.roboxbase.utils.d:
    13:13:void <init>() -> <init>
    18:50:void writeStreamToFile(java.io.InputStream,java.lang.String) -> a
celtech.roboxbase.utils.InvalidChecksumException -> celtech.roboxbase.utils.InvalidChecksumException:
    21:22:void <init>(java.lang.String) -> <init>
celtech.roboxbase.utils.Math.MathUtils -> q.a:
    javafx.geometry.Point3D xAxis -> a
    javafx.geometry.Point3D yAxis -> b
    javafx.geometry.Point3D zAxis -> c
    double HALF_PI -> d
    double TWO_PI -> e
    double RAD_TO_DEG -> f
    double DEG_TO_RAD -> g
    int EQUAL -> h
    int MORE_THAN -> i
    int LESS_THAN -> j
    14:14:void <init>() -> <init>
    59:64:double invSqrt(double) -> a
    76:94:void matrixRotateNode(javafx.scene.Node,double,double,double) -> a
    118:127:javafx.geometry.Point3D sphericalToCartesianLocalSpaceAdjusted(celtech.roboxbase.utils.Math.PolarCoordinate) -> a
    145:158:celtech.roboxbase.utils.Math.PolarCoordinate cartesianToSphericalLocalSpaceAdjusted(javafx.geometry.Point3D) -> a
    183:191:javafx.geometry.Point3D sphericalToCartesianLocalSpaceUnadjusted(celtech.roboxbase.utils.Math.PolarCoordinate) -> b
    209:225:celtech.roboxbase.utils.Math.PolarCoordinate cartesianToSphericalLocalSpaceUnadjusted(javafx.geometry.Point3D) -> b
    238:240:double cartesianToAngleDegreesCWFromTop(double,double) -> a
    254:258:javafx.geometry.Point2D angleDegreesToCartesianCWFromTop(double,double) -> b
    272:281:javafx.geometry.Point2D angleDegreesToCartesianCWFromTop(double,double,boolean) -> a
    294:297:double cartesianToAngleDegreesCCWFromRight(double,double) -> c
    307:319:double boundAzimuthRadians(double) -> b
    329:341:double boundAzimuthDegrees(double) -> c
    346:358:org.apache.commons.math3.geometry.euclidean.twod.Segment getOrthogonalLineToLinePoints(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> a
    363:370:org.apache.commons.math3.geometry.euclidean.twod.Vector2D findMidPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) -> a
    375:387:org.apache.commons.math3.geometry.euclidean.twod.Vector2D getSegmentIntersection(org.apache.commons.math3.geometry.euclidean.twod.Segment,org.apache.commons.math3.geometry.euclidean.twod.Segment) -> a
    392:407:boolean doesPointLieWithinSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Segment) -> a
    416:426:int compareDouble(double,double,double) -> a
    432:442:int compareFloat(float,float,float) -> a
    20:30:void <clinit>() -> <clinit>
celtech.roboxbase.utils.Math.PolarCoordinate -> q.b:
    double theta -> a
    double phi -> b
    double radius -> c
    27:31:void <init>(double,double,double) -> <init>
    39:39:double getTheta() -> a
    48:49:void setTheta(double) -> a
    57:58:void setThetaDegrees(double) -> b
    66:66:double getPhi() -> b
    75:76:void setPhi(double) -> c
    84:85:void setPhiDegrees(double) -> d
    93:93:double getRadius() -> c
    102:103:void setRadius(double) -> e
    111:111:java.lang.String toString() -> toString
celtech.roboxbase.utils.Math.packing.core.Bin -> r.a:
    java.awt.Dimension dimension -> a
    celtech.roboxbase.utils.Math.packing.primitives.MArea[] placedPieces -> b
    int NPlaced -> c
    java.util.ArrayList freeRectangles -> d
    java.util.Comparator RECTANGLE_AREA_COMPARATOR -> e
    39:51:void <init>(java.awt.Dimension) -> <init>
    55:68:void <init>(java.awt.Dimension,celtech.roboxbase.utils.Math.packing.primitives.MArea[]) -> <init>
    77:77:celtech.roboxbase.utils.Math.packing.primitives.MArea[] getPlacedPieces() -> a
    87:87:int getNPlaced() -> b
    97:103:double getOccupiedArea() -> c
    113:113:java.awt.Dimension getDimension() -> d
    123:128:double getEmptyArea() -> e
    140:150:celtech.roboxbase.utils.Math.packing.primitives.MArea[] BBCompleteStrategy(celtech.roboxbase.utils.Math.packing.primitives.MArea[]) -> a
    162:205:celtech.roboxbase.utils.Math.packing.primitives.MArea[] boundingBoxPacking(celtech.roboxbase.utils.Math.packing.primitives.MArea[]) -> c
    223:260:int findWhereToPlace(celtech.roboxbase.utils.Math.packing.primitives.MArea,java.util.ArrayList) -> a
    275:292:void splitScheme(java.awt.geom.Rectangle2D$Double,java.awt.geom.Rectangle2D$Double,java.util.ArrayList) -> a
    303:348:void computeFreeRectangles(java.awt.geom.Rectangle2D$Double,java.util.ArrayList) -> a
    356:375:void eliminateNonMaximal() -> g
    391:443:boolean moveAndReplace(int) -> a
    462:535:celtech.roboxbase.utils.Math.packing.primitives.MArea sweep(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea) -> a
    573:593:void compress() -> f
    612:659:boolean compress(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea,java.awt.Rectangle,celtech.roboxbase.utils.Math.packing.primitives.MVector) -> a
    672:705:celtech.roboxbase.utils.Math.packing.primitives.MArea[] dropPieces(celtech.roboxbase.utils.Math.packing.primitives.MArea[]) -> b
    724:748:celtech.roboxbase.utils.Math.packing.primitives.MArea dive(celtech.roboxbase.utils.Math.packing.primitives.MArea,java.awt.Rectangle,celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MVector) -> a
    541:541:void <clinit>() -> <clinit>
celtech.roboxbase.utils.Math.packing.core.Bin$1 -> r.a$1:
celtech.roboxbase.utils.Math.packing.core.Bin$RectangleAreaComparator -> r.a$a:
    546:546:void <init>() -> <init>
    552:562:int compare(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D) -> a
    546:546:int compare(java.lang.Object,java.lang.Object) -> compare
    546:546:void <init>(celtech.roboxbase.utils.Math.packing.core.Bin$1) -> <init>
celtech.roboxbase.utils.Math.packing.core.BinPacking -> r.b:
    7:7:void <init>() -> <init>
    18:43:celtech.roboxbase.utils.Math.packing.core.Bin[] BinPackingStrategy(celtech.roboxbase.utils.Math.packing.primitives.MArea[],java.awt.Dimension,java.awt.Dimension) -> a
celtech.roboxbase.utils.Math.packing.core.Constants -> r.c:
    int DIVE_HORIZONTAL_DISPLACEMENT_FACTOR -> a
    int DX_SWEEP_FACTOR -> b
    int DY_SWEEP_FACTOR -> c
    int[] ROTATION_ANGLES -> d
    8:8:void <init>() -> <init>
    31:31:void <clinit>() -> <clinit>
celtech.roboxbase.utils.Math.packing.primitives.MArea -> celtech.roboxbase.utils.Math.packing.primitives.a:
    double area -> c
    int ID -> d
    double rotation -> e
    java.util.Comparator BY_AREA -> a
    java.util.Comparator BY_BOUNDING_BOX_AREA -> b
    33:37:void <init>(java.awt.geom.Path2D,int) -> <init>
    46:50:void <init>(celtech.roboxbase.utils.Math.packing.primitives.MArea,int) -> <init>
    60:64:void <init>(java.awt.Rectangle,int) -> <init>
    75:79:void <init>(java.awt.geom.Rectangle2D$Double,int) -> <init>
    82:86:void <init>(java.awt.geom.Rectangle2D$Double,int,double) -> <init>
    94:98:void <init>(int) -> <init>
    104:107:void <init>() -> <init>
    116:120:void <init>(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea) -> <init>
    123:125:celtech.roboxbase.utils.Math.packing.primitives.MArea MAreaHolesConstructor(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea) -> a
    135:139:void <init>(celtech.roboxbase.utils.Math.packing.primitives.MPointDouble[],int) -> <init>
    149:159:double computeArea() -> i
    169:169:java.awt.Rectangle getBoundingBox() -> a
    179:179:java.awt.geom.Rectangle2D$Double getBoundingBox2D() -> b
    190:193:double getFreeArea() -> c
    200:210:celtech.roboxbase.utils.Math.packing.primitives.MPointDouble[] getPoints() -> d
    217:217:double getArea() -> e
    224:225:void updateArea() -> f
    231:231:int getID() -> g
    242:254:void drawInViewPort(java.awt.Dimension,java.awt.Dimension,java.awt.Graphics) -> a
    263:264:boolean equals(java.lang.Object) -> equals
    273:276:void move(celtech.roboxbase.utils.Math.packing.primitives.MVector) -> a
    285:303:void placeInPosition(double,double) -> a
    311:319:void rotate(double) -> a
    329:331:boolean intersection(celtech.roboxbase.utils.Math.packing.primitives.MArea) -> a
    341:360:boolean isInside(java.awt.Rectangle) -> a
    371:376:boolean isAbove(java.awt.Rectangle) -> b
    388:392:boolean isToLeft(java.awt.Rectangle) -> c
    396:396:double getRotation() -> h
    14:14:double access$200(celtech.roboxbase.utils.Math.packing.primitives.MArea) -> b
    399:401:void <clinit>() -> <clinit>
celtech.roboxbase.utils.Math.packing.primitives.MArea$1 -> celtech.roboxbase.utils.Math.packing.primitives.a$1:
celtech.roboxbase.utils.Math.packing.primitives.MArea$ByArea -> celtech.roboxbase.utils.Math.packing.primitives.a$a:
    407:407:void <init>() -> <init>
    410:416:int compare(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea) -> a
    407:407:int compare(java.lang.Object,java.lang.Object) -> compare
    407:407:void <init>(celtech.roboxbase.utils.Math.packing.primitives.MArea$1) -> <init>
celtech.roboxbase.utils.Math.packing.primitives.MArea$ByBoundingBoxArea -> celtech.roboxbase.utils.Math.packing.primitives.a$b:
    423:423:void <init>() -> <init>
    426:436:int compare(celtech.roboxbase.utils.Math.packing.primitives.MArea,celtech.roboxbase.utils.Math.packing.primitives.MArea) -> a
    423:423:int compare(java.lang.Object,java.lang.Object) -> compare
    423:423:void <init>(celtech.roboxbase.utils.Math.packing.primitives.MArea$1) -> <init>
celtech.roboxbase.utils.Math.packing.primitives.MPointDouble -> celtech.roboxbase.utils.Math.packing.primitives.MPointDouble:
    14:15:void <init>(double,double) -> <init>
    22:30:int compareTo(celtech.roboxbase.utils.Math.packing.primitives.MPointDouble) -> a
    35:36:boolean equals(java.lang.Object) -> equals
    11:11:int compareTo(java.lang.Object) -> compareTo
celtech.roboxbase.utils.Math.packing.primitives.MVector -> celtech.roboxbase.utils.Math.packing.primitives.b:
    double x -> a
    double y -> b
    15:18:void <init>(double,double) -> <init>
    21:21:double getX() -> a
    25:25:double getY() -> b
    34:34:celtech.roboxbase.utils.Math.packing.primitives.MVector inverse() -> c
celtech.roboxbase.utils.Math.packing.utils.Utils -> s.a:
    25:25:void <init>() -> <init>
    35:42:java.awt.geom.Path2D createShape(celtech.roboxbase.utils.Math.packing.primitives.MPointDouble[]) -> a
    54:54:boolean fits(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D) -> a
    68:68:boolean fitsRotated(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D) -> b
    80:80:boolean equalDimension(java.awt.Rectangle,java.awt.Rectangle) -> a
    96:110:void drawMAreasToFile(java.util.ArrayList,java.awt.Dimension,java.awt.Dimension,java.lang.String) -> a
    120:124:java.awt.image.BufferedImage flipAroundX(java.awt.image.BufferedImage) -> a
    128:143:celtech.roboxbase.utils.Math.packing.primitives.MArea preprocessing(celtech.roboxbase.utils.Math.packing.primitives.MArea,java.awt.geom.Rectangle2D$Double) -> a
    155:156:java.lang.Object[] loadPieces(java.lang.String) -> a
    168:169:java.lang.Object[] loadPieces(java.io.BufferedReader) -> a
    179:233:java.lang.Object[] readInput(java.util.Scanner) -> a
celtech.roboxbase.utils.PrinterUtils -> celtech.roboxbase.utils.e:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.roboxbase.utils.PrinterUtils instance -> b
    boolean purgeDialogVisible -> c
    40:44:void <init>() -> <init>
    52:57:celtech.roboxbase.utils.PrinterUtils getInstance() -> a
    68:114:boolean waitOnMacroFinished(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.Task) -> a
    125:161:boolean waitOnMacroFinished(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> a
    172:222:boolean waitOnBusy(celtech.roboxbase.printerControl.model.Printer,javafx.concurrent.Task) -> b
    233:260:boolean waitOnBusy(celtech.roboxbase.printerControl.model.Printer,celtech.roboxbase.utils.tasks.Cancellable) -> b
    272:282:boolean isPurgeNecessary(celtech.roboxbase.printerControl.model.Printer,java.util.List) -> a
    295:341:boolean isPurgeNecessaryForExtruder(celtech.roboxbase.printerControl.model.Printer,int) -> a
    351:361:celtech.roboxbase.appManager.PurgeResponse offerPurgeIfNecessary(celtech.roboxbase.printerControl.model.Printer,javafx.collections.ObservableList) -> a
    367:367:boolean waitUntilTemperatureIsReached(javafx.beans.property.ReadOnlyIntegerProperty,javafx.concurrent.Task,int,int,int) -> a
    375:452:boolean waitUntilTemperatureIsReached(javafx.beans.property.ReadOnlyIntegerProperty,javafx.concurrent.Task,int,int,int,celtech.roboxbase.utils.tasks.Cancellable) -> a
    457:463:float deriveNozzle1OverrunFromOffsets(float,float) -> a
    468:474:float deriveNozzle2OverrunFromOffsets(float,float) -> b
    480:484:float deriveNozzle1ZOffsetsFromOverrun(float,float) -> c
    490:494:float deriveNozzle2ZOffsetsFromOverrun(float,float) -> d
    499:507:boolean printJobIDIndicatesPrinting(java.lang.String) -> a
    37:39:void <clinit>() -> <clinit>
celtech.roboxbase.utils.PrinterUtils$1 -> celtech.roboxbase.utils.e$1:
    javafx.beans.property.BooleanProperty val$failed -> a
    382:382:void <init>(javafx.beans.property.BooleanProperty) -> <init>
    386:387:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    382:382:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.roboxbase.utils.RectangularBounds -> celtech.roboxbase.utils.RectangularBounds:
    double minX -> a
    double maxX -> b
    double minY -> c
    double maxY -> d
    double minZ -> e
    double maxZ -> f
    double width -> g
    double height -> h
    double depth -> i
    double centreX -> j
    double centreY -> k
    double centreZ -> l
    10:32:void <init>() -> <init>
    10:59:void <init>(double,double,double,double,double,double,double,double,double,double,double,double) -> <init>
    63:63:double getMinX() -> a
    68:69:void setMinX(double) -> a
    73:73:double getMaxX() -> b
    78:79:void setMaxX(double) -> b
    83:83:double getMinY() -> c
    88:89:void setMinY(double) -> c
    93:93:double getMaxY() -> d
    98:99:void setMaxY(double) -> d
    103:103:double getMinZ() -> e
    108:109:void setMinZ(double) -> e
    113:113:double getMaxZ() -> f
    118:119:void setMaxZ(double) -> f
    123:123:double getWidth() -> g
    128:129:void setWidth(double) -> g
    133:133:double getHeight() -> h
    138:139:void setHeight(double) -> h
    143:143:double getDepth() -> i
    148:149:void setDepth(double) -> i
    153:153:double getCentreX() -> j
    158:159:void setCentreX(double) -> j
    163:163:double getCentreY() -> k
    168:169:void setCentreY(double) -> k
    173:173:double getCentreZ() -> l
    178:179:void setCentreZ(double) -> l
    184:196:java.lang.String toString() -> toString
    201:204:void translateX(double) -> m
    208:211:void translateY(double) -> n
    215:218:void translateZ(double) -> o
celtech.roboxbase.utils.SystemUtils -> celtech.roboxbase.utils.f:
    libertysystems.stenographer.Stenographer steno -> a
    21:21:void <init>() -> <init>
    33:33:java.lang.String generate16DigitID() -> a
    45:45:boolean isDoubleSame(double,double,double) -> a
    56:56:boolean isDoubleSame(double,double) -> a
    67:226:char generateUPSModulo10Checksum(java.lang.String) -> a
    237:302:char generateModulo10Checksum(java.lang.String) -> b
    313:332:int countLinesInFile(java.io.File) -> a
    347:374:java.lang.String getIncrementalFilenameOnly(java.lang.String,java.lang.String,java.lang.String) -> a
    385:400:javafx.scene.image.Image createImage(java.awt.Image) -> a
    410:410:java.lang.String cleanGCodeForTransmission(java.lang.String) -> c
    24:25:void <clinit>() -> <clinit>
celtech.roboxbase.utils.TimeUtils -> celtech.roboxbase.utils.TimeUtils:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.Map timersByObjectName -> b
    12:56:void <init>() -> <init>
    60:63:java.lang.String convertToHoursMinutes(int) -> a
    68:72:java.lang.String convertToHoursMinutesSeconds(int) -> b
    77:104:void timerStart(java.lang.Object,java.lang.String) -> a
    108:128:void timerStop(java.lang.Object,java.lang.String) -> b
    132:148:long timeTimeSoFar_ms(java.lang.Object,java.lang.String) -> c
    12:12:libertysystems.stenographer.Stenographer access$000() -> a
    15:16:void <clinit>() -> <clinit>
celtech.roboxbase.utils.TimeUtils$1 -> celtech.roboxbase.utils.TimeUtils$1:
celtech.roboxbase.utils.TimeUtils$TimerEntry -> celtech.roboxbase.utils.TimeUtils$a:
    boolean timerStarted -> b
    long lastStartTime -> c
    long timeSoFar_ms -> d
    celtech.roboxbase.utils.TimeUtils this$0 -> a
    18:23:void <init>(celtech.roboxbase.utils.TimeUtils) -> <init>
    27:29:void start() -> a
    33:42:void stop() -> b
    46:48:void reset() -> c
    52:52:long getTimeSoFar_ms() -> d
    18:18:void <init>(celtech.roboxbase.utils.TimeUtils,celtech.roboxbase.utils.TimeUtils$1) -> <init>
celtech.roboxbase.utils.TimeUtils$TimerNotFoundException -> celtech.roboxbase.utils.TimeUtils$TimerNotFoundException:
    celtech.roboxbase.utils.TimeUtils this$0 -> this$0
    155:157:void <init>(celtech.roboxbase.utils.TimeUtils,java.lang.String) -> <init>
celtech.roboxbase.utils.exporters.AMFOutputConverter -> t.a:
    libertysystems.stenographer.Stenographer steno -> a
    34:38:void <init>() -> <init>
    42:73:void outputProject(java.util.List,javax.xml.stream.XMLStreamWriter) -> a
    77:79:void outputMaterials(javax.xml.stream.XMLStreamWriter) -> a
    84:85:void outputMaterial(int,float,float,float,javax.xml.stream.XMLStreamWriter) -> a
    91:111:void outputMaterial(int,float,float,float,java.util.Optional,javax.xml.stream.XMLStreamWriter) -> a
    115:127:void outputVolume(javafx.scene.shape.MeshView,int,javax.xml.stream.XMLStreamWriter) -> a
    134:145:int outputVertices(celtech.roboxbase.utils.threed.MeshToWorldTransformer,javafx.scene.shape.MeshView,javax.xml.stream.XMLStreamWriter) -> a
    151:162:void outputFace(javafx.scene.shape.ObservableFaceArray,int,int,javax.xml.stream.XMLStreamWriter) -> a
    167:185:void outputVertex(celtech.roboxbase.utils.threed.MeshToWorldTransformer,javafx.scene.shape.MeshView,javafx.collections.ObservableFloatArray,int,javax.xml.stream.XMLStreamWriter) -> a
    190:190:celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,boolean) -> a
    198:241:celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,java.lang.String,boolean) -> a
    238:239:void lambda$outputFile$0(celtech.roboxbase.utils.threed.CentreCalculations,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> a
celtech.roboxbase.utils.exporters.AMFOutputConverter$PrettyPrintHandler -> t.a$a:
    javax.xml.stream.XMLStreamWriter target -> b
    int depth -> c
    java.util.Map hasChildElement -> d
    java.lang.String INDENT_CHAR -> e
    java.lang.String LINEFEED_CHAR -> f
    celtech.roboxbase.utils.exporters.AMFOutputConverter this$0 -> a
    252:260:void <init>(celtech.roboxbase.utils.exporters.AMFOutputConverter,javax.xml.stream.XMLStreamWriter) -> <init>
    264:302:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    307:312:java.lang.String repeat(int,java.lang.String) -> a
celtech.roboxbase.utils.exporters.MeshExportResult -> t.b:
    java.util.List createdFiles -> a
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D centre -> b
    17:20:void <init>(java.util.List,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> <init>
    24:24:java.util.List getCreatedFiles() -> a
    29:29:org.apache.commons.math3.geometry.euclidean.threed.Vector3D getCentre() -> b
celtech.roboxbase.utils.exporters.MeshFileOutputConverter -> t.c:
    celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,boolean) -> a
    celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,java.lang.String,boolean) -> a
celtech.roboxbase.utils.exporters.STLOutputConverter -> t.d:
    libertysystems.stenographer.Stenographer steno -> a
    int modelFileCount -> b
    34:40:void <init>() -> <init>
    46:46:celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,boolean) -> a
    55:92:celtech.roboxbase.utils.exporters.MeshExportResult outputFile(java.util.List,java.lang.String,java.lang.String,boolean) -> a
    106:218:org.apache.commons.math3.geometry.euclidean.threed.Vector3D outputMeshViewsInSingleFile(java.lang.String,java.util.List) -> a
    89:90:void lambda$outputFile$0(celtech.roboxbase.utils.threed.CentreCalculations,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> a
celtech.roboxbase.utils.models.MeshForProcessing -> u.a:
    javafx.scene.shape.MeshView meshView -> a
    celtech.roboxbase.utils.threed.MeshToWorldTransformer meshToWorldTransformer -> b
    16:19:void <init>(javafx.scene.shape.MeshView,celtech.roboxbase.utils.threed.MeshToWorldTransformer) -> <init>
    23:23:celtech.roboxbase.utils.threed.MeshToWorldTransformer getMeshToWorldTransformer() -> a
    28:28:javafx.scene.shape.MeshView getMeshView() -> b
celtech.roboxbase.utils.models.PrintableMeshes -> u.b:
    java.util.List meshesForProcessing -> a
    java.util.List usedExtruders -> b
    java.util.List extruderForModel -> c
    java.lang.String projectName -> d
    java.lang.String requiredPrintJobID -> e
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile settings -> f
    celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides printOverrides -> g
    celtech.roboxbase.services.slicer.PrintQualityEnumeration printQuality -> h
    celtech.roboxbase.configuration.SlicerType defaultSlicerType -> i
    org.apache.commons.math3.geometry.euclidean.threed.Vector3D centreOfPrintedObject -> j
    boolean safetyFeaturesRequired -> k
    boolean cameraEnabled -> l
    celtech.roboxbase.services.CameraTriggerData cameraTriggerData -> m
    45:59:void <init>(java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile,celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides,celtech.roboxbase.services.slicer.PrintQualityEnumeration,celtech.roboxbase.configuration.SlicerType,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,boolean,boolean,celtech.roboxbase.services.CameraTriggerData) -> <init>
    63:63:java.util.List getMeshesForProcessing() -> a
    68:68:java.util.List getUsedExtruders() -> b
    73:73:java.util.List getExtruderForModel() -> c
    78:78:java.lang.String getProjectName() -> d
    83:83:java.lang.String getRequiredPrintJobID() -> e
    88:88:celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile getSettings() -> f
    93:93:celtech.roboxbase.configuration.fileRepresentation.PrinterSettingsOverrides getPrintOverrides() -> g
    98:98:celtech.roboxbase.services.slicer.PrintQualityEnumeration getPrintQuality() -> h
    103:103:celtech.roboxbase.configuration.SlicerType getDefaultSlicerType() -> i
    108:108:org.apache.commons.math3.geometry.euclidean.threed.Vector3D getCentreOfPrintedObject() -> j
    113:113:boolean isSafetyFeaturesRequired() -> k
    118:118:boolean isCameraEnabled() -> l
    123:123:celtech.roboxbase.services.CameraTriggerData getCameraTriggerData() -> m
celtech.roboxbase.utils.models.PrintableShapes -> u.c:
    java.util.List shapesForProcessing -> a
    java.lang.String projectName -> b
    java.lang.String requiredPrintJobID -> c
    18:22:void <init>(java.util.List,java.lang.String,java.lang.String) -> <init>
    26:26:java.util.List getShapesForProcessing() -> a
    31:31:java.lang.String getProjectName() -> b
    36:36:java.lang.String getRequiredPrintJobID() -> c
celtech.roboxbase.utils.models.ShapeForProcessing -> u.d:
    javafx.scene.shape.Shape shape -> a
    celtech.roboxbase.utils.twod.ShapeToWorldTransformer shapeToWorldTransformer -> b
    16:19:void <init>(javafx.scene.shape.Shape,celtech.roboxbase.utils.twod.ShapeToWorldTransformer) -> <init>
    23:23:celtech.roboxbase.utils.twod.ShapeToWorldTransformer getShapeToWorldTransformer() -> a
    28:28:javafx.scene.shape.Shape getShape() -> b
celtech.roboxbase.utils.tasks.Cancellable -> v.a:
    javafx.beans.property.BooleanProperty cancelled() -> a
celtech.roboxbase.utils.tasks.HeadlessTaskExecutor -> v.b:
    libertysystems.stenographer.Stenographer steno -> a
    12:15:void <init>() -> <init>
    20:31:void runTaskAsDaemon(javafx.concurrent.Task) -> a
    36:43:void runOnGUIThread(java.lang.Runnable) -> a
    48:51:void runOnBackgroundThread(java.lang.Runnable) -> b
    56:57:void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> a
    63:75:void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String,java.lang.Object) -> a
    80:87:void respondOnCurrentThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> b
    93:124:void runAsTask(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,java.lang.String) -> a
    97:117:void lambda$runAsTask$0(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc) -> a
celtech.roboxbase.utils.tasks.HeadlessTaskExecutor$1 -> v.b$1:
    javafx.concurrent.Task val$task -> a
    celtech.roboxbase.utils.tasks.HeadlessTaskExecutor this$0 -> b
    21:21:void <init>(celtech.roboxbase.utils.tasks.HeadlessTaskExecutor,javafx.concurrent.Task) -> <init>
    26:29:void run() -> run
celtech.roboxbase.utils.tasks.LiveTaskExecutor -> v.c:
    libertysystems.stenographer.Stenographer steno -> a
    12:16:void <init>() -> <init>
    21:32:void runTaskAsDaemon(javafx.concurrent.Task) -> a
    37:44:void runOnGUIThread(java.lang.Runnable) -> a
    49:52:void runOnBackgroundThread(java.lang.Runnable) -> b
    57:58:void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> a
    64:79:void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String,java.lang.Object) -> a
    84:91:void respondOnCurrentThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> b
    97:128:void runAsTask(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,java.lang.String) -> a
    101:121:void lambda$runAsTask$1(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc) -> a
    76:77:void lambda$respondOnGUIThread$0(celtech.roboxbase.utils.tasks.TaskResponder,celtech.roboxbase.utils.tasks.TaskResponse) -> a
celtech.roboxbase.utils.tasks.LiveTaskExecutor$1 -> v.c$1:
    javafx.concurrent.Task val$task -> a
    celtech.roboxbase.utils.tasks.LiveTaskExecutor this$0 -> b
    22:22:void <init>(celtech.roboxbase.utils.tasks.LiveTaskExecutor,javafx.concurrent.Task) -> <init>
    27:30:void run() -> run
celtech.roboxbase.utils.tasks.OredCancellable -> v.d:
    celtech.roboxbase.utils.tasks.Cancellable cancellable1 -> a
    celtech.roboxbase.utils.tasks.Cancellable cancellable2 -> b
    celtech.roboxbase.utils.tasks.Cancellable cancellable -> c
    21:45:void <init>(celtech.roboxbase.utils.tasks.Cancellable,celtech.roboxbase.utils.tasks.Cancellable) -> <init>
    49:63:void updateCancellable() -> b
    68:68:javafx.beans.property.BooleanProperty cancelled() -> a
    42:43:void lambda$new$1(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> a
    33:34:void lambda$new$0(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> b
celtech.roboxbase.utils.tasks.SimpleCancellable -> v.e:
    javafx.beans.property.BooleanProperty cancelled -> a
    13:15:void <init>() -> <init>
    18:18:javafx.beans.property.BooleanProperty cancelled() -> a
celtech.roboxbase.utils.tasks.TaskExecutor -> v.f:
    void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> a
    void respondOnGUIThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String,java.lang.Object) -> a
    void respondOnCurrentThread(celtech.roboxbase.utils.tasks.TaskResponder,boolean,java.lang.String) -> b
    void runOnGUIThread(java.lang.Runnable) -> a
    void runOnBackgroundThread(java.lang.Runnable) -> b
    void runTaskAsDaemon(javafx.concurrent.Task) -> a
    void runAsTask(celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc,java.lang.String) -> a
celtech.roboxbase.utils.tasks.TaskExecutor$NoArgsVoidFunc -> v.f$a:
    void run() -> run
celtech.roboxbase.utils.tasks.TaskResponder -> v.g:
    void taskEnded(celtech.roboxbase.utils.tasks.TaskResponse) -> taskEnded
celtech.roboxbase.utils.tasks.TaskResponse -> v.h:
    boolean succeeded -> a
    java.lang.String message -> b
    java.lang.Object returnedObject -> c
    12:19:void <init>(java.lang.String) -> <init>
    24:24:java.lang.String toString() -> toString
    33:33:boolean succeeded() -> a
    42:43:void setSucceeded(boolean) -> a
    51:52:void setReturnedObject(java.lang.Object) -> a
    60:60:java.lang.Object getReturnedObject() -> b
celtech.roboxbase.utils.threed.CentreCalculations -> w.a:
    boolean dataProvided -> a
    double minX -> b
    double minY -> c
    double minZ -> d
    double maxX -> e
    double maxY -> f
    double maxZ -> g
    12:23:void <init>() -> <init>
    27:35:void reset() -> a
    39:52:org.apache.commons.math3.geometry.euclidean.threed.Vector3D getResult() -> b
    58:59:void processPoint(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) -> a
    63:72:void processPoint(double,double,double) -> a
celtech.roboxbase.utils.threed.MeshToWorldTransformer -> w.b:
    javafx.geometry.Point3D transformMeshToRealWorldCoordinates(float,float,float) -> a
celtech.roboxbase.utils.twod.ShapeToWorldTransformer -> x.a:
    javafx.geometry.Point2D transformShapeToRealWorldCoordinates(float,float) -> a
celtech.services.diagnostics.BedLevelCheckResult -> y.a:
    java.util.ArrayList levelOffsets -> a
    java.util.ArrayList measuringPoints -> b
    16:19:void <init>() -> <init>
    23:23:java.util.ArrayList getLevelOffsets() -> a
    28:28:java.util.ArrayList getMeasuringPoints() -> b
    33:35:void addOffset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) -> a
celtech.services.diagnostics.BedLevelCheckTask -> y.b:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.appManager.ModelContainerProject project -> b
    celtech.roboxbase.configuration.Filament filament -> c
    celtech.roboxbase.services.slicer.PrintQualityEnumeration printQuality -> d
    celtech.roboxbase.configuration.fileRepresentation.SlicerParametersFile settings -> e
    celtech.roboxbase.printerControl.model.Printer printerToUse -> f
    java.lang.String macroName -> g
    21:36:void <init>(celtech.roboxbase.printerControl.model.Printer) -> <init>
    41:53:celtech.services.diagnostics.BedLevelCheckResult call() -> a
    63:63:boolean cancelRun() -> c
    18:18:java.lang.Object call() -> call
celtech.services.gcodeLoader.GCodeEventType -> celtech.services.gcodeLoader.GCodeEventType:
    celtech.services.gcodeLoader.GCodeEventType TRAVEL -> TRAVEL
    celtech.services.gcodeLoader.GCodeEventType RETRACT -> RETRACT
    celtech.services.gcodeLoader.GCodeEventType UNRETRACT -> UNRETRACT
    celtech.services.gcodeLoader.GCodeEventType EXTRUDE -> EXTRUDE
    celtech.services.gcodeLoader.GCodeEventType[] $VALUES -> $VALUES
    11:11:celtech.services.gcodeLoader.GCodeEventType[] values() -> values
    11:11:celtech.services.gcodeLoader.GCodeEventType valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:32:void <clinit>() -> <clinit>
celtech.services.gcodeLoader.GCodeLoadState -> celtech.services.gcodeLoader.GCodeLoadState:
    celtech.services.gcodeLoader.GCodeLoadState IDLE -> IDLE
    celtech.services.gcodeLoader.GCodeLoadState FOUND_G0_G1 -> FOUND_G0_G1
    celtech.services.gcodeLoader.GCodeLoadState[] $VALUES -> $VALUES
    11:11:celtech.services.gcodeLoader.GCodeLoadState[] values() -> values
    11:11:celtech.services.gcodeLoader.GCodeLoadState valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:22:void <clinit>() -> <clinit>
celtech.services.gcodeLoader.GCodeParseException -> celtech.services.gcodeLoader.GCodeParseException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
celtech.services.modelLoader.ModelLoadResults -> z.a:
    celtech.coreUI.visualisation.metaparts.ModelLoadResultType type -> a
    java.util.List results -> b
    boolean shouldCentre -> c
    celtech.appManager.Project referencedProject -> d
    19:26:void <init>(celtech.coreUI.visualisation.metaparts.ModelLoadResultType,java.util.List) -> <init>
    30:30:celtech.coreUI.visualisation.metaparts.ModelLoadResultType getType() -> a
    35:36:void setResults(java.util.List) -> a
    40:40:java.util.List getResults() -> b
    45:46:void setShouldCentre(boolean) -> a
    50:50:boolean isShouldCentre() -> c
celtech.services.modelLoader.ModelLoaderService -> z.b:
    java.util.List modelFilesToLoad -> a
    13:13:void <init>() -> <init>
    21:22:void setModelFilesToLoad(java.util.List) -> a
    27:27:javafx.concurrent.Task createTask() -> createTask
    33:33:boolean cancelRun() -> c
celtech.services.modelLoader.ModelLoaderTask -> z.c:
    libertysystems.stenographer.Stenographer steno -> a
    java.util.List modelFilesToLoad -> b
    javafx.beans.property.DoubleProperty percentProgress -> c
    33:51:void <init>(java.util.List) -> <init>
    56:116:celtech.services.modelLoader.ModelLoadResults call() -> a
    121:139:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadTheFile(java.lang.String) -> b
    148:149:void updateMessageText(java.lang.String) -> a
    30:30:java.lang.Object call() -> call
    30:30:void access$000(celtech.services.modelLoader.ModelLoaderTask,double,double) -> a
celtech.services.modelLoader.ModelLoaderTask$1 -> z.c$1:
    celtech.services.modelLoader.ModelLoaderTask this$0 -> a
    44:44:void <init>(celtech.services.modelLoader.ModelLoaderTask) -> <init>
    48:49:void changed(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> a
    44:44:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
celtech.utils.AutoUpdate -> aa.a:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String applicationName -> b
    int ERROR -> c
    int UPGRADE_NOT_REQUIRED -> d
    int UPGRADE_REQUIRED -> e
    int UPGRADE_NOT_AVAILABLE_FOR_THIS_RELEASE -> f
    boolean keepRunning -> g
    java.lang.Class parentClass -> h
    celtech.utils.AutoUpdateCompletionListener completionListener -> i
    java.lang.String appDirectory -> j
    java.util.regex.Pattern versionMatcherPattern -> k
    33:59:void <init>(java.lang.String,java.lang.String,celtech.utils.AutoUpdateCompletionListener) -> <init>
    67:143:void run() -> run
    147:238:int checkForUpdates() -> b
    243:300:void startUpdate() -> c
    307:308:void shutdown() -> a
    28:28:java.lang.String access$000(celtech.utils.AutoUpdate) -> a
    31:31:void <clinit>() -> <clinit>
celtech.utils.AutoUpdate$1 -> aa.a$1:
    celtech.utils.AutoUpdate this$0 -> a
    90:90:void <init>(celtech.utils.AutoUpdate) -> <init>
    94:96:void run() -> run
celtech.utils.AutoUpdate$2 -> aa.a$2:
    celtech.utils.AutoUpdate this$0 -> a
    117:117:void <init>(celtech.utils.AutoUpdate) -> <init>
    121:122:void run() -> run
celtech.utils.AutoUpdate$3 -> aa.a$3:
    int[] $SwitchMap$celtech$roboxbase$configuration$MachineType -> a
    249:249:void <clinit>() -> <clinit>
celtech.utils.AutoUpdateCompletionListener -> aa.b:
    void autoUpdateComplete(boolean) -> a
celtech.utils.ClassInspector -> aa.c:
    19:19:void <init>() -> <init>
    31:98:void inspect(java.lang.Class) -> a
    104:110:void printAncestor(java.lang.Class,java.util.List) -> a
celtech.utils.MyMiniFactoryLoadResult -> aa.d:
    boolean success -> a
    java.util.List filesToLoad -> b
    16:17:void <init>() -> <init>
    20:23:void <init>(boolean,java.util.List) -> <init>
    27:27:boolean isSuccess() -> a
    32:32:java.util.List getFilesToLoad() -> b
    37:38:void setSuccess(boolean) -> a
    42:43:void setFilesToLoad(java.util.List) -> a
celtech.utils.MyMiniFactoryLoader -> aa.e:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String fileURL -> b
    38:43:void <init>(java.lang.String) -> <init>
    48:187:celtech.utils.MyMiniFactoryLoadResult call() -> a
    33:33:java.lang.Object call() -> call
    36:36:void <clinit>() -> <clinit>
celtech.utils.StringMetrics -> aa.f:
    15:15:void <init>() -> <init>
    20:27:double getWidthOfString(java.lang.String,java.lang.String,int) -> a
celtech.utils.SystemValidation -> aa.g:
    libertysystems.stenographer.Stenographer steno -> a
    23:23:void <init>() -> <init>
    34:52:boolean checkMachineTypeRecognised(java.util.ResourceBundle) -> a
    65:106:boolean check3DSupported(java.util.ResourceBundle) -> b
    87:99:void lambda$check3DSupported$0(java.util.ResourceBundle) -> c
    26:26:void <clinit>() -> <clinit>
celtech.utils.gcode.representation.CompoundMovement -> celtech.utils.gcode.representation.a:
    celtech.utils.gcode.representation.MovementType type -> a
    java.util.ArrayList segments -> b
    int startingGCodeLine -> c
    int endingGCodeLine -> d
    16:28:void <init>(celtech.utils.gcode.representation.MovementType) -> <init>
    36:36:celtech.utils.gcode.representation.MovementType getMovementType() -> a
    45:46:void addMove(celtech.utils.gcode.representation.Movement) -> a
    54:54:java.util.ArrayList getSegments() -> b
    63:63:int getStartingGCodeLine() -> c
    72:73:void setStartingGCodeLine(int) -> a
    81:81:int getEndingGCodeLine() -> d
    90:91:void setEndingGCodeLine(int) -> b
    100:114:java.lang.String toString() -> toString
celtech.utils.gcode.representation.ExtrusionMode -> celtech.utils.gcode.representation.ExtrusionMode:
    celtech.utils.gcode.representation.ExtrusionMode ABSOLUTE -> ABSOLUTE
    celtech.utils.gcode.representation.ExtrusionMode RELATIVE -> RELATIVE
    celtech.utils.gcode.representation.ExtrusionMode[] $VALUES -> $VALUES
    13:13:celtech.utils.gcode.representation.ExtrusionMode[] values() -> values
    13:13:celtech.utils.gcode.representation.ExtrusionMode valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:24:void <clinit>() -> <clinit>
celtech.utils.gcode.representation.GCodeElement -> celtech.utils.gcode.representation.b:
    javafx.scene.shape.Shape gcodeVisualRepresentation -> a
    celtech.utils.gcode.representation.MovementType movementType -> b
    18:30:void <init>(javafx.scene.shape.Shape,celtech.utils.gcode.representation.MovementType) -> <init>
    38:38:javafx.scene.shape.Shape getGcodeVisualRepresentation() -> a
    47:47:celtech.utils.gcode.representation.MovementType getMovementType() -> b
celtech.utils.gcode.representation.GCodeFile -> celtech.utils.gcode.representation.c:
    java.util.ArrayList layers -> a
    celtech.utils.gcode.representation.ExtrusionMode extrusionMode -> b
    celtech.utils.gcode.representation.MovementMode movementMode -> c
    13:17:void <init>() -> <init>
    25:26:void addLayer(celtech.utils.gcode.representation.Layer) -> a
    34:34:java.util.ArrayList getLayers() -> a
    43:43:celtech.utils.gcode.representation.ExtrusionMode getExtrusionMode() -> b
    52:53:void setExtrusionMode(celtech.utils.gcode.representation.ExtrusionMode) -> a
    61:61:celtech.utils.gcode.representation.MovementMode getMovementMode() -> c
    70:71:void setMovementMode(celtech.utils.gcode.representation.MovementMode) -> a
    80:96:java.lang.String toString() -> toString
celtech.utils.gcode.representation.GCodeMeshData -> celtech.utils.gcode.representation.d:
    javafx.scene.Group allParts -> a
    java.util.HashMap referencedElements -> b
    java.util.HashMap referencedLayers -> c
    18:33:void <init>(javafx.scene.Group,java.util.HashMap,java.util.HashMap) -> <init>
    41:41:javafx.scene.Group getAllParts() -> a
    50:50:java.util.HashMap getReferencedElements() -> b
    59:59:java.util.HashMap getReferencedArrays() -> c
celtech.utils.gcode.representation.GCodeTag -> celtech.utils.gcode.representation.e:
    int lineNumber -> a
    13:13:void <init>() -> <init>
    23:23:int getLineNumber() -> a
    32:33:void setLineNumber(int) -> a
celtech.utils.gcode.representation.Layer -> celtech.utils.gcode.representation.f:
    float zHeight -> a
    java.util.ArrayList movements -> b
    int layerNumber -> c
    13:18:void <init>() -> <init>
    26:27:void addMovement(celtech.utils.gcode.representation.CompoundMovement) -> a
    35:35:java.util.ArrayList getMovements() -> a
    44:45:void setLayerNumber(int) -> a
    53:53:int getLayerNumber() -> b
    63:76:java.lang.String toString() -> toString
celtech.utils.gcode.representation.Movement -> celtech.utils.gcode.representation.g:
    javafx.geometry.Point3D targetPosition -> a
    int gCodeLineNumber -> b
    17:29:void <init>(javafx.geometry.Point3D,int) -> <init>
    37:37:javafx.geometry.Point3D getTargetPosition() -> a
    46:46:int getGCodeLineNumber() -> b
    56:56:java.lang.String toString() -> toString
celtech.utils.gcode.representation.MovementMode -> celtech.utils.gcode.representation.MovementMode:
    celtech.utils.gcode.representation.MovementMode ABSOLUTE -> ABSOLUTE
    celtech.utils.gcode.representation.MovementMode RELATIVE -> RELATIVE
    celtech.utils.gcode.representation.MovementMode[] $VALUES -> $VALUES
    13:13:celtech.utils.gcode.representation.MovementMode[] values() -> values
    13:13:celtech.utils.gcode.representation.MovementMode valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:24:void <clinit>() -> <clinit>
celtech.utils.gcode.representation.MovementType -> celtech.utils.gcode.representation.MovementType:
    celtech.utils.gcode.representation.MovementType TRAVEL -> TRAVEL
    celtech.utils.gcode.representation.MovementType UNRETRACT -> UNRETRACT
    celtech.utils.gcode.representation.MovementType RETRACT -> RETRACT
    celtech.utils.gcode.representation.MovementType EXTRUDE -> EXTRUDE
    celtech.utils.gcode.representation.MovementType EXTRUDE_SUPPORT -> EXTRUDE_SUPPORT
    celtech.utils.gcode.representation.MovementType[] $VALUES -> $VALUES
    11:11:celtech.utils.gcode.representation.MovementType[] values() -> values
    11:11:celtech.utils.gcode.representation.MovementType valueOf(java.lang.String) -> valueOf
    11:11:void <init>(java.lang.String,int) -> <init>
    11:37:void <clinit>() -> <clinit>
celtech.utils.layout.RectangleLayerOuter -> ab.a:
    7:7:void <init>() -> <init>
celtech.utils.threed.AMFRepresentation -> celtech.utils.threed.a:
    java.lang.String unit -> a
    java.lang.String version -> b
    celtech.utils.threed.amf.AMFObject object -> c
    celtech.utils.threed.amf.Constellation constellation -> d
    java.util.List material -> e
    17:31:void <init>() -> <init>
    36:36:java.lang.String getUnit() -> a
    41:42:void setUnit(java.lang.String) -> a
    46:46:java.lang.String getVersion() -> b
    51:52:void setVersion(java.lang.String) -> b
    56:56:celtech.utils.threed.amf.AMFObject getObject() -> c
    61:62:void setObject(celtech.utils.threed.amf.AMFObject) -> a
    66:66:celtech.utils.threed.amf.Constellation getConstellation() -> d
    71:72:void setConstellation(celtech.utils.threed.amf.Constellation) -> a
    76:76:java.util.List getMaterial() -> e
    81:82:void setMaterial(java.util.List) -> a
celtech.utils.threed.CutResult -> celtech.utils.threed.b:
    libertysystems.stenographer.Stenographer steno -> f
    javafx.scene.shape.TriangleMesh mesh -> a
    java.util.Set loopsOfVerticesOnOpenFace -> b
    celtech.utils.threed.MeshCutter2$BedToLocalConverter bedToLocalConverter -> c
    celtech.utils.threed.MeshCutter2$TopBottom topBottom -> d
    boolean $assertionsDisabled -> e
    45:50:void <init>(javafx.scene.shape.TriangleMesh,java.util.Set,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.MeshCutter2$TopBottom) -> <init>
    58:98:java.util.Set identifyOuterLoopsAndInnerLoops() -> a
    102:104:celtech.utils.threed.Point getPointAt(celtech.utils.threed.PolygonIndices,int) -> a
    109:128:boolean contains(celtech.utils.threed.PolygonIndices,celtech.utils.threed.PolygonIndices) -> a
    137:141:boolean contains(celtech.utils.threed.Point,celtech.utils.threed.PolygonIndices) -> a
    147:154:boolean contains(celtech.utils.threed.Point,celtech.utils.threed.Point[]) -> a
    158:162:void validateLoopSets(java.util.Set) -> a
    165:173:void validateLoopSetsAreExclusive(java.util.Set) -> b
    176:185:void validateLoopSet(celtech.utils.threed.LoopSet) -> a
    24:27:void <clinit>() -> <clinit>
celtech.utils.threed.Edge -> celtech.utils.threed.c:
    int v0 -> a
    int v1 -> b
    14:17:void <init>(int,int) -> <init>
    22:22:java.lang.String toString() -> toString
    28:42:boolean equals(java.lang.Object) -> equals
    49:49:int hashCode() -> hashCode
celtech.utils.threed.LoopSet -> celtech.utils.threed.d:
    libertysystems.stenographer.Stenographer steno -> f
    int nextId -> a
    int id -> b
    celtech.utils.threed.PolygonIndices outerLoop -> c
    java.util.Set innerLoopSets -> d
    celtech.utils.threed.CutResult cutResult -> e
    243:250:void <init>(celtech.utils.threed.CutResult,celtech.utils.threed.PolygonIndices,java.util.Set) -> <init>
    253:253:boolean contains(celtech.utils.threed.PolygonIndices) -> a
    262:273:java.util.Set getRegions() -> a
    282:316:void addToContainingChild(celtech.utils.threed.PolygonIndices) -> b
    233:236:void <clinit>() -> <clinit>
celtech.utils.threed.ManifoldEdge -> celtech.utils.threed.e:
    int v0 -> a
    int v1 -> b
    javafx.geometry.Point3D point0 -> c
    javafx.geometry.Point3D point1 -> d
    int faceIndex -> e
    boolean visitedForwards -> f
    boolean visitedBackwards -> g
    19:29:void <init>(int,int,javafx.geometry.Point3D,javafx.geometry.Point3D,int) -> <init>
    32:35:boolean isVisited(celtech.utils.threed.NonManifoldLoopDetector$Direction) -> a
    40:45:void setVisited(celtech.utils.threed.NonManifoldLoopDetector$Direction) -> b
    48:53:javafx.geometry.Point2D getVectorForDirection(celtech.utils.threed.NonManifoldLoopDetector$Direction) -> c
    59:59:boolean isVisitedForwards() -> a
    64:65:void setVisitedForwards(boolean) -> a
    69:69:boolean isVisitedBackwards() -> b
    74:75:void setVisitedBackwards(boolean) -> b
    80:80:java.lang.String toString() -> toString
    86:101:boolean equals(java.lang.Object) -> equals
    108:108:int hashCode() -> hashCode
celtech.utils.threed.MeshCutter2 -> celtech.utils.threed.MeshCutter2:
    libertysystems.stenographer.Stenographer steno -> b
    java.util.Map debugLoopToEdges -> a
    31:31:void <init>() -> <init>
    55:58:javafx.geometry.Point3D makePoint3D(javafx.scene.shape.TriangleMesh,int) -> a
    68:102:java.util.List cut(javafx.scene.shape.TriangleMesh,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    114:136:celtech.utils.threed.CutResult getUncoveredMesh(javafx.scene.shape.TriangleMesh,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.MeshCutter2$TopBottom) -> a
    148:160:javafx.scene.shape.TriangleMesh makeSplitMesh(javafx.scene.shape.TriangleMesh,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.MeshCutter2$TopBottom) -> b
    169:184:void removeFaces(javafx.scene.shape.TriangleMesh,java.util.Set) -> a
    195:202:java.util.Set convertEdgesToVertices(java.util.Set) -> a
    211:251:org.apache.commons.math3.util.Pair convertEdgesToPolygonIndices(java.util.List) -> a
    257:277:java.util.Set removeSequentialDuplicateVertices(java.util.Set) -> b
    34:186:void <clinit>() -> <clinit>
celtech.utils.threed.MeshCutter2$BedToLocalConverter -> celtech.utils.threed.MeshCutter2$BedToLocalConverter:
    javafx.geometry.Point3D localToBed(javafx.geometry.Point3D) -> a
    javafx.geometry.Point3D bedToLocal(javafx.geometry.Point3D) -> b
celtech.utils.threed.MeshCutter2$TopBottom -> celtech.utils.threed.MeshCutter2$TopBottom:
    celtech.utils.threed.MeshCutter2$TopBottom TOP -> TOP
    celtech.utils.threed.MeshCutter2$TopBottom BOTTOM -> BOTTOM
    celtech.utils.threed.MeshCutter2$TopBottom[] $VALUES -> $VALUES
    38:38:celtech.utils.threed.MeshCutter2$TopBottom[] values() -> values
    38:38:celtech.utils.threed.MeshCutter2$TopBottom valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:41:void <clinit>() -> <clinit>
celtech.utils.threed.MeshDebug -> celtech.utils.threed.f:
    celtech.modelcontrol.ModelContainer node -> a
    java.util.Set nodesToShow -> b
    boolean close -> c
    44:44:void <init>() -> <init>
    53:54:void clearNodesToShow() -> a
    58:97:void showFaceCentres(java.util.List,javafx.scene.shape.TriangleMesh) -> a
    101:117:void showFace(javafx.scene.shape.TriangleMesh,int) -> a
    121:133:void showSphere(double,double,double) -> a
    137:143:void setDebuggingNode(celtech.modelcontrol.ModelContainer) -> a
    147:159:void showNewVertices(java.util.List,javafx.scene.shape.TriangleMesh) -> b
    163:178:void showIncomingMesh(javafx.scene.shape.TriangleMesh) -> a
    184:185:void close() -> b
    190:263:void visualiseEdgeLoops(java.util.Set,java.util.Set) -> a
    267:340:void visualiseDLPolygon(org.poly2tri.polygon.Polygon) -> a
    347:421:void visualisePolygonIndices(javafx.scene.shape.TriangleMesh,java.util.Set,java.util.Set,celtech.utils.threed.MeshCutter2$BedToLocalConverter,java.awt.Color,java.awt.Color) -> a
    49:180:void <clinit>() -> <clinit>
celtech.utils.threed.MeshDebug$1 -> celtech.utils.threed.f$1:
    java.util.Set val$loops -> a
    java.util.Set val$nonManifoldEdges -> b
    191:191:void <init>(java.util.Set,java.util.Set) -> <init>
    194:246:void run() -> run
celtech.utils.threed.MeshDebug$1$1 -> celtech.utils.threed.f$1$1:
    celtech.utils.threed.MeshDebug$1 this$0 -> a
    204:204:void <init>(celtech.utils.threed.MeshDebug$1) -> <init>
    209:210:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
celtech.utils.threed.MeshDebug$1$2 -> celtech.utils.threed.f$1$2:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$1 this$0 -> b
    214:214:void <init>(celtech.utils.threed.MeshDebug$1,celtech.utils.threed.MyPanel) -> <init>
    218:220:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    225:226:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
celtech.utils.threed.MeshDebug$1$3 -> celtech.utils.threed.f$1$3:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$1 this$0 -> b
    229:229:void <init>(celtech.utils.threed.MeshDebug$1,celtech.utils.threed.MyPanel) -> <init>
    233:241:void keyTyped(java.awt.event.KeyEvent) -> keyTyped
celtech.utils.threed.MeshDebug$2 -> celtech.utils.threed.f$2:
    org.poly2tri.polygon.Polygon val$outerPolygon -> a
    268:268:void <init>(org.poly2tri.polygon.Polygon) -> <init>
    271:323:void run() -> run
celtech.utils.threed.MeshDebug$2$1 -> celtech.utils.threed.f$2$1:
    javax.swing.JFrame val$f -> a
    celtech.utils.threed.MeshDebug$2 this$0 -> b
    279:279:void <init>(celtech.utils.threed.MeshDebug$2,javax.swing.JFrame) -> <init>
    284:286:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
celtech.utils.threed.MeshDebug$2$2 -> celtech.utils.threed.f$2$2:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$2 this$0 -> b
    290:290:void <init>(celtech.utils.threed.MeshDebug$2,celtech.utils.threed.MyPanel) -> <init>
    294:296:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    301:302:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
celtech.utils.threed.MeshDebug$2$3 -> celtech.utils.threed.f$2$3:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$2 this$0 -> b
    305:305:void <init>(celtech.utils.threed.MeshDebug$2,celtech.utils.threed.MyPanel) -> <init>
    309:317:void keyTyped(java.awt.event.KeyEvent) -> keyTyped
celtech.utils.threed.MeshDebug$3 -> celtech.utils.threed.f$3:
    javafx.scene.shape.TriangleMesh val$mesh -> a
    java.util.Set val$loopsOfVertices1 -> b
    java.util.Set val$loopsOfVertices2 -> c
    celtech.utils.threed.MeshCutter2$BedToLocalConverter val$bedToLocalConverter -> d
    java.awt.Color val$color1 -> e
    java.awt.Color val$color2 -> f
    348:348:void <init>(javafx.scene.shape.TriangleMesh,java.util.Set,java.util.Set,celtech.utils.threed.MeshCutter2$BedToLocalConverter,java.awt.Color,java.awt.Color) -> <init>
    351:404:void run() -> run
celtech.utils.threed.MeshDebug$3$1 -> celtech.utils.threed.f$3$1:
    javax.swing.JFrame val$f -> a
    celtech.utils.threed.MeshDebug$3 this$0 -> b
    360:360:void <init>(celtech.utils.threed.MeshDebug$3,javax.swing.JFrame) -> <init>
    365:367:void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
celtech.utils.threed.MeshDebug$3$2 -> celtech.utils.threed.f$3$2:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$3 this$0 -> b
    371:371:void <init>(celtech.utils.threed.MeshDebug$3,celtech.utils.threed.MyPanel) -> <init>
    375:377:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    382:383:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
celtech.utils.threed.MeshDebug$3$3 -> celtech.utils.threed.f$3$3:
    celtech.utils.threed.MyPanel val$panel -> a
    celtech.utils.threed.MeshDebug$3 this$0 -> b
    386:386:void <init>(celtech.utils.threed.MeshDebug$3,celtech.utils.threed.MyPanel) -> <init>
    390:398:void keyTyped(java.awt.event.KeyEvent) -> keyTyped
celtech.utils.threed.MeshSeparator -> celtech.utils.threed.g:
    22:22:void <init>() -> <init>
    43:69:java.util.List separate(javafx.scene.shape.TriangleMesh) -> a
    78:85:int findFirstUnvisitedVertex(boolean[]) -> a
    94:115:javafx.scene.shape.TriangleMesh makeSubMesh(javafx.scene.shape.TriangleMesh,java.util.Set) -> a
    125:133:void addFaceToMesh(javafx.scene.shape.TriangleMesh,int,javafx.scene.shape.TriangleMesh,int[]) -> a
    141:142:void addPointToMesh(javafx.scene.shape.TriangleMesh,java.lang.Integer,javafx.scene.shape.TriangleMesh) -> a
    149:156:java.util.Set getUsedVertices(javafx.scene.shape.TriangleMesh,java.util.Set) -> b
    164:175:void setTextureAndSmoothing(javafx.scene.shape.TriangleMesh,int) -> a
    184:200:void visitFace(java.util.Map,java.util.Set,javafx.scene.shape.TriangleMesh,boolean[],boolean[],java.lang.Integer) -> a
    210:220:void visitVertex(java.util.Map,java.util.Set,javafx.scene.shape.TriangleMesh,boolean[],boolean[],int) -> a
    229:235:java.util.Map makeFacesWithVertex(javafx.scene.shape.TriangleMesh) -> b
    241:258:void updateFacesWithVertices(javafx.scene.shape.TriangleMesh,int,java.util.Map) -> a
celtech.utils.threed.MeshSeparatorRunner -> celtech.utils.threed.h:
    javafx.scene.shape.TriangleMesh meshToSeparate -> a
    17:19:void <init>(javafx.scene.shape.TriangleMesh) -> <init>
    24:26:java.util.List call() -> a
    12:12:java.lang.Object call() -> call
celtech.utils.threed.MeshUtils -> celtech.utils.threed.MeshUtils:
    libertysystems.stenographer.Stenographer steno -> b
    boolean $assertionsDisabled -> a
    27:27:void <init>() -> <init>
    39:42:void removeUnusedAndDuplicateVertices(javafx.scene.shape.TriangleMesh) -> a
    47:71:void removeUnusedVertices(javafx.scene.shape.TriangleMesh) -> f
    75:90:void removeDuplicateVertices(javafx.scene.shape.TriangleMesh) -> b
    94:98:javafx.scene.shape.TriangleMesh copyMesh(javafx.scene.shape.TriangleMesh) -> c
    106:114:void replaceVertices(javafx.scene.shape.TriangleMesh,java.util.Map) -> b
    125:125:java.util.Optional validate(javafx.scene.shape.TriangleMesh) -> d
    134:152:java.util.Optional validate(javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    158:167:boolean testVerticesNotValid(javafx.scene.shape.TriangleMesh) -> g
    172:182:java.util.Set getFaceEdges(javafx.scene.shape.TriangleMesh,int) -> a
    191:192:boolean testMeshIsOrientable(javafx.scene.shape.TriangleMesh) -> e
    205:245:boolean testMeshIsOrientable(javafx.scene.shape.TriangleMesh,java.util.Map) -> a
    262:264:boolean checkOrientationCompatible(javafx.scene.shape.TriangleMesh,int,int,celtech.utils.threed.Edge) -> a
    273:289:celtech.utils.threed.MeshUtils$Orientation getOrientation(javafx.scene.shape.TriangleMesh,int,celtech.utils.threed.Edge) -> a
    299:337:boolean testMeshIsOpen(javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> b
    343:356:void printFace(javafx.scene.shape.TriangleMesh,int,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    362:369:int countFacesAdjacentToVertices(javafx.scene.shape.TriangleMesh,java.util.Map,int,int,int) -> a
    27:31:void <clinit>() -> <clinit>
celtech.utils.threed.MeshUtils$MeshError -> celtech.utils.threed.MeshUtils$MeshError:
    celtech.utils.threed.MeshUtils$MeshError INVALID_VERTEX_ID -> INVALID_VERTEX_ID
    celtech.utils.threed.MeshUtils$MeshError OPEN_MESH -> OPEN_MESH
    celtech.utils.threed.MeshUtils$MeshError MESH_NOT_ORIENTABLE -> MESH_NOT_ORIENTABLE
    celtech.utils.threed.MeshUtils$MeshError[] $VALUES -> $VALUES
    117:117:celtech.utils.threed.MeshUtils$MeshError[] values() -> values
    117:117:celtech.utils.threed.MeshUtils$MeshError valueOf(java.lang.String) -> valueOf
    117:117:void <init>(java.lang.String,int) -> <init>
    117:120:void <clinit>() -> <clinit>
celtech.utils.threed.MeshUtils$Orientation -> celtech.utils.threed.MeshUtils$Orientation:
    celtech.utils.threed.MeshUtils$Orientation FORWARDS -> FORWARDS
    celtech.utils.threed.MeshUtils$Orientation BACKWARDS -> BACKWARDS
    celtech.utils.threed.MeshUtils$Orientation[] $VALUES -> $VALUES
    249:249:celtech.utils.threed.MeshUtils$Orientation[] values() -> values
    249:249:celtech.utils.threed.MeshUtils$Orientation valueOf(java.lang.String) -> valueOf
    249:249:void <init>(java.lang.String,int) -> <init>
    249:252:void <clinit>() -> <clinit>
celtech.utils.threed.MyPanel -> celtech.utils.threed.MyPanel:
    java.util.Set loops -> loops
    java.util.Set nonManifoldEdges -> nonManifoldEdges
    org.poly2tri.polygon.Polygon outerPolygon -> outerPolygon
    double zoomCentreX -> zoomCentreX
    double zoomCentreY -> zoomCentreY
    double zoomFactor -> zoomFactor
    javafx.scene.shape.TriangleMesh mesh -> mesh
    java.util.Set polygonIndices1 -> polygonIndices1
    celtech.utils.threed.MeshCutter2$BedToLocalConverter bedToLocalConverter -> bedToLocalConverter
    java.awt.Color polygonIndicesColor1 -> polygonIndicesColor1
    java.util.Set polygonIndices2 -> polygonIndices2
    java.awt.Color polygonIndicesColor2 -> polygonIndicesColor2
    int startMouseX -> startMouseX
    int startMouseY -> startMouseY
    434:445:void <init>() -> <init>
    449:449:java.awt.Dimension getPreferredSize() -> getPreferredSize
    454:614:void paintComponent(java.awt.Graphics) -> paintComponent
    622:699:void drawPolygonIndices(java.awt.Graphics2D,java.util.Set,java.awt.Color) -> a
    704:734:void drawPolygon(org.poly2tri.polygon.Polygon,java.awt.Graphics2D,int,int,double,java.awt.Color) -> a
    738:739:void showLoops(java.util.Set) -> a
    743:744:void showNonManifoldEdges(java.util.Set) -> b
    748:749:void showPolygon(org.poly2tri.polygon.Polygon) -> a
    753:756:void selectZoomCentre(int,int) -> a
    760:762:void zoomIn() -> a
    766:770:void zoomOut() -> b
    776:778:void startMouse(int,int) -> b
    782:786:void endMouse(int,int) -> c
    792:798:void showPolygonIndices(javafx.scene.shape.TriangleMesh,java.util.Set,java.util.Set,celtech.utils.threed.MeshCutter2$BedToLocalConverter,java.awt.Color,java.awt.Color) -> a
celtech.utils.threed.NonManifoldLoopDetector -> celtech.utils.threed.NonManifoldLoopDetector:
    libertysystems.stenographer.Stenographer steno -> b
    boolean $assertionsDisabled -> a
    28:28:void <init>() -> <init>
    47:100:java.util.Set identifyNonManifoldLoops(javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    105:113:void validateLoops(java.util.Set) -> d
    118:118:boolean validateLoop(java.util.List) -> a
    129:216:java.util.Optional getLoopForEdgeInDirection(celtech.utils.threed.ManifoldEdge,java.util.Map,celtech.utils.threed.NonManifoldLoopDetector$Direction) -> a
    226:287:celtech.utils.threed.ManifoldEdge getRightmostEdge(int,celtech.utils.threed.ManifoldEdge,java.util.Set) -> a
    295:309:java.util.Map makeEdgesWithVertex(java.util.Set) -> a
    314:329:java.util.Set removeIdenticalLoops(java.util.Set) -> b
    339:348:java.util.Set removeLoopsWithChords(java.util.Set,java.util.Map) -> a
    353:362:java.util.Set removeLoopsWithZeroArea(java.util.Set) -> c
    367:374:boolean loopHasZeroArea(java.util.List) -> b
    379:391:double getPolygonArea(celtech.utils.threed.Point[]) -> a
    402:432:boolean loopHasChord(java.util.List,java.util.Map) -> a
    439:465:java.util.Set getNonManifoldEdges(javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> b
    28:31:void <clinit>() -> <clinit>
celtech.utils.threed.NonManifoldLoopDetector$Direction -> celtech.utils.threed.NonManifoldLoopDetector$Direction:
    celtech.utils.threed.NonManifoldLoopDetector$Direction FORWARDS -> FORWARDS
    celtech.utils.threed.NonManifoldLoopDetector$Direction BACKWARDS -> BACKWARDS
    celtech.utils.threed.NonManifoldLoopDetector$Direction[] $VALUES -> $VALUES
    33:33:celtech.utils.threed.NonManifoldLoopDetector$Direction[] values() -> values
    33:33:celtech.utils.threed.NonManifoldLoopDetector$Direction valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:36:void <clinit>() -> <clinit>
celtech.utils.threed.OpenFaceCloser -> celtech.utils.threed.i:
    libertysystems.stenographer.Stenographer steno -> b
    boolean $assertionsDisabled -> a
    32:32:void <init>() -> <init>
    45:125:javafx.scene.shape.TriangleMesh closeOpenFace(celtech.utils.threed.CutResult,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    133:145:void visualiseRegion(celtech.utils.threed.Region,javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.CutResult) -> a
    155:179:void debugOutputEdges(celtech.utils.threed.CutResult,java.util.List) -> a
    183:189:java.util.Set getKnownVertexIndices(celtech.utils.threed.Region) -> a
    217:231:org.poly2tri.polygon.Polygon makePolygon(java.util.List,javafx.scene.shape.TriangleMesh,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    246:314:void addTriangulatedFacesToMesh(javafx.scene.shape.TriangleMesh,org.poly2tri.polygon.Polygon,java.util.Set,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.MeshCutter2$TopBottom,java.util.Set,java.util.Map) -> a
    319:329:int makeFace(javafx.scene.shape.TriangleMesh,int,int,int,java.util.Map) -> a
    341:363:celtech.utils.threed.Vertex getOrMakeVertexForPoint(javafx.scene.shape.TriangleMesh,org.poly2tri.triangulation.TriangulationPoint,java.util.Set,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    374:393:void perturbVertices(javafx.scene.shape.TriangleMesh,celtech.utils.threed.PolygonIndices) -> a
    32:36:void <clinit>() -> <clinit>
celtech.utils.threed.OpenFaceCloser$PolygonPointWithVertexId -> celtech.utils.threed.i$a:
    int vertexId -> a
    204:206:void <init>(double,double,int) -> <init>
celtech.utils.threed.Point -> celtech.utils.threed.j:
    double x -> a
    double y -> b
    329:332:void <init>(double,double) -> <init>
celtech.utils.threed.PolygonIndices -> celtech.utils.threed.PolygonIndices:
    java.lang.String name -> name
    195:195:void <init>() -> <init>
    203:204:void setName(java.lang.String) -> a
    208:208:java.lang.String toString() -> toString
celtech.utils.threed.Region -> celtech.utils.threed.k:
    celtech.utils.threed.PolygonIndices outerLoop -> a
    java.util.Set innerLoops -> b
    222:225:void <init>(celtech.utils.threed.PolygonIndices,java.util.Set) -> <init>
celtech.utils.threed.ThreeDUtils -> celtech.utils.threed.l:
    javafx.geometry.Point3D X_AXIS_JFX -> a
    javafx.geometry.Point3D Y_AXIS_JFX -> b
    javafx.geometry.Point3D Z_AXIS_JFX -> c
    10:10:void <init>() -> <init>
    12:14:void <clinit>() -> <clinit>
celtech.utils.threed.TriangleCutter -> celtech.utils.threed.m:
    libertysystems.stenographer.Stenographer steno -> c
    float epsilon -> a
    boolean $assertionsDisabled -> b
    22:22:void <init>() -> <init>
    30:33:celtech.utils.threed.Vertex getVertex(javafx.scene.shape.TriangleMesh,int) -> a
    41:55:java.util.Set getEdgesOfFaceThatPlaneIntersects(javafx.scene.shape.TriangleMesh,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    63:75:int addNewOrGetVertex(javafx.scene.shape.TriangleMesh,celtech.utils.threed.Vertex) -> a
    84:86:java.lang.Integer makeIntersectingVertex(javafx.scene.shape.TriangleMesh,celtech.utils.threed.Edge,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    90:102:javafx.geometry.Point3D getFaceNormal(javafx.scene.shape.TriangleMesh,int) -> b
    111:127:java.util.Set getIntersectingEdgeVertices(javafx.scene.shape.TriangleMesh,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> b
    137:333:void splitFaceAndAddLowerFacesToMesh(javafx.scene.shape.TriangleMesh,java.util.Set,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter,celtech.utils.threed.MeshCutter2$TopBottom) -> a
    336:337:void reverseLastFaceNormal(javafx.scene.shape.TriangleMesh) -> a
    340:344:void reverseFaceNormal(javafx.scene.shape.TriangleMesh,int) -> c
    353:419:void cutWithOneVertexOnPlane(java.util.Set,int,int,int,boolean,boolean,boolean,javafx.scene.shape.TriangleMesh,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter,javafx.geometry.Point3D) -> a
    424:452:celtech.utils.threed.Vertex getIntersectingVertex(celtech.utils.threed.Edge,javafx.scene.shape.TriangleMesh,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    461:468:boolean lineIntersectsPlane(javafx.scene.shape.TriangleMesh,int,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> a
    473:490:java.util.Set getFaceVerticesIntersectingPlane(javafx.scene.shape.TriangleMesh,int,float,celtech.utils.threed.MeshCutter2$BedToLocalConverter) -> c
    22:25:void <clinit>() -> <clinit>
celtech.utils.threed.Vertex -> celtech.utils.threed.n:
    int meshVertexIndex -> a
    float x -> b
    float y -> c
    float z -> d
    21:26:void <init>(int,float,float,float) -> <init>
    29:34:void <init>(float,float,float) -> <init>
    39:39:java.lang.String toString() -> toString
    46:68:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
celtech.utils.threed.amf.AMFObject -> ac.a:
    int id -> a
    celtech.utils.threed.amf.Mesh mesh -> b
    21:23:void <init>(celtech.modelcontrol.ModelContainer,int) -> <init>
    27:27:celtech.utils.threed.amf.Mesh getMesh() -> a
    32:33:void setMesh(celtech.utils.threed.amf.Mesh) -> a
celtech.utils.threed.amf.Constellation -> ac.b:
    int id -> a
    java.util.List instance -> b
    11:11:void <init>() -> <init>
    22:22:int getId() -> a
    27:28:void setId(int) -> a
    32:32:java.util.List getInstance() -> b
    37:38:void setInstance(java.util.List) -> a
celtech.utils.threed.amf.ConstellationObjectInstance -> ac.c:
    int objectid -> a
    int deltax -> b
    int deltay -> c
    int deltaz -> d
    int rx -> e
    int ry -> f
    int rz -> g
    9:9:void <init>() -> <init>
    22:22:int getObjectid() -> a
    27:28:void setObjectid(int) -> a
    32:32:int getDeltax() -> b
    37:38:void setDeltax(int) -> b
    42:42:int getDeltay() -> c
    47:48:void setDeltay(int) -> c
    52:52:int getDeltaz() -> d
    57:58:void setDeltaz(int) -> d
    62:62:int getRx() -> e
    67:68:void setRx(int) -> e
    72:72:int getRy() -> f
    77:78:void setRy(int) -> f
    82:82:int getRz() -> g
    87:88:void setRz(int) -> g
celtech.utils.threed.amf.Coordinate -> ac.d:
    float x -> a
    float y -> b
    float z -> c
    7:12:void <init>() -> <init>
    16:16:float getX() -> a
    21:22:void setX(float) -> a
    26:26:float getY() -> b
    31:32:void setY(float) -> b
    36:36:float getZ() -> c
    41:42:void setZ(float) -> c
celtech.utils.threed.amf.Material -> ac.e:
    int id -> a
    celtech.utils.threed.amf.MaterialMetadata metadata -> b
    celtech.utils.threed.amf.MaterialColour color -> c
    9:9:void <init>() -> <init>
    19:19:int getId() -> a
    24:25:void setId(int) -> a
    29:29:celtech.utils.threed.amf.MaterialMetadata getMetadata() -> b
    34:35:void setMetadata(celtech.utils.threed.amf.MaterialMetadata) -> a
    39:39:celtech.utils.threed.amf.MaterialColour getColor() -> c
    44:45:void setColor(celtech.utils.threed.amf.MaterialColour) -> a
celtech.utils.threed.amf.MaterialColour -> ac.f:
    float r -> a
    float g -> b
    float b -> c
    7:11:void <init>() -> <init>
    15:15:float getR() -> a
    20:21:void setR(float) -> a
    25:25:float getG() -> b
    30:31:void setG(float) -> b
    35:35:float getB() -> c
    40:41:void setB(float) -> c
celtech.utils.threed.amf.MaterialMetadata -> ac.g:
    java.lang.String type -> a
    java.lang.String value -> b
    10:12:void <init>() -> <init>
    20:20:java.lang.String getType() -> a
    25:26:void setType(java.lang.String) -> a
    30:30:java.lang.String getValue() -> b
    35:36:void setValue(java.lang.String) -> b
celtech.utils.threed.amf.Mesh -> ac.h:
    java.util.List vertices -> a
    11:11:void <init>() -> <init>
    19:19:java.util.List getVertices() -> a
    24:25:void setVertices(java.util.List) -> a
celtech.utils.threed.amf.Vertex -> ac.i:
    celtech.utils.threed.amf.Coordinate coordinate -> a
    9:9:void <init>() -> <init>
    16:16:celtech.utils.threed.amf.Coordinate getCoordinate() -> a
    21:22:void setCoordinate(celtech.utils.threed.amf.Coordinate) -> a
celtech.utils.threed.importers.obj.MtlReader -> ad.a:
    java.lang.String baseUrl -> a
    java.util.Map materials -> b
    boolean modified -> c
    71:88:void <init>(java.lang.String,java.lang.String) -> <init>
    92:163:void read(java.io.InputStream) -> a
    167:178:void addMaterial(java.lang.String,javafx.scene.paint.PhongMaterial) -> a
    182:193:java.util.Optional materialAlreadyExists(javafx.scene.paint.PhongMaterial) -> a
    198:202:javafx.scene.paint.Color readColor(java.lang.String) -> a
    207:210:javafx.scene.image.Image loadImage(java.lang.String) -> b
    219:231:java.util.Map getMaterials() -> a
    236:244:boolean materialIsSame(javafx.scene.paint.PhongMaterial,javafx.scene.paint.PhongMaterial) -> a
celtech.utils.threed.importers.obj.ObjImporter -> ad.b:
    libertysystems.stenographer.Stenographer steno -> a
    boolean debug -> b
    float scale -> c
    boolean flatXZ -> d
    java.util.Map meshes -> e
    java.util.Map materialsForObjects -> f
    java.util.Map materialNameAgainstIndex -> g
    java.lang.String objFileUrl -> h
    int linesInFile -> i
    javafx.beans.property.DoubleProperty percentProgressProperty -> j
    celtech.coreUI.visualisation.metaparts.FloatArrayList verticesFromFile -> k
    celtech.coreUI.visualisation.metaparts.IntegerArrayList facesFromFile -> l
    int materialNumber -> m
    int facesStart -> n
    65:201:void <init>() -> <init>
    73:78:int vertexIndex(int) -> a
    95:95:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadURL(celtech.services.modelLoader.ModelLoaderTask,java.net.URL) -> a
    100:100:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadFile(celtech.services.modelLoader.ModelLoaderTask,java.lang.String) -> a
    107:165:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadFile(celtech.services.modelLoader.ModelLoaderTask,java.lang.String,javafx.beans.property.DoubleProperty,boolean) -> a
    170:170:javafx.scene.shape.TriangleMesh getMesh() -> a
    175:175:javafx.scene.shape.TriangleMesh getMesh(java.lang.String) -> a
    180:185:javafx.scene.shape.MeshView buildMeshView(java.lang.String) -> b
    190:191:void setDebug(boolean) -> a
    195:196:void setScale(float) -> a
    205:377:void read(java.io.InputStream,java.lang.String) -> a
    381:436:void addMesh(java.lang.String) -> c
    440:441:void setFlatXZ(boolean) -> b
    68:84:void <clinit>() -> <clinit>
celtech.utils.threed.importers.stl.STLFileParsingException -> celtech.utils.threed.importers.stl.STLFileParsingException:
    21:22:void <init>() -> <init>
    32:33:void <init>(java.lang.String) -> <init>
celtech.utils.threed.importers.stl.STLImporter -> celtech.utils.threed.importers.stl.a:
    libertysystems.stenographer.Stenographer steno -> a
    javafx.scene.shape.TriangleMesh meshToOutput -> b
    celtech.services.modelLoader.ModelLoaderTask parentTask -> c
    javafx.beans.property.DoubleProperty percentProgressProperty -> d
    java.lang.String spacePattern -> e
    38:46:void <init>() -> <init>
    51:124:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadFile(celtech.services.modelLoader.ModelLoaderTask,java.io.File,javafx.beans.property.DoubleProperty) -> a
    131:150:int getLines(java.io.File) -> b
    157:189:boolean isFileBinary(java.io.File) -> c
    195:336:javafx.scene.shape.TriangleMesh processBinarySTLData(java.io.File) -> a
    341:466:javafx.scene.shape.TriangleMesh processAsciiSTLData(java.io.File) -> d
    435:440:void lambda$processAsciiSTLData$3(float[],javafx.scene.shape.TriangleMesh,java.util.Map$Entry) -> a
    422:430:int lambda$processAsciiSTLData$2(java.util.Map$Entry,java.util.Map$Entry) -> a
    305:310:void lambda$processBinarySTLData$1(float[],javafx.scene.shape.TriangleMesh,java.util.Map$Entry) -> b
    292:300:int lambda$processBinarySTLData$0(java.util.Map$Entry,java.util.Map$Entry) -> b
celtech.utils.threed.importers.stl.STLLoadState -> celtech.utils.threed.importers.stl.STLLoadState:
    celtech.utils.threed.importers.stl.STLLoadState IDLE -> IDLE
    celtech.utils.threed.importers.stl.STLLoadState ASCII_FILE_STARTED -> ASCII_FILE_STARTED
    celtech.utils.threed.importers.stl.STLLoadState FACET_STARTED -> FACET_STARTED
    celtech.utils.threed.importers.stl.STLLoadState LOOP_STARTED -> LOOP_STARTED
    celtech.utils.threed.importers.stl.STLLoadState LOOP_ENDED -> LOOP_ENDED
    celtech.utils.threed.importers.stl.STLLoadState FACET_ENDED -> FACET_ENDED
    celtech.utils.threed.importers.stl.STLLoadState FILE_ENDED_OK -> FILE_ENDED_OK
    celtech.utils.threed.importers.stl.STLLoadState[] $VALUES -> $VALUES
    13:13:celtech.utils.threed.importers.stl.STLLoadState[] values() -> values
    13:13:celtech.utils.threed.importers.stl.STLLoadState valueOf(java.lang.String) -> valueOf
    13:13:void <init>(java.lang.String,int) -> <init>
    13:49:void <clinit>() -> <clinit>
celtech.utils.threed.importers.svg.SVGImporter -> celtech.utils.threed.importers.svg.a:
    libertysystems.stenographer.Stenographer steno -> a
    celtech.services.modelLoader.ModelLoaderTask parentTask -> b
    javafx.beans.property.DoubleProperty percentProgressProperty -> c
    46:51:void <init>() -> <init>
    56:216:celtech.coreUI.visualisation.metaparts.ModelLoadResult loadFile(celtech.services.modelLoader.ModelLoaderTask,java.io.File,javafx.beans.property.DoubleProperty) -> a
celtech.utils.threed.importers.svg.SVGMetaToRenderableEngine -> celtech.utils.threed.importers.svg.b:
    15:15:void <init>() -> <init>
    20:41:javafx.scene.Group renderSVG(java.util.List) -> a
celtech.utils.threed.importers.svg.ShapeContainer -> celtech.utils.threed.importers.svg.ShapeContainer:
    libertysystems.stenographer.Stenographer steno -> steno
    long serialVersionUID -> serialVersionUID
    java.util.List shapes -> shapes
    40:49:void <init>() -> <init>
    40:56:void <init>(java.io.File) -> <init>
    40:75:void <init>(java.lang.String,java.util.List) -> <init>
    40:87:void <init>(java.lang.String,javafx.scene.shape.Shape) -> <init>
    91:95:void initialise() -> e
    100:105:celtech.modelcontrol.ItemState getState() -> getState
    111:128:void setState(celtech.modelcontrol.ItemState) -> setState
    133:133:celtech.modelcontrol.ProjectifiableThing makeCopy() -> j
    139:139:void clearElements() -> a
    145:152:void translateBy(double,double) -> a
    157:159:void translateTo(double,double) -> c
    164:187:void translateXTo(double) -> e
    192:215:void translateDepthPositionTo(double) -> f
    220:229:void resizeHeight(double) -> c
    234:243:void resizeWidth(double) -> b
    248:257:void selectedAction() -> n
    262:301:boolean recalculateScreenExtents() -> x
    307:307:double getTransformedHeight() -> getTransformedHeight
    313:313:double getTransformedWidth() -> getTransformedWidth
    319:319:double getScaledWidth() -> getScaledWidth
    325:325:double getScaledHeight() -> getScaledHeight
    331:331:double getCentreX() -> getCentreX
    337:337:double getCentreY() -> getCentreY
    343:343:void printVolumeBoundsUpdated() -> z
    348:348:void checkOffBed() -> o
    353:353:javafx.geometry.Point2D transformShapeToRealWorldCoordinates(float,float) -> a
    358:358:java.util.List getShapes() -> b
    364:394:void shrinkToFitBed() -> l
    399:407:void setBedCentreOffsetTransform() -> setBedCentreOffsetTransform
    411:436:void initialiseTransforms() -> c
    441:468:celtech.roboxbase.utils.RectangularBounds calculateBoundsInLocal() -> p
    476:505:celtech.roboxbase.utils.RectangularBounds calculateBoundsInParentCoordinateSystem() -> s
    513:513:celtech.roboxbase.utils.RectangularBounds calculateBoundsInBedCoordinateSystem() -> r
    519:522:void updateScaleTransform() -> m
    526:532:void updateLastTransformedBoundsInParentForTranslateByX(double) -> a
    536:542:void updateLastTransformedBoundsInParentForTranslateByY(double) -> d
    547:550:void moveToCentre() -> d
celtech.web.AllCookiePolicy -> celtech.web.a:
    11:11:void <init>() -> <init>
    16:23:boolean shouldAccept(java.net.URI,java.net.HttpCookie) -> shouldAccept
celtech.web.CookieContainer -> celtech.web.CookieContainer:
    java.lang.String uri -> uri
    java.util.ArrayList headers -> headers
    24:28:void <init>() -> <init>
    24:38:void <init>(java.lang.String,java.util.List) -> <init>
    42:76:java.lang.String cookieToHeader(java.net.HttpCookie) -> cookieToHeader
    114:114:java.lang.String getUri() -> getUri
    119:120:void setUri(java.lang.String) -> setUri
    124:124:java.util.ArrayList getHeaders() -> getHeaders
    129:130:void setHeaders(java.util.ArrayList) -> setHeaders
    134:149:java.util.List revealTheCookies() -> revealTheCookies
    138:146:void lambda$revealTheCookies$2(java.util.ArrayList,java.lang.String) -> lambda$revealTheCookies$2
    141:145:void lambda$null$1(java.util.ArrayList,java.net.HttpCookie) -> lambda$null$1
    36:37:void lambda$new$0(java.net.HttpCookie) -> lambda$new$0
celtech.web.PersistentCookieStore -> celtech.web.b:
    libertysystems.stenographer.Stenographer steno -> a
    java.lang.String filename -> b
    celtech.roboxbase.crypto.CryptoFileStore cryptoFileStore -> c
    com.fasterxml.jackson.databind.ObjectMapper jsonMapper -> d
    java.net.CookieStore store -> e
    24:64:void <init>() -> <init>
    69:87:void run() -> run
    92:93:void add(java.net.URI,java.net.HttpCookie) -> add
    98:98:java.util.List get(java.net.URI) -> get
    104:104:java.util.List getCookies() -> getCookies
    110:110:java.util.List getURIs() -> getURIs
    116:116:boolean remove(java.net.URI,java.net.HttpCookie) -> remove
    122:122:boolean removeAll() -> removeAll
    75:76:void lambda$run$2(java.util.List,java.net.URI) -> a
    49:55:void lambda$new$1(celtech.web.CookieContainer) -> a
    50:50:void lambda$null$0(java.net.URI,java.net.HttpCookie) -> a
celtech.webserver.AutoMakerController -> ae.a:
    java.lang.String abortPrintPage -> a
    java.lang.String printSample1Page -> b
    libertysystems.stenographer.Stenographer steno -> c
    20:28:void <init>() -> <init>
    34:194:void handle(com.sun.net.httpserver.HttpExchange) -> handle
    23:24:void <clinit>() -> <clinit>
celtech.webserver.LocalWebInterface -> ae.b:
    libertysystems.stenographer.Stenographer steno -> a
    com.sun.net.httpserver.HttpServer server -> b
    18:41:void <init>() -> <init>
    45:46:void start() -> a
    50:51:void stop() -> b
celtech.webserver.LocalWebInterface$1 -> ae.b$1:
    celtech.webserver.LocalWebInterface this$0 -> a
    29:29:void <init>(celtech.webserver.LocalWebInterface,java.lang.String) -> <init>
    33:33:boolean checkCredentials(java.lang.String,java.lang.String) -> checkCredentials
jfxtras.styles.jmetro8.FilledSliderSkin -> jfxtras.styles.jmetro8.FilledSliderSkin:
    javafx.scene.chart.NumberAxis tickLine -> tickLine
    double trackToTickGap -> trackToTickGap
    boolean showTickMarks -> showTickMarks
    double thumbWidth -> thumbWidth
    double thumbHeight -> thumbHeight
    double trackStart -> trackStart
    double trackLength -> trackLength
    double thumbTop -> thumbTop
    double thumbLeft -> thumbLeft
    double preDragThumbPos -> preDragThumbPos
    javafx.geometry.Point2D dragStart -> dragStart
    javafx.scene.layout.StackPane thumb -> thumb
    javafx.scene.layout.StackPane track -> track
    javafx.scene.layout.StackPane fill -> fill
    boolean trackClicked -> trackClicked
    javafx.util.StringConverter stringConverterWrapper -> stringConverterWrapper
    28:172:void <init>(javafx.scene.control.Slider) -> <init>
    67:142:void initialize() -> initialize
    146:156:void mousePressedOnTrack(javafx.scene.input.MouseEvent) -> mousePressedOnTrack
    160:170:void mouseDraggedOnTrack(javafx.scene.input.MouseEvent) -> mouseDraggedOnTrack
    191:229:void setShowTickMarks(boolean,boolean) -> setShowTickMarks
    234:292:void handleControlPropertyChanged(java.lang.String) -> handleControlPropertyChanged
    299:339:void positionThumb(boolean) -> positionThumb
    347:437:void layoutChildren(double,double,double,double) -> layoutChildren
    441:441:double minTrackLength() -> minTrackLength
    447:453:double computeMinWidth(double,double,double,double,double) -> computeMinWidth
    460:466:double computeMinHeight(double,double,double,double,double) -> computeMinHeight
    473:485:double computePrefWidth(double,double,double,double,double) -> computePrefWidth
    492:503:double computePrefHeight(double,double,double,double,double) -> computePrefHeight
    511:516:double computeMaxWidth(double,double,double,double,double) -> computeMaxWidth
    523:528:double computeMaxHeight(double,double,double,double,double) -> computeMaxHeight
    21:21:void access$000(jfxtras.styles.jmetro8.FilledSliderSkin,javafx.scene.input.MouseEvent) -> access$000
    21:21:void access$100(jfxtras.styles.jmetro8.FilledSliderSkin,javafx.scene.input.MouseEvent) -> access$100
    21:21:javafx.geometry.Point2D access$202(jfxtras.styles.jmetro8.FilledSliderSkin,javafx.geometry.Point2D) -> access$202
    21:21:javafx.scene.layout.StackPane access$300(jfxtras.styles.jmetro8.FilledSliderSkin) -> access$300
    21:21:double access$402(jfxtras.styles.jmetro8.FilledSliderSkin,double) -> access$402
    21:21:javafx.geometry.Point2D access$200(jfxtras.styles.jmetro8.FilledSliderSkin) -> access$200
    21:21:double access$400(jfxtras.styles.jmetro8.FilledSliderSkin) -> access$400
    21:21:double access$500(jfxtras.styles.jmetro8.FilledSliderSkin) -> access$500
jfxtras.styles.jmetro8.FilledSliderSkin$1 -> jfxtras.styles.jmetro8.FilledSliderSkin$1:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    80:80:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    84:85:void handle(javafx.scene.input.MouseEvent) -> handle
    80:80:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$2 -> jfxtras.styles.jmetro8.FilledSliderSkin$2:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    88:88:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    91:92:void handle(javafx.scene.input.MouseEvent) -> handle
    88:88:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$3 -> jfxtras.styles.jmetro8.FilledSliderSkin$3:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    95:95:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    99:100:void handle(javafx.scene.input.MouseEvent) -> handle
    95:95:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$4 -> jfxtras.styles.jmetro8.FilledSliderSkin$4:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    103:103:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    107:108:void handle(javafx.scene.input.MouseEvent) -> handle
    103:103:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$5 -> jfxtras.styles.jmetro8.FilledSliderSkin$5:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    112:112:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    116:119:void handle(javafx.scene.input.MouseEvent) -> handle
    112:112:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$6 -> jfxtras.styles.jmetro8.FilledSliderSkin$6:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    123:123:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    127:128:void handle(javafx.scene.input.MouseEvent) -> handle
    123:123:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$7 -> jfxtras.styles.jmetro8.FilledSliderSkin$7:
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    132:132:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    136:140:void handle(javafx.scene.input.MouseEvent) -> handle
    132:132:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.FilledSliderSkin$8 -> jfxtras.styles.jmetro8.FilledSliderSkin$8:
    javafx.scene.control.Slider slider -> slider
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    173:174:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin) -> <init>
    179:179:java.lang.String toString(java.lang.Number) -> toString
    185:185:java.lang.Number fromString(java.lang.String) -> fromString
    173:173:java.lang.Object fromString(java.lang.String) -> fromString
    173:173:java.lang.String toString(java.lang.Object) -> toString
jfxtras.styles.jmetro8.FilledSliderSkin$9 -> jfxtras.styles.jmetro8.FilledSliderSkin$9:
    double val$startX -> val$startX
    double val$endX -> val$endX
    double val$startY -> val$startY
    double val$endY -> val$endY
    jfxtras.styles.jmetro8.FilledSliderSkin this$0 -> this$0
    315:318:void <init>(jfxtras.styles.jmetro8.FilledSliderSkin,double,double,double,double) -> <init>
    323:331:void interpolate(double) -> interpolate
jfxtras.styles.jmetro8.MetroPasswordFieldSkin -> jfxtras.styles.jmetro8.MetroPasswordFieldSkin:
    boolean shouldMaskText -> shouldMaskText
    10:14:void <init>(javafx.scene.control.TextField) -> <init>
    18:22:void rightButtonPressed() -> rightButtonPressed
    27:30:void rightButtonReleased() -> rightButtonReleased
    33:42:java.lang.String maskText(java.lang.String) -> maskText
jfxtras.styles.jmetro8.MetroTextFieldSkin -> jfxtras.styles.jmetro8.MetroTextFieldSkin:
    19:20:void <init>(javafx.scene.control.TextField) -> <init>
    24:25:void rightButtonPressed() -> rightButtonPressed
jfxtras.styles.jmetro8.TextFieldWithButtonSkin -> jfxtras.styles.jmetro8.TextFieldWithButtonSkin:
    javafx.scene.layout.StackPane rightButton -> rightButton
    javafx.scene.layout.Region rightButtonGraphic -> rightButtonGraphic
    javafx.scene.control.TextField textField -> textField
    25:47:void <init>(javafx.scene.control.TextField) -> <init>
    51:77:void setupListeners() -> setupListeners
    81:86:void textChanged() -> textChanged
    90:95:void focusChanged() -> focusChanged
    99:108:void layoutChildren(double,double,double,double) -> layoutChildren
    112:112:void rightButtonPressed() -> rightButtonPressed
    117:117:void rightButtonReleased() -> rightButtonReleased
jfxtras.styles.jmetro8.TextFieldWithButtonSkin$1 -> jfxtras.styles.jmetro8.TextFieldWithButtonSkin$1:
    jfxtras.styles.jmetro8.TextFieldWithButtonSkin this$0 -> this$0
    52:52:void <init>(jfxtras.styles.jmetro8.TextFieldWithButtonSkin) -> <init>
    55:56:void handle(javafx.scene.input.MouseEvent) -> handle
    52:52:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.TextFieldWithButtonSkin$2 -> jfxtras.styles.jmetro8.TextFieldWithButtonSkin$2:
    jfxtras.styles.jmetro8.TextFieldWithButtonSkin this$0 -> this$0
    58:58:void <init>(jfxtras.styles.jmetro8.TextFieldWithButtonSkin) -> <init>
    61:62:void handle(javafx.scene.input.MouseEvent) -> handle
    58:58:void handle(javafx.event.Event) -> handle
jfxtras.styles.jmetro8.TextFieldWithButtonSkin$3 -> jfxtras.styles.jmetro8.TextFieldWithButtonSkin$3:
    jfxtras.styles.jmetro8.TextFieldWithButtonSkin this$0 -> this$0
    65:65:void <init>(jfxtras.styles.jmetro8.TextFieldWithButtonSkin) -> <init>
    68:69:void changed(javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> changed
    65:65:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
jfxtras.styles.jmetro8.TextFieldWithButtonSkin$4 -> jfxtras.styles.jmetro8.TextFieldWithButtonSkin$4:
    jfxtras.styles.jmetro8.TextFieldWithButtonSkin this$0 -> this$0
    71:71:void <init>(jfxtras.styles.jmetro8.TextFieldWithButtonSkin) -> <init>
    74:75:void changed(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> changed
    71:71:void changed(javafx.beans.value.ObservableValue,java.lang.Object,java.lang.Object) -> changed
jfxtras.styles.jmetro8.ToggleSwitch -> jfxtras.styles.jmetro8.ToggleSwitch:
    javafx.beans.property.BooleanProperty selected -> selected
    javafx.beans.property.StringProperty turnOnText -> turnOnText
    javafx.beans.property.StringProperty turnOffText -> turnOffText
    java.lang.String DEFAULT_STYLE_CLASS -> DEFAULT_STYLE_CLASS
    javafx.css.PseudoClass PSEUDO_CLASS_SELECTED -> PSEUDO_CLASS_SELECTED
    23:25:void <init>() -> <init>
    32:36:void <init>(java.lang.String,java.lang.String) -> <init>
    39:40:void initialize() -> initialize
    53:54:void setSelected(boolean) -> setSelected
    57:57:boolean isSelected() -> isSelected
    61:80:javafx.beans.property.BooleanProperty selectedProperty() -> selectedProperty
    87:90:javafx.beans.property.StringProperty turnOnTextProperty() -> turnOnTextProperty
    93:93:void setTurnOnText(java.lang.String) -> setTurnOnText
    94:94:java.lang.String getTurnOnText() -> getTurnOnText
    100:103:javafx.beans.property.StringProperty turnOffTextProperty() -> turnOffTextProperty
    106:106:void setTurnOffText(java.lang.String) -> setTurnOffText
    107:107:java.lang.String getTurnOffText() -> getTurnOffText
    124:128:void fire() -> fire
    132:132:javafx.scene.control.Skin createDefaultSkin() -> createDefaultSkin
    12:12:javafx.css.PseudoClass access$000() -> access$000
    144:145:void <clinit>() -> <clinit>
jfxtras.styles.jmetro8.ToggleSwitch$1 -> jfxtras.styles.jmetro8.ToggleSwitch$1:
    jfxtras.styles.jmetro8.ToggleSwitch this$0 -> this$0
    62:62:void <init>(jfxtras.styles.jmetro8.ToggleSwitch) -> <init>
    64:67:void invalidated() -> invalidated
    71:71:java.lang.Object getBean() -> getBean
    76:76:java.lang.String getName() -> getName
jfxtras.styles.jmetro8.ToggleSwitchSkin -> jfxtras.styles.jmetro8.ToggleSwitchSkin:
    javafx.scene.layout.StackPane thumb -> thumb
    javafx.scene.layout.StackPane thumbArea -> thumbArea
    com.sun.javafx.scene.control.skin.LabeledText label -> label
    javafx.scene.layout.StackPane labelContainer -> labelContainer
    33:54:void <init>(jfxtras.styles.jmetro8.ToggleSwitch) -> <init>
    57:68:void selectedStateChanged() -> selectedStateChanged
    71:72:void mousePressedOnToggleSwitch(jfxtras.styles.jmetro8.ToggleSwitch) -> mousePressedOnToggleSwitch
    75:76:void updateLabel(jfxtras.styles.jmetro8.ToggleSwitch) -> updateLabel
    80:106:void layoutChildren(double,double,double,double) -> layoutChildren
    110:114:double computeMinWidth(double,double,double,double,double) -> computeMinWidth
    118:122:double computeMinHeight(double,double,double,double,double) -> computeMinHeight
    126:130:double computePrefWidth(double,double,double,double,double) -> computePrefWidth
    135:139:double computePrefHeight(double,double,double,double,double) -> computePrefHeight
    51:53:void lambda$new$2(javafx.beans.value.ObservableValue,java.lang.Boolean,java.lang.Boolean) -> lambda$new$2
    49:49:void lambda$new$1(jfxtras.styles.jmetro8.ToggleSwitch,javafx.scene.input.MouseEvent) -> lambda$new$1
    48:48:void lambda$new$0(jfxtras.styles.jmetro8.ToggleSwitch,javafx.scene.input.MouseEvent) -> lambda$new$0
jfxtras.styles.jmetro8.Utils -> jfxtras.styles.jmetro8.Utils:
    com.sun.javafx.scene.text.TextLayout layout -> layout
    11:11:void <init>() -> <init>
    25:27:double computeTextWidth(javafx.scene.text.Font,java.lang.String,double) -> computeTextWidth
    31:39:double computeTextHeight(javafx.scene.text.Font,java.lang.String,double,double,javafx.scene.text.TextBoundsType) -> computeTextHeight
    22:22:void <clinit>() -> <clinit>
libertysystems.configuration.ConfigItemIsAnArray -> libertysystems.configuration.ConfigItemIsAnArray:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
libertysystems.configuration.ConfigNotLoadedException -> libertysystems.configuration.ConfigNotLoadedException:
    19:20:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
libertysystems.configuration.ConfigProcessNameAlreadyDefinedException -> libertysystems.configuration.ConfigProcessNameAlreadyDefinedException:
    20:21:void <init>() -> <init>
    32:33:void <init>(java.lang.String) -> <init>
libertysystems.configuration.Configuration -> libertysystems.configuration.a:
    java.lang.String configFilePropertyName -> a
    java.lang.String config_componentPrefix -> b
    java.lang.String configFileName -> c
    boolean configLoaded -> d
    libertysystems.configuration.Configuration instance -> e
    org.apache.commons.configuration.XMLConfiguration config -> f
    java.lang.String userHomeReference -> g
    java.lang.String appdataReference -> h
    java.lang.String configReferenceEnclosure -> i
    java.lang.String configReferenceSeparator -> j
    java.lang.String userHomeDirectory -> k
    java.lang.String appdataDirectory -> l
    38:43:libertysystems.configuration.Configuration getInstance() -> a
    23:74:void <init>() -> <init>
    78:78:boolean isSystemConfigLoaded() -> b
    83:83:java.lang.String getComponentReference(java.lang.String,java.lang.String) -> e
    88:110:java.lang.String getString(java.lang.String,java.lang.String) -> a
    115:171:java.lang.String replaceReferences(java.lang.String,java.lang.String) -> f
    176:178:java.lang.String getFilenameString(java.lang.String,java.lang.String,java.lang.String) -> a
    183:200:java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> b
    205:216:boolean setString(java.lang.String,java.lang.String,java.lang.String) -> c
    221:231:java.lang.String[] getStringArray(java.lang.String,java.lang.String) -> b
    236:246:boolean getBoolean(java.lang.String,java.lang.String) -> c
    251:261:int getInt(java.lang.String,java.lang.String) -> d
    266:288:java.lang.String[] getComponents() -> c
    293:314:java.lang.String[] getConfigItems(java.lang.String) -> a
    320:321:void addConfigurationListener(java.lang.String,org.apache.commons.configuration.event.ConfigurationListener) -> a
    327:334:void main(java.lang.String[]) -> a
    27:27:void <clinit>() -> <clinit>
libertysystems.configuration.ConfigurationComponentListener -> libertysystems.configuration.b:
    java.lang.String componentName -> a
    17:22:void <init>(java.lang.String) -> <init>
    28:32:void configurationChanged(org.apache.commons.configuration.event.ConfigurationEvent) -> configurationChanged
libertysystems.configuration.ConfiguratorCoreConfig -> libertysystems.configuration.c:
    int APB_EXTERNAL_PORT -> a
    int APB_INTERNAL_PORT -> b
    11:11:void <init>() -> <init>
libertysystems.stenographer.InvalidLogLevelException -> libertysystems.stenographer.InvalidLogLevelException:
    19:20:void <init>() -> <init>
    28:29:void <init>(java.lang.String) -> <init>
libertysystems.stenographer.LevelDependentPatternLayout -> libertysystems.stenographer.a:
    java.lang.String DEFAULT_CONVERSION_PATTERN -> a
    java.lang.String TTCC_CONVERSION_PATTERN -> b
    int BUF_SIZE -> c
    int MAX_CAPACITY -> d
    java.lang.StringBuffer sbuf -> e
    java.lang.String defaultPattern -> f
    java.lang.String detailPattern -> g
    java.lang.String exceptionPattern -> h
    org.apache.log4j.helpers.PatternConverter defaultPatternConverter -> i
    org.apache.log4j.helpers.PatternConverter detailPatternConverter -> j
    org.apache.log4j.helpers.PatternConverter exceptionPatternConverter -> k
    50:51:void <init>() -> <init>
    29:70:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    77:79:void setDefaultPattern(java.lang.String) -> a
    86:88:void setDetailPattern(java.lang.String) -> b
    95:97:void setExceptionPattern(java.lang.String) -> c
    105:105:java.lang.String getDefaultConversionPattern() -> a
    114:114:java.lang.String getDetailConversionPattern() -> b
    124:124:void activateOptions() -> activateOptions
    134:134:boolean ignoresThrowable() -> ignoresThrowable
    144:144:org.apache.log4j.helpers.PatternParser createPatternParser(java.lang.String) -> d
    153:179:java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> format
libertysystems.stenographer.LogLevel -> libertysystems.stenographer.LogLevel:
    libertysystems.stenographer.LogLevel OFF -> OFF
    libertysystems.stenographer.LogLevel TRACE -> TRACE
    libertysystems.stenographer.LogLevel TRACE_ONLY -> TRACE_ONLY
    libertysystems.stenographer.LogLevel DEBUG -> DEBUG
    libertysystems.stenographer.LogLevel DEBUG_ONLY -> DEBUG_ONLY
    libertysystems.stenographer.LogLevel INFO -> INFO
    libertysystems.stenographer.LogLevel INFO_ONLY -> INFO_ONLY
    libertysystems.stenographer.LogLevel WARNING -> WARNING
    libertysystems.stenographer.LogLevel WARNING_ONLY -> WARNING_ONLY
    libertysystems.stenographer.LogLevel ERROR -> ERROR
    libertysystems.stenographer.LogLevel ERROR_ONLY -> ERROR_ONLY
    libertysystems.stenographer.LogLevel PASSTHROUGH -> PASSTHROUGH
    libertysystems.stenographer.LogLevel ALL -> ALL
    int logValue -> logValue
    boolean singleLevelLog -> singleLevelLog
    org.apache.log4j.Level log4jLevel -> log4jLevel
    libertysystems.stenographer.LogLevel[] $VALUES -> $VALUES
    25:25:libertysystems.stenographer.LogLevel[] values() -> values
    25:25:libertysystems.stenographer.LogLevel valueOf(java.lang.String) -> valueOf
    39:46:void <init>(java.lang.String,int,int,boolean,org.apache.log4j.Level) -> <init>
    50:50:int getValue() -> getValue
    62:62:org.apache.log4j.Level getLog4JLevel() -> getLog4JLevel
    75:91:boolean isLoggable(libertysystems.stenographer.LogLevel) -> isLoggable
    97:97:java.lang.String toString() -> toString
    25:35:void <clinit>() -> <clinit>
libertysystems.stenographer.LoggingOutputStream -> libertysystems.stenographer.b:
    java.lang.String LINE_SEPERATOR -> a
    boolean hasBeenClosed -> b
    byte[] buf -> c
    int count -> d
    int bufLength -> h
    int DEFAULT_BUFFER_LENGTH -> e
    org.apache.log4j.Category category -> f
    org.apache.log4j.Priority priority -> g
    48:84:void <init>() -> <init>
    48:112:void <init>(org.apache.log4j.Category,org.apache.log4j.Priority) -> <init>
    120:122:void close() -> close
    134:160:void write(int) -> write
    168:191:void flush() -> flush
    197:198:void reset() -> a
    43:43:void <clinit>() -> <clinit>
libertysystems.stenographer.Stenographer -> libertysystems.stenographer.Stenographer:
    org.apache.log4j.Logger logger -> a
    java.lang.String logAs -> b
    libertysystems.stenographer.LogLevel currentLogLevel -> c
    java.lang.String myFQCN -> d
    libertysystems.stenographer.LogLevel loglevel -> e
    21:34:void <init>(java.lang.String,libertysystems.stenographer.LogLevel) -> <init>
    47:51:void log(java.lang.String,libertysystems.stenographer.LogLevel) -> a
    64:68:void log(java.lang.String,libertysystems.stenographer.LogLevel,java.lang.Exception) -> a
    78:79:void trace(java.lang.String) -> a
    89:90:void debug(java.lang.String) -> b
    100:101:void info(java.lang.String) -> c
    111:112:void warning(java.lang.String) -> d
    122:123:void error(java.lang.String) -> e
    133:134:void exception(java.lang.String,java.lang.Exception) -> a
    144:145:void passthrough(java.lang.String) -> f
    158:160:void changeLogLevel(libertysystems.stenographer.LogLevel) -> a
    170:170:libertysystems.stenographer.LogLevel getCurrentLogLevel() -> a
libertysystems.stenographer.StenographerFactory -> libertysystems.stenographer.c:
    java.util.HashMap stenographers -> a
    boolean initialised -> b
    libertysystems.stenographer.LogLevel initialLogLevel -> c
    41:42:void <init>() -> <init>
    61:85:libertysystems.stenographer.Stenographer getStenographer(java.lang.String) -> a
    90:181:boolean initLogger() -> a
    203:214:boolean changeLogLevel(java.lang.String,libertysystems.stenographer.LogLevel) -> a
    228:239:boolean changeAllLogLevels(libertysystems.stenographer.LogLevel) -> a
    234:235:void lambda$changeAllLogLevels$0(libertysystems.stenographer.LogLevel,libertysystems.stenographer.Stenographer) -> a
    36:38:void <clinit>() -> <clinit>
libertysystems.stenographer.TestLog -> libertysystems.stenographer.d:
    11:11:void <init>() -> <init>
    19:29:void main(java.lang.String[]) -> a
